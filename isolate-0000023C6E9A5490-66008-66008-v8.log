v8-version,10,2,154,13,-node.9,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff6d80f0000,0x7ff6dc184000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7fffad8d0000,0x7fffadac8000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7fffaba80000,0x7fffabb3f000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7fffab0b0000,0x7fffab382000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\apphelp.dll,0x7fffa88d0000,0x7fffa8961000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7fffacd70000,0x7fffacddb000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7fffacc40000,0x7fffacd65000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7fff98440000,0x7fff98624000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7fffabd80000,0x7fffabd88000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7fffad130000,0x7fffad1de000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7fffaceb0000,0x7fffacf4e000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7fffacb40000,0x7fffacbdc000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7fffad6e0000,0x7fffad881000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7fffab440000,0x7fffab462000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7fffacf60000,0x7fffacf8b000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7fffab700000,0x7fffab80f000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7fffab500000,0x7fffab59d000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7fffab810000,0x7fffab910000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7fffab5a0000,0x7fffab6f6000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7fffab030000,0x7fffab057000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7fffaaec0000,0x7fffaaeee000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7fff96ca0000,0x7fff96cc7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7fffaa390000,0x7fffaa3cb000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7fffaa890000,0x7fffaa89c000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7fffab910000,0x7fffab942000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7fffaad80000,0x7fffaadcb000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7fffaad60000,0x7fffaad72000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7fffa89b0000,0x7fffa8a4e000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7fffabfe0000,0x7fffac335000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7fffaa6a0000,0x7fffaa70a000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7fffa8e80000,0x7fffa8e92000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7fffab470000,0x7fffab4f2000,0
shared-library-end
tick,0x7fffad96d144,571473,0,0x0,6
profiler,begin,1000
tick,0x7ff6d84c092a,574042,0,0x0,6
tick,0x7fffad8f611c,575352,0,0x0,6
tick,0x7fffad96d524,577367,0,0x0,6
new,CodeRange,0x7ff658f30000,0
new,MemoryChunk,0x26ec6bc0000,262144
new,MemoryChunk,0x10428180000,262144
new,MemoryChunk,0x1a3df300000,262144
new,MemoryChunk,0x9943440000,262144
new,MemoryChunk,0x2d3b14c0000,262144
heap-capacity,1030976
heap-available,2198828672
new,MemoryChunk,0x2e7dad80000,262144
tick,0x7ff6d88ff56e,579349,0,0x0,6
new,MemoryChunk,0x23c715c0000,262144
new,MemoryChunk,0x29c54340000,262144
new,MemoryChunk,0x20182d80000,262144
new,MemoryChunk,0x31522b00000,262144
tick,0x7ff6d890612c,581342,0,0x0,6
new,MemoryChunk,0x351f86c0000,262144
new,MemoryChunk,0x21777780000,262144
new,MemoryChunk,0x1b92a080000,262144
new,MemoryChunk,0x221f73c0000,262144
new,MemoryChunk,0x2c7d0800000,262144
new,MemoryChunk,0x7ff658f40000,262144
tick,0x7ff6d8906953,585110,0,0x0,6
new,MemoryChunk,0x1dac2300000,262144
code-creation,Builtin,2,586561,0x7ff6d8dc7434,800,DeoptimizationEntry_Eager
code-creation,Builtin,2,586615,0x7ff6d8dc7774,804,DeoptimizationEntry_Lazy
code-creation,Builtin,2,586639,0x7ff6d8dc7ab4,804,DeoptimizationEntry_Unused
code-creation,Builtin,2,586665,0x7ff6d8dc7df4,1384,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,586687,0x7ff6d8dc8374,460,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,586707,0x7ff6d8dc8574,664,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,586793,0x7ff6d8dc8834,216,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,586823,0x7ff6d8dc8934,376,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,586841,0x7ff6d8dc8ab4,140,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,586858,0x7ff6d8dc8b74,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,586875,0x7ff6d8dc8bf4,316,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,586893,0x7ff6d8dc8d34,368,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,586910,0x7ff6d8dc8eb4,404,CallFunction_ReceiverIsAny
code-creation,Builtin,2,586926,0x7ff6d8dc9074,104,CallBoundFunction
code-creation,Builtin,2,586942,0x7ff6d8dc90f4,832,CallWrappedFunction
code-creation,Builtin,2,586958,0x7ff6d8dc9474,168,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,586974,0x7ff6d8dc9534,168,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,586990,0x7ff6d8dc95f4,168,Call_ReceiverIsAny
code-creation,Builtin,2,587005,0x7ff6d8dc96b4,976,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,587021,0x7ff6d8dc9ab4,968,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,587038,0x7ff6d8dc9eb4,1056,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,587056,0x7ff6d8dca2f4,1048,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,587074,0x7ff6d8dca734,1056,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,587091,0x7ff6d8dcab74,1048,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,587108,0x7ff6d8dcafb4,920,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,587125,0x7ff6d8dcb374,920,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,587143,0x7ff6d8dcb734,920,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,587160,0x7ff6d8dcbaf4,744,CallProxy
code-creation,Builtin,2,587176,0x7ff6d8dcbdf4,152,CallVarargs
code-creation,Builtin,2,587191,0x7ff6d8dcbeb4,940,CallWithSpread
code-creation,Builtin,2,587208,0x7ff6d8dcc274,1956,CallWithSpread_Baseline
code-creation,Builtin,2,587224,0x7ff6d8dcca34,1900,CallWithSpread_WithFeedback
code-creation,Builtin,2,587240,0x7ff6d8dcd1b4,940,CallWithArrayLike
code-creation,Builtin,2,587256,0x7ff6d8dcd574,1872,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,587279,0x7ff6d8dcdcf4,156,CallForwardVarargs
code-creation,Builtin,2,587295,0x7ff6d8dcddb4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,587311,0x7ff6d8dcde74,136,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,587328,0x7ff6d8dcdf34,236,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,587345,0x7ff6d8dce034,324,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,587362,0x7ff6d8dce1b4,32,ConstructFunction
code-creation,Builtin,2,587377,0x7ff6d8dce1f4,104,ConstructBoundFunction
code-creation,Builtin,2,587394,0x7ff6d8dce274,28,ConstructedNonConstructable
code-creation,Builtin,2,587410,0x7ff6d8dce2b4,100,Construct
code-creation,Builtin,2,587425,0x7ff6d8dce334,152,ConstructVarargs
code-creation,Builtin,2,587440,0x7ff6d8dce3f4,968,ConstructWithSpread
code-creation,Builtin,2,587455,0x7ff6d8dce7f4,1756,ConstructWithSpread_Baseline
code-creation,Builtin,2,587470,0x7ff6d8dceef4,1744,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,587487,0x7ff6d8dcf5f4,964,ConstructWithArrayLike
code-creation,Builtin,2,587502,0x7ff6d8dcf9f4,1708,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,587518,0x7ff6d8dd00b4,196,ConstructForwardVarargs
code-creation,Builtin,2,587534,0x7ff6d8dd01b4,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,587551,0x7ff6d8dd02b4,780,Construct_Baseline
code-creation,Builtin,2,587566,0x7ff6d8dd05f4,800,Construct_WithFeedback
code-creation,Builtin,2,587582,0x7ff6d8dd0934,476,JSConstructStubGeneric
code-creation,Builtin,2,587595,0x7ff6d8dd0b34,368,JSBuiltinsConstructStub
code-creation,Builtin,2,587609,0x7ff6d8dd0cb4,652,FastNewObject
code-creation,Builtin,2,587622,0x7ff6d8dd0f74,296,FastNewClosure
code-creation,Builtin,2,587636,0x7ff6d8dd10b4,724,ConstructProxy
code-creation,Builtin,2,587703,0x7ff6d8dd13b4,360,JSEntry
code-creation,Builtin,2,587727,0x7ff6d8dd1534,360,JSConstructEntry
code-creation,Builtin,2,587743,0x7ff6d8dd16b4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,587758,0x7ff6d8dd1834,100,JSEntryTrampoline
code-creation,Builtin,2,587774,0x7ff6d8dd18b4,100,JSConstructEntryTrampoline
code-creation,Builtin,2,587789,0x7ff6d8dd1934,288,ResumeGeneratorTrampoline
code-creation,Builtin,2,587805,0x7ff6d8dd1a74,1500,StringFromCodePointAt
code-creation,Builtin,2,587821,0x7ff6d8dd2074,528,StringEqual
code-creation,Builtin,2,587837,0x7ff6d8dd22b4,280,StringGreaterThan
code-creation,Builtin,2,587853,0x7ff6d8dd23f4,280,StringGreaterThanOrEqual
tick,0x7ff6d8900726,596101,0,0x0,6
tick,0x7fffad96d1c4,596219,0,0x0,6
code-creation,Builtin,2,596287,0x7ff6d8dd2534,280,StringLessThan
code-creation,Builtin,2,596350,0x7ff6d8dd2674,280,StringLessThanOrEqual
code-creation,Builtin,2,596382,0x7ff6d8dd27b4,2424,StringSubstring
code-creation,Builtin,2,596518,0x7ff6d8dd3134,80,OrderedHashTableHealIndex
code-creation,Builtin,2,596546,0x7ff6d8dd31b4,1264,InterpreterEntryTrampoline
code-creation,Builtin,2,596567,0x7ff6d8dd36b4,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,596591,0x7ff6d8dd3734,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,596616,0x7ff6d8dd37b4,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,596635,0x7ff6d8dd3834,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,596655,0x7ff6d8dd38b4,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,596682,0x7ff6d8dd3934,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,596706,0x7ff6d8dd39b4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,596727,0x7ff6d8dd3a34,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,596753,0x7ff6d8dd3b34,52,InterpreterOnStackReplacement
code-creation,Builtin,2,596780,0x7ff6d8dd3b74,688,BaselineOutOfLinePrologue
code-creation,Builtin,2,596806,0x7ff6d8dd3e34,56,BaselineOnStackReplacement
code-creation,Builtin,2,596834,0x7ff6d8dd3e74,84,BaselineLeaveFrame
code-creation,Builtin,2,596854,0x7ff6d8dd3ef4,220,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,596883,0x7ff6d8dd3ff4,228,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,596911,0x7ff6d8dd40f4,196,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,596940,0x7ff6d8dd41f4,1188,CompileLazy
code-creation,Builtin,2,596965,0x7ff6d8dd46b4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,596991,0x7ff6d8dd4734,256,InstantiateAsmJs
code-creation,Builtin,2,597013,0x7ff6d8dd4874,32,NotifyDeoptimized
code-creation,Builtin,2,597032,0x7ff6d8dd48b4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,597053,0x7ff6d8dd48f4,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,597076,0x7ff6d8dd4934,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,597096,0x7ff6d8dd4974,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,597114,0x7ff6d8dd49f4,292,CallApiCallback
code-creation,Builtin,2,597136,0x7ff6d8dd4b34,276,CallApiGetter
code-creation,Builtin,2,597155,0x7ff6d8dd4c74,12,HandleApiCall
code-creation,Builtin,2,597182,0x7ff6d8dd4cb4,12,HandleApiCallAsFunction
code-creation,Builtin,2,597198,0x7ff6d8dd4cf4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,597213,0x7ff6d8dd4d34,64,AllocateInYoungGeneration
code-creation,Builtin,2,597229,0x7ff6d8dd4db4,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,597247,0x7ff6d8dd4df4,64,AllocateInOldGeneration
code-creation,Builtin,2,597335,0x7ff6d8dd4e74,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,597370,0x7ff6d8dd4eb4,432,CopyFastSmiOrObjectElements
code-creation,Builtin,2,597400,0x7ff6d8dd5074,508,GrowFastDoubleElements
code-creation,Builtin,2,597429,0x7ff6d8dd5274,404,GrowFastSmiOrObjectElements
code-creation,Builtin,2,597458,0x7ff6d8dd5434,480,DebugBreakTrampoline
code-creation,Builtin,2,597487,0x7ff6d8dd5634,184,ToNumber
code-creation,Builtin,2,597513,0x7ff6d8dd56f4,300,ToNumber_Baseline
code-creation,Builtin,2,597548,0x7ff6d8dd5834,368,ToNumeric_Baseline
code-creation,Builtin,2,597577,0x7ff6d8dd59b4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,597606,0x7ff6d8dd5a34,224,ToNumberConvertBigInt
code-creation,Builtin,2,597640,0x7ff6d8dd5b34,140,Typeof
code-creation,Builtin,2,597663,0x7ff6d8dd5bf4,108,BigIntToI64
code-creation,Builtin,2,597684,0x7ff6d8dd5c74,4,BigIntToI32Pair
code-creation,Builtin,2,597712,0x7ff6d8dd5cb4,228,I64ToBigInt
code-creation,Builtin,2,597732,0x7ff6d8dd5db4,4,I32PairToBigInt
code-creation,Builtin,2,597752,0x7ff6d8dd5df4,112,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,597783,0x7ff6d8dd5e74,4044,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,597817,0x7ff6d8dd6e74,15632,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,597847,0x7ff6d8ddabb4,12068,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,597879,0x7ff6d8dddaf4,464,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,597903,0x7ff6d8dddcf4,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,597922,0x7ff6d8dddd74,12,LoadIC_StringLength
code-creation,Builtin,2,597980,0x7ff6d8ddddb4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,598004,0x7ff6d8ddddf4,3064,LoadIC_NoFeedback
code-creation,Builtin,2,598024,0x7ff6d8dde9f4,32,StoreGlobalIC_Slow
code-creation,Builtin,2,598042,0x7ff6d8ddea34,7352,StoreIC_NoFeedback
code-creation,Builtin,2,598060,0x7ff6d8de06f4,3248,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,598084,0x7ff6d8de13b4,184,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,598103,0x7ff6d8de1474,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,598122,0x7ff6d8de14f4,240,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,598143,0x7ff6d8de15f4,240,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,598165,0x7ff6d8de16f4,240,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,598187,0x7ff6d8de17f4,240,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,598208,0x7ff6d8de18f4,14928,StoreFastElementIC_Standard
code-creation,Builtin,2,598228,0x7ff6d8de5374,9808,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,598254,0x7ff6d8de79f4,13988,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,598281,0x7ff6d8deb0b4,5620,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,598317,0x7ff6d8dec6b4,8600,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,598362,0x7ff6d8dee874,19636,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,598390,0x7ff6d8df3534,8600,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,598416,0x7ff6d8df56f4,11164,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,598445,0x7ff6d8df82b4,820,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,598474,0x7ff6d8df85f4,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,598498,0x7ff6d8df86b4,72,HasIndexedInterceptorIC
code-creation,Builtin,2,598518,0x7ff6d8df8734,172,EnqueueMicrotask
code-creation,Builtin,2,598546,0x7ff6d8df87f4,8,RunMicrotasksTrampoline
code-creation,Builtin,2,598570,0x7ff6d8df8834,3796,RunMicrotasks
code-creation,Builtin,2,598590,0x7ff6d8df9734,2716,HasProperty
code-creation,Builtin,2,598606,0x7ff6d8dfa1f4,1180,DeleteProperty
code-creation,Builtin,2,598623,0x7ff6d8dfa6b4,2004,CopyDataProperties
code-creation,Builtin,2,598638,0x7ff6d8dfaeb4,9384,SetDataProperties
code-creation,Builtin,2,598667,0x7ff6d8dfd374,2736,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,598694,0x7ff6d8dfde34,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,598722,0x7ff6d8dfde74,28,Abort
code-creation,Builtin,2,598751,0x7ff6d8dfdeb4,28,AbortCSADcheck
code-creation,Builtin,2,598780,0x7ff6d8dfdef4,12,EmptyFunction
code-creation,Builtin,2,598808,0x7ff6d8dfdf34,12,Illegal
code-creation,Builtin,2,598836,0x7ff6d8dfdf74,12,StrictPoisonPillThrower
code-creation,Builtin,2,598864,0x7ff6d8dfdfb4,12,UnsupportedThrower
code-creation,Builtin,2,598895,0x7ff6d8dfdff4,60,ReturnReceiver
code-creation,Builtin,2,598925,0x7ff6d8dfe034,36,ArrayConstructor
code-creation,Builtin,2,599032,0x7ff6d8dfe074,412,ArrayConstructorImpl
code-creation,Builtin,2,599058,0x7ff6d8dfe234,220,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,599078,0x7ff6d8dfe334,220,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,599098,0x7ff6d8dfe434,180,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,599116,0x7ff6d8dfe4f4,180,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,599135,0x7ff6d8dfe5b4,180,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,599154,0x7ff6d8dfe674,180,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,599172,0x7ff6d8dfe734,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,599190,0x7ff6d8dfe834,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,599209,0x7ff6d8dfe934,508,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,599227,0x7ff6d8dfeb34,472,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,599248,0x7ff6d8dfed34,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,599266,0x7ff6d8dfeef4,400,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,599284,0x7ff6d8dff0b4,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,599303,0x7ff6d8dff274,400,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,599321,0x7ff6d8dff434,444,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,599341,0x7ff6d8dff5f4,408,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,599360,0x7ff6d8dff7b4,56,ArrayNArgumentsConstructor
code-creation,Builtin,2,599377,0x7ff6d8dff7f4,12,ArrayConcat
code-creation,Builtin,2,599435,0x7ff6d8dff834,12,ArrayPrototypeFill
code-creation,Builtin,2,599454,0x7ff6d8dff874,928,ArrayIncludesSmiOrObject
code-creation,Builtin,2,599469,0x7ff6d8dffc34,152,ArrayIncludesPackedDoubles
code-creation,Builtin,2,599484,0x7ff6d8dffcf4,220,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,599499,0x7ff6d8dffdf4,544,ArrayIncludes
code-creation,Builtin,2,599513,0x7ff6d8e00034,844,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,599528,0x7ff6d8e003b4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,599545,0x7ff6d8e00434,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,599561,0x7ff6d8e004b4,548,ArrayIndexOf
code-creation,Builtin,2,599638,0x7ff6d8e006f4,12,ArrayPop
code-creation,Builtin,2,599664,0x7ff6d8e00734,608,ArrayPrototypePop
code-creation,Builtin,2,599710,0x7ff6d8e009b4,12,ArrayPrototypeGroupBy
code-creation,Builtin,2,599729,0x7ff6d8e009f4,12,ArrayPrototypeGroupByToMap
code-creation,Builtin,2,599745,0x7ff6d8e00a34,12,ArrayPush
code-creation,Builtin,2,599761,0x7ff6d8e00a74,2428,ArrayPrototypePush
code-creation,Builtin,2,599776,0x7ff6d8e013f4,12,ArrayShift
code-creation,Builtin,2,599791,0x7ff6d8e01434,12,ArrayUnshift
code-creation,Builtin,2,599806,0x7ff6d8e01474,964,CloneFastJSArray
code-creation,Builtin,2,599822,0x7ff6d8e01874,2168,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,599838,0x7ff6d8e020f4,992,ExtractFastJSArray
code-creation,Builtin,2,599853,0x7ff6d8e024f4,260,ArrayPrototypeEntries
code-creation,Builtin,2,599869,0x7ff6d8e02634,244,ArrayPrototypeKeys
code-creation,Builtin,2,599884,0x7ff6d8e02734,260,ArrayPrototypeValues
code-creation,Builtin,2,599901,0x7ff6d8e02874,4464,ArrayIteratorPrototypeNext
code-creation,Builtin,2,599956,0x7ff6d8e039f4,4152,FlattenIntoArray
code-creation,Builtin,2,599982,0x7ff6d8e04a34,4168,FlatMapIntoArray
code-creation,Builtin,2,599998,0x7ff6d8e05ab4,384,ArrayPrototypeFlat
code-creation,Builtin,2,600013,0x7ff6d8e05c74,444,ArrayPrototypeFlatMap
code-creation,Builtin,2,600027,0x7ff6d8e05e34,12,ArrayBufferConstructor
code-creation,Builtin,2,600043,0x7ff6d8e05e74,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,600071,0x7ff6d8e05eb4,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,600128,0x7ff6d8e05ef4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,600149,0x7ff6d8e05f34,924,AsyncFunctionEnter
code-creation,Builtin,2,600166,0x7ff6d8e062f4,80,AsyncFunctionReject
code-creation,Builtin,2,600182,0x7ff6d8e06374,76,AsyncFunctionResolve
code-creation,Builtin,2,600198,0x7ff6d8e063f4,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,600215,0x7ff6d8e06434,1820,AsyncFunctionAwaitCaught
code-creation,Builtin,2,600234,0x7ff6d8e06b74,1820,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,600250,0x7ff6d8e072b4,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,600264,0x7ff6d8e07374,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,600280,0x7ff6d8e07434,12,BigIntConstructor
code-creation,Builtin,2,600296,0x7ff6d8e07474,12,BigIntAsUintN
code-creation,Builtin,2,600310,0x7ff6d8e074b4,12,BigIntAsIntN
code-creation,Builtin,2,600325,0x7ff6d8e074f4,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,600340,0x7ff6d8e07534,12,BigIntPrototypeToString
code-creation,Builtin,2,600355,0x7ff6d8e07574,12,BigIntPrototypeValueOf
code-creation,Builtin,2,600370,0x7ff6d8e075b4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,600385,0x7ff6d8e075f4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,600409,0x7ff6d8e07634,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,600441,0x7ff6d8e07674,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,600465,0x7ff6d8e076b4,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,600487,0x7ff6d8e076f4,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,600533,0x7ff6d8e07734,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,600565,0x7ff6d8e07774,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,600587,0x7ff6d8e077b4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,600617,0x7ff6d8e077f4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,600645,0x7ff6d8e07834,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,600676,0x7ff6d8e07874,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,600706,0x7ff6d8e078b4,12,CallSitePrototypeGetThis
code-creation,Builtin,2,600737,0x7ff6d8e078f4,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,600758,0x7ff6d8e07934,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,600775,0x7ff6d8e07974,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,600801,0x7ff6d8e079b4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,600832,0x7ff6d8e079f4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,600888,0x7ff6d8e07a34,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,600914,0x7ff6d8e07a74,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,600942,0x7ff6d8e07ab4,12,CallSitePrototypeToString
code-creation,Builtin,2,600971,0x7ff6d8e07af4,12,ConsoleDebug
code-creation,Builtin,2,600996,0x7ff6d8e07b34,12,ConsoleError
code-creation,Builtin,2,601013,0x7ff6d8e07b74,12,ConsoleInfo
code-creation,Builtin,2,601034,0x7ff6d8e07bb4,12,ConsoleLog
code-creation,Builtin,2,601064,0x7ff6d8e07bf4,12,ConsoleWarn
code-creation,Builtin,2,601095,0x7ff6d8e07c34,12,ConsoleDir
code-creation,Builtin,2,601123,0x7ff6d8e07c74,12,ConsoleDirXml
code-creation,Builtin,2,601144,0x7ff6d8e07cb4,12,ConsoleTable
code-creation,Builtin,2,601187,0x7ff6d8e07cf4,12,ConsoleTrace
code-creation,Builtin,2,601213,0x7ff6d8e07d34,12,ConsoleGroup
code-creation,Builtin,2,601272,0x7ff6d8e07d74,12,ConsoleGroupCollapsed
code-creation,Builtin,2,601306,0x7ff6d8e07db4,12,ConsoleGroupEnd
code-creation,Builtin,2,601336,0x7ff6d8e07df4,12,ConsoleClear
code-creation,Builtin,2,601366,0x7ff6d8e07e34,12,ConsoleCount
code-creation,Builtin,2,601396,0x7ff6d8e07e74,12,ConsoleCountReset
code-creation,Builtin,2,601426,0x7ff6d8e07eb4,12,ConsoleAssert
code-creation,Builtin,2,601456,0x7ff6d8e07ef4,12,ConsoleProfile
code-creation,Builtin,2,601501,0x7ff6d8e07f34,12,ConsoleProfileEnd
code-creation,Builtin,2,601527,0x7ff6d8e07f74,12,ConsoleTime
code-creation,Builtin,2,601543,0x7ff6d8e07fb4,12,ConsoleTimeLog
code-creation,Builtin,2,601564,0x7ff6d8e07ff4,12,ConsoleTimeEnd
code-creation,Builtin,2,601591,0x7ff6d8e08034,12,ConsoleTimeStamp
code-creation,Builtin,2,601619,0x7ff6d8e08074,12,ConsoleContext
code-creation,Builtin,2,601648,0x7ff6d8e080b4,12,DataViewConstructor
code-creation,Builtin,2,601678,0x7ff6d8e080f4,12,DateConstructor
code-creation,Builtin,2,601709,0x7ff6d8e08134,220,DatePrototypeGetDate
code-creation,Builtin,2,601740,0x7ff6d8e08234,220,DatePrototypeGetDay
code-creation,Builtin,2,601765,0x7ff6d8e08334,220,DatePrototypeGetFullYear
code-creation,Builtin,2,601790,0x7ff6d8e08434,220,DatePrototypeGetHours
code-creation,Builtin,2,601819,0x7ff6d8e08534,212,DatePrototypeGetMilliseconds
code-creation,Builtin,2,601874,0x7ff6d8e08634,220,DatePrototypeGetMinutes
code-creation,Builtin,2,601901,0x7ff6d8e08734,220,DatePrototypeGetMonth
code-creation,Builtin,2,601918,0x7ff6d8e08834,220,DatePrototypeGetSeconds
code-creation,Builtin,2,601943,0x7ff6d8e08934,124,DatePrototypeGetTime
code-creation,Builtin,2,601972,0x7ff6d8e089b4,212,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,602001,0x7ff6d8e08ab4,212,DatePrototypeGetUTCDate
code-creation,Builtin,2,602029,0x7ff6d8e08bb4,212,DatePrototypeGetUTCDay
code-creation,Builtin,2,602057,0x7ff6d8e08cb4,212,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,602089,0x7ff6d8e08db4,212,DatePrototypeGetUTCHours
code-creation,Builtin,2,602118,0x7ff6d8e08eb4,212,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,602147,0x7ff6d8e08fb4,212,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,602174,0x7ff6d8e090b4,212,DatePrototypeGetUTCMonth
code-creation,Builtin,2,602204,0x7ff6d8e091b4,212,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,602227,0x7ff6d8e092b4,124,DatePrototypeValueOf
code-creation,Builtin,2,602269,0x7ff6d8e09334,372,DatePrototypeToPrimitive
code-creation,Builtin,2,602299,0x7ff6d8e094b4,12,DatePrototypeGetYear
code-creation,Builtin,2,602318,0x7ff6d8e094f4,12,DatePrototypeSetYear
code-creation,Builtin,2,602334,0x7ff6d8e09534,12,DateNow
code-creation,Builtin,2,602349,0x7ff6d8e09574,12,DateParse
code-creation,Builtin,2,602364,0x7ff6d8e095b4,12,DatePrototypeSetDate
code-creation,Builtin,2,602379,0x7ff6d8e095f4,12,DatePrototypeSetFullYear
code-creation,Builtin,2,602394,0x7ff6d8e09634,12,DatePrototypeSetHours
code-creation,Builtin,2,602414,0x7ff6d8e09674,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,602443,0x7ff6d8e096b4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,602468,0x7ff6d8e096f4,12,DatePrototypeSetMonth
code-creation,Builtin,2,602487,0x7ff6d8e09734,12,DatePrototypeSetSeconds
code-creation,Builtin,2,602516,0x7ff6d8e09774,12,DatePrototypeSetTime
code-creation,Builtin,2,602545,0x7ff6d8e097b4,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,602574,0x7ff6d8e097f4,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,602604,0x7ff6d8e09834,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,602628,0x7ff6d8e09874,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,602654,0x7ff6d8e098b4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,602676,0x7ff6d8e098f4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,602708,0x7ff6d8e09934,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,602729,0x7ff6d8e09974,12,DatePrototypeToDateString
code-creation,Builtin,2,602753,0x7ff6d8e099b4,12,DatePrototypeToISOString
code-creation,Builtin,2,602778,0x7ff6d8e099f4,12,DatePrototypeToUTCString
code-creation,Builtin,2,602802,0x7ff6d8e09a34,12,DatePrototypeToString
code-creation,Builtin,2,602828,0x7ff6d8e09a74,12,DatePrototypeToTimeString
code-creation,Builtin,2,602853,0x7ff6d8e09ab4,12,DatePrototypeToJson
code-creation,Builtin,2,602878,0x7ff6d8e09af4,12,DateUTC
code-creation,Builtin,2,602895,0x7ff6d8e09b34,12,ErrorConstructor
code-creation,Builtin,2,602917,0x7ff6d8e09b74,12,ErrorCaptureStackTrace
code-creation,Builtin,2,602941,0x7ff6d8e09bb4,12,ErrorPrototypeToString
code-creation,Builtin,2,602968,0x7ff6d8e09bf4,12,FunctionConstructor
code-creation,Builtin,2,602994,0x7ff6d8e09c34,80,FunctionPrototypeApply
code-creation,Builtin,2,603023,0x7ff6d8e09cb4,12,FunctionPrototypeBind
code-creation,Builtin,2,603071,0x7ff6d8e09cf4,36,FunctionPrototypeCall
code-creation,Builtin,2,603117,0x7ff6d8e09d34,12,FunctionPrototypeToString
code-creation,Builtin,2,603149,0x7ff6d8e09d74,192,CreateIterResultObject
code-creation,Builtin,2,603167,0x7ff6d8e09e74,812,CreateGeneratorObject
code-creation,Builtin,2,603185,0x7ff6d8e0a1b4,12,GeneratorFunctionConstructor
code-creation,Builtin,2,603204,0x7ff6d8e0a1f4,416,GeneratorPrototypeNext
code-creation,Builtin,2,603225,0x7ff6d8e0a3b4,420,GeneratorPrototypeReturn
code-creation,Builtin,2,603256,0x7ff6d8e0a574,424,GeneratorPrototypeThrow
code-creation,Builtin,2,603275,0x7ff6d8e0a734,12,AsyncFunctionConstructor
code-creation,Builtin,2,603295,0x7ff6d8e0a774,388,SuspendGeneratorBaseline
code-creation,Builtin,2,603313,0x7ff6d8e0a934,100,ResumeGeneratorBaseline
code-creation,Builtin,2,603334,0x7ff6d8e0a9b4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,603355,0x7ff6d8e0a9f4,12,GlobalDecodeURI
code-creation,Builtin,2,603380,0x7ff6d8e0aa34,12,GlobalDecodeURIComponent
code-creation,Builtin,2,603406,0x7ff6d8e0aa74,12,GlobalEncodeURI
code-creation,Builtin,2,603452,0x7ff6d8e0aab4,12,GlobalEncodeURIComponent
code-creation,Builtin,2,603481,0x7ff6d8e0aaf4,12,GlobalEscape
code-creation,Builtin,2,603546,0x7ff6d8e0ab34,12,GlobalUnescape
code-creation,Builtin,2,603576,0x7ff6d8e0ab74,12,GlobalEval
code-creation,Builtin,2,603601,0x7ff6d8e0abb4,136,GlobalIsFinite
code-creation,Builtin,2,603626,0x7ff6d8e0ac74,132,GlobalIsNaN
code-creation,Builtin,2,603647,0x7ff6d8e0ad34,12,JsonParse
code-creation,Builtin,2,603670,0x7ff6d8e0ad74,12,JsonStringify
code-creation,Builtin,2,603696,0x7ff6d8e0adb4,4340,LoadIC
code-creation,Builtin,2,603721,0x7ff6d8e0beb4,4156,LoadIC_Megamorphic
code-creation,Builtin,2,603748,0x7ff6d8e0cef4,4352,LoadIC_Noninlined
code-creation,Builtin,2,603772,0x7ff6d8e0e034,44,LoadICTrampoline
code-creation,Builtin,2,603796,0x7ff6d8e0e074,24,LoadICBaseline
code-creation,Builtin,2,603835,0x7ff6d8e0e0b4,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,603868,0x7ff6d8e0e0f4,7196,LoadSuperIC
code-creation,Builtin,2,603893,0x7ff6d8e0fd34,24,LoadSuperICBaseline
code-creation,Builtin,2,603932,0x7ff6d8e0fd74,8224,KeyedLoadIC
code-creation,Builtin,2,603956,0x7ff6d8e11db4,13200,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,603973,0x7ff6d8e15174,44,KeyedLoadICTrampoline
code-creation,Builtin,2,603996,0x7ff6d8e151b4,24,KeyedLoadICBaseline
code-creation,Builtin,2,604020,0x7ff6d8e151f4,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,604037,0x7ff6d8e15234,5112,StoreGlobalIC
code-creation,Builtin,2,604058,0x7ff6d8e16634,44,StoreGlobalICTrampoline
code-creation,Builtin,2,604087,0x7ff6d8e16674,24,StoreGlobalICBaseline
code-creation,Builtin,2,604118,0x7ff6d8e166b4,5312,StoreIC
code-creation,Builtin,2,604145,0x7ff6d8e17bb4,44,StoreICTrampoline
code-creation,Builtin,2,604192,0x7ff6d8e17bf4,24,StoreICBaseline
code-creation,Builtin,2,604219,0x7ff6d8e17c34,5124,DefineNamedOwnIC
code-creation,Builtin,2,604235,0x7ff6d8e19074,44,DefineNamedOwnICTrampoline
code-creation,Builtin,2,604251,0x7ff6d8e190b4,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,604267,0x7ff6d8e190f4,5784,KeyedStoreIC
code-creation,Builtin,2,604283,0x7ff6d8e1a7b4,44,KeyedStoreICTrampoline
code-creation,Builtin,2,604300,0x7ff6d8e1a7f4,24,KeyedStoreICBaseline
code-creation,Builtin,2,604317,0x7ff6d8e1a834,5600,DefineKeyedOwnIC
code-creation,Builtin,2,604352,0x7ff6d8e1be34,44,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,604379,0x7ff6d8e1be74,24,DefineKeyedOwnICBaseline
code-creation,Builtin,2,604395,0x7ff6d8e1beb4,384,StoreInArrayLiteralIC
code-creation,Builtin,2,604416,0x7ff6d8e1c074,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,604445,0x7ff6d8e1c0b4,140,LookupContextBaseline
code-creation,Builtin,2,604498,0x7ff6d8e1c174,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,604525,0x7ff6d8e1c234,3036,LoadGlobalIC
code-creation,Builtin,2,604538,0x7ff6d8e1ce34,3020,LoadGlobalICInsideTypeof
code-creation,Builtin,2,604551,0x7ff6d8e1da34,44,LoadGlobalICTrampoline
code-creation,Builtin,2,604634,0x7ff6d8e1da74,24,LoadGlobalICBaseline
code-creation,Builtin,2,604667,0x7ff6d8e1dab4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,604697,0x7ff6d8e1daf4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,604747,0x7ff6d8e1db34,144,LookupGlobalICBaseline
code-creation,Builtin,2,604774,0x7ff6d8e1dbf4,144,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,604797,0x7ff6d8e1dcb4,2060,CloneObjectIC
code-creation,Builtin,2,604828,0x7ff6d8e1e4f4,24,CloneObjectICBaseline
code-creation,Builtin,2,604851,0x7ff6d8e1e534,2060,CloneObjectIC_Slow
code-creation,Builtin,2,604876,0x7ff6d8e1ed74,2904,KeyedHasIC
code-creation,Builtin,2,604906,0x7ff6d8e1f8f4,24,KeyedHasICBaseline
code-creation,Builtin,2,604936,0x7ff6d8e1f934,2720,KeyedHasIC_Megamorphic
code-creation,Builtin,2,604967,0x7ff6d8e203f4,1460,IterableToList
code-creation,Builtin,2,604996,0x7ff6d8e209b4,1268,IterableToFixedArray
code-creation,Builtin,2,605028,0x7ff6d8e20eb4,736,IterableToListWithSymbolLookup
code-creation,Builtin,2,605052,0x7ff6d8e211b4,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,605078,0x7ff6d8e211f4,128,IterableToListMayPreserveHoles
code-creation,Builtin,2,606824,0x7ff6d8e212b4,1016,IterableToFixedArrayForWasm
code-creation,Builtin,2,606850,0x7ff6d8e216b4,1524,StringListFromIterable
code-creation,Builtin,2,606870,0x7ff6d8e21cb4,1224,FindOrderedHashMapEntry
code-creation,Builtin,2,606888,0x7ff6d8e221b4,4212,MapConstructor
code-creation,Builtin,2,606906,0x7ff6d8e23234,2004,MapPrototypeSet
code-creation,Builtin,2,606923,0x7ff6d8e23a34,1524,MapPrototypeDelete
code-creation,Builtin,2,606941,0x7ff6d8e24034,208,MapPrototypeGet
code-creation,Builtin,2,606959,0x7ff6d8e24134,168,MapPrototypeHas
code-creation,Builtin,2,606978,0x7ff6d8e241f4,12,MapPrototypeClear
code-creation,Builtin,2,607097,0x7ff6d8e24234,284,MapPrototypeEntries
code-creation,Builtin,2,607129,0x7ff6d8e24374,144,MapPrototypeGetSize
code-creation,Builtin,2,607149,0x7ff6d8e24434,500,MapPrototypeForEach
code-creation,Builtin,2,607173,0x7ff6d8e24634,288,MapPrototypeKeys
code-creation,Builtin,2,607194,0x7ff6d8e24774,288,MapPrototypeValues
code-creation,Builtin,2,607218,0x7ff6d8e248b4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,607239,0x7ff6d8e24cf4,1176,MapIteratorToList
code-creation,Builtin,2,607263,0x7ff6d8e251b4,12,NumberPrototypeToExponential
code-creation,Builtin,2,607284,0x7ff6d8e251f4,12,NumberPrototypeToFixed
code-creation,Builtin,2,607305,0x7ff6d8e25234,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,607361,0x7ff6d8e25274,12,NumberPrototypeToPrecision
code-creation,Builtin,2,607382,0x7ff6d8e252b4,324,SameValue
code-creation,Builtin,2,607409,0x7ff6d8e25434,200,SameValueNumbersOnly
code-creation,Builtin,2,607429,0x7ff6d8e25534,792,Add_Baseline
code-creation,Builtin,2,607500,0x7ff6d8e25874,652,AddSmi_Baseline
code-creation,Builtin,2,607564,0x7ff6d8e25b34,832,Subtract_Baseline
code-creation,Builtin,2,607595,0x7ff6d8e25eb4,692,SubtractSmi_Baseline
code-creation,Builtin,2,607615,0x7ff6d8e26174,820,Multiply_Baseline
code-creation,Builtin,2,607632,0x7ff6d8e264b4,712,MultiplySmi_Baseline
code-creation,Builtin,2,607655,0x7ff6d8e267b4,836,Divide_Baseline
code-creation,Builtin,2,607679,0x7ff6d8e26b34,772,DivideSmi_Baseline
code-creation,Builtin,2,607705,0x7ff6d8e26e74,776,Modulus_Baseline
code-creation,Builtin,2,607728,0x7ff6d8e271b4,668,ModulusSmi_Baseline
code-creation,Builtin,2,607756,0x7ff6d8e27474,828,Exponentiate_Baseline
code-creation,Builtin,2,607782,0x7ff6d8e277b4,724,ExponentiateSmi_Baseline
code-creation,Builtin,2,607831,0x7ff6d8e27ab4,792,BitwiseAnd_Baseline
code-creation,Builtin,2,607866,0x7ff6d8e27df4,376,BitwiseAndSmi_Baseline
code-creation,Builtin,2,607904,0x7ff6d8e27f74,788,BitwiseOr_Baseline
code-creation,Builtin,2,607953,0x7ff6d8e282b4,376,BitwiseOrSmi_Baseline
code-creation,Builtin,2,608019,0x7ff6d8e28434,792,BitwiseXor_Baseline
code-creation,Builtin,2,608054,0x7ff6d8e28774,376,BitwiseXorSmi_Baseline
code-creation,Builtin,2,608196,0x7ff6d8e288f4,812,ShiftLeft_Baseline
code-creation,Builtin,2,608223,0x7ff6d8e28c34,400,ShiftLeftSmi_Baseline
code-creation,Builtin,2,608245,0x7ff6d8e28df4,812,ShiftRight_Baseline
code-creation,Builtin,2,608267,0x7ff6d8e29134,388,ShiftRightSmi_Baseline
code-creation,Builtin,2,608283,0x7ff6d8e292f4,924,ShiftRightLogical_Baseline
code-creation,Builtin,2,608299,0x7ff6d8e296b4,652,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,608315,0x7ff6d8e29974,724,Add_WithFeedback
code-creation,Builtin,2,608330,0x7ff6d8e29c74,784,Subtract_WithFeedback
code-creation,Builtin,2,608347,0x7ff6d8e29fb4,784,Multiply_WithFeedback
code-creation,Builtin,2,608434,0x7ff6d8e2a2f4,812,Divide_WithFeedback
code-creation,Builtin,2,608462,0x7ff6d8e2a634,736,Modulus_WithFeedback
code-creation,Builtin,2,608478,0x7ff6d8e2a934,792,Exponentiate_WithFeedback
code-creation,Builtin,2,608494,0x7ff6d8e2ac74,772,BitwiseAnd_WithFeedback
code-creation,Builtin,2,608514,0x7ff6d8e2afb4,768,BitwiseOr_WithFeedback
code-creation,Builtin,2,608542,0x7ff6d8e2b2f4,772,BitwiseXor_WithFeedback
code-creation,Builtin,2,608560,0x7ff6d8e2b634,784,ShiftLeft_WithFeedback
code-creation,Builtin,2,608573,0x7ff6d8e2b974,784,ShiftRight_WithFeedback
code-creation,Builtin,2,608585,0x7ff6d8e2bcb4,900,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,608607,0x7ff6d8e2c074,1692,Equal_Baseline
code-creation,Builtin,2,608654,0x7ff6d8e2c734,896,StrictEqual_Baseline
code-creation,Builtin,2,608680,0x7ff6d8e2caf4,1260,LessThan_Baseline
code-creation,Builtin,2,608699,0x7ff6d8e2cff4,1256,GreaterThan_Baseline
code-creation,Builtin,2,608718,0x7ff6d8e2d4f4,1260,LessThanOrEqual_Baseline
code-creation,Builtin,2,608761,0x7ff6d8e2d9f4,1256,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,608788,0x7ff6d8e2def4,1632,Equal_WithFeedback
code-creation,Builtin,2,608817,0x7ff6d8e2e574,920,StrictEqual_WithFeedback
code-creation,Builtin,2,608851,0x7ff6d8e2e934,1240,LessThan_WithFeedback
code-creation,Builtin,2,608880,0x7ff6d8e2ee34,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,608899,0x7ff6d8e2f334,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,608915,0x7ff6d8e2f834,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,608931,0x7ff6d8e2fd34,356,BitwiseNot_Baseline
code-creation,Builtin,2,608947,0x7ff6d8e2feb4,460,Decrement_Baseline
code-creation,Builtin,2,608962,0x7ff6d8e300b4,464,Increment_Baseline
code-creation,Builtin,2,608979,0x7ff6d8e302b4,492,Negate_Baseline
code-creation,Builtin,2,608994,0x7ff6d8e304b4,344,BitwiseNot_WithFeedback
code-creation,Builtin,2,609012,0x7ff6d8e30634,440,Decrement_WithFeedback
code-creation,Builtin,2,609028,0x7ff6d8e307f4,444,Increment_WithFeedback
code-creation,Builtin,2,609046,0x7ff6d8e309b4,472,Negate_WithFeedback
code-creation,Builtin,2,609089,0x7ff6d8e30bb4,264,ObjectAssign
code-creation,Builtin,2,609115,0x7ff6d8e30cf4,864,ObjectCreate
code-creation,Builtin,2,609133,0x7ff6d8e31074,12,ObjectDefineGetter
code-creation,Builtin,2,609151,0x7ff6d8e310b4,12,ObjectDefineProperties
code-creation,Builtin,2,609187,0x7ff6d8e310f4,12,ObjectDefineProperty
code-creation,Builtin,2,609214,0x7ff6d8e31134,12,ObjectDefineSetter
code-creation,Builtin,2,609247,0x7ff6d8e31174,1480,ObjectEntries
code-creation,Builtin,2,609261,0x7ff6d8e31774,12,ObjectFreeze
code-creation,Builtin,2,609275,0x7ff6d8e317b4,5664,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,609290,0x7ff6d8e32df4,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,609305,0x7ff6d8e32e34,596,ObjectGetOwnPropertyNames
code-creation,Builtin,2,609320,0x7ff6d8e330b4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,609335,0x7ff6d8e330f4,168,ObjectHasOwn
code-creation,Builtin,2,609350,0x7ff6d8e331b4,388,ObjectIs
code-creation,Builtin,2,609365,0x7ff6d8e33374,12,ObjectIsFrozen
code-creation,Builtin,2,609380,0x7ff6d8e333b4,12,ObjectIsSealed
code-creation,Builtin,2,609395,0x7ff6d8e333f4,532,ObjectKeys
code-creation,Builtin,2,609418,0x7ff6d8e33634,12,ObjectLookupGetter
code-creation,Builtin,2,609436,0x7ff6d8e33674,12,ObjectLookupSetter
code-creation,Builtin,2,609459,0x7ff6d8e336b4,2424,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,609483,0x7ff6d8e34034,236,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,609510,0x7ff6d8e34134,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,609561,0x7ff6d8e34174,12,ObjectPrototypeGetProto
code-creation,Builtin,2,609612,0x7ff6d8e341b4,12,ObjectPrototypeSetProto
code-creation,Builtin,2,609634,0x7ff6d8e341f4,12,ObjectSeal
code-creation,Builtin,2,609651,0x7ff6d8e34234,1132,ObjectToString
code-creation,Builtin,2,609667,0x7ff6d8e346b4,1248,ObjectValues
code-creation,Builtin,2,609684,0x7ff6d8e34bb4,296,OrdinaryHasInstance
code-creation,Builtin,2,609701,0x7ff6d8e34cf4,368,InstanceOf
code-creation,Builtin,2,609717,0x7ff6d8e34e74,640,InstanceOf_WithFeedback
code-creation,Builtin,2,609734,0x7ff6d8e35134,656,InstanceOf_Baseline
code-creation,Builtin,2,609750,0x7ff6d8e353f4,268,ForInEnumerate
code-creation,Builtin,2,609767,0x7ff6d8e35534,148,ForInPrepare
code-creation,Builtin,2,609783,0x7ff6d8e355f4,2672,ForInFilter
code-creation,Builtin,2,609799,0x7ff6d8e36074,56,ReflectApply
code-creation,Builtin,2,609815,0x7ff6d8e360b4,64,ReflectConstruct
code-creation,Builtin,2,609831,0x7ff6d8e36134,12,ReflectDefineProperty
code-creation,Builtin,2,609847,0x7ff6d8e36174,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,609865,0x7ff6d8e361b4,12,ReflectOwnKeys
code-creation,Builtin,2,609881,0x7ff6d8e361f4,12,ReflectSet
code-creation,Builtin,2,609896,0x7ff6d8e36234,12,RegExpCapture1Getter
code-creation,Builtin,2,609913,0x7ff6d8e36274,12,RegExpCapture2Getter
code-creation,Builtin,2,609929,0x7ff6d8e362b4,12,RegExpCapture3Getter
code-creation,Builtin,2,609946,0x7ff6d8e362f4,12,RegExpCapture4Getter
code-creation,Builtin,2,609963,0x7ff6d8e36334,12,RegExpCapture5Getter
code-creation,Builtin,2,609980,0x7ff6d8e36374,12,RegExpCapture6Getter
code-creation,Builtin,2,609997,0x7ff6d8e363b4,12,RegExpCapture7Getter
code-creation,Builtin,2,610035,0x7ff6d8e363f4,12,RegExpCapture8Getter
code-creation,Builtin,2,610061,0x7ff6d8e36434,12,RegExpCapture9Getter
code-creation,Builtin,2,610093,0x7ff6d8e36474,2140,RegExpConstructor
code-creation,Builtin,2,610119,0x7ff6d8e36cf4,12,RegExpInputGetter
code-creation,Builtin,2,610135,0x7ff6d8e36d34,12,RegExpInputSetter
code-creation,Builtin,2,610152,0x7ff6d8e36d74,12,RegExpLastMatchGetter
code-creation,Builtin,2,610169,0x7ff6d8e36db4,12,RegExpLastParenGetter
code-creation,Builtin,2,610186,0x7ff6d8e36df4,12,RegExpLeftContextGetter
code-creation,Builtin,2,610204,0x7ff6d8e36e34,848,RegExpPrototypeCompile
code-creation,Builtin,2,610220,0x7ff6d8e371b4,12,RegExpPrototypeToString
code-creation,Builtin,2,610236,0x7ff6d8e371f4,12,RegExpRightContextGetter
code-creation,Builtin,2,610252,0x7ff6d8e37234,256,RegExpExecAtom
code-creation,Builtin,2,610267,0x7ff6d8e37374,1020,RegExpExecInternal
code-creation,Builtin,2,610334,0x7ff6d8e37774,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,610361,0x7ff6d8e377b4,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,610378,0x7ff6d8e377f4,2772,SetConstructor
code-creation,Builtin,2,610395,0x7ff6d8e382f4,1320,SetPrototypeHas
code-creation,Builtin,2,610411,0x7ff6d8e38834,1772,SetPrototypeAdd
code-creation,Builtin,2,610427,0x7ff6d8e38f34,1488,SetPrototypeDelete
code-creation,Builtin,2,610491,0x7ff6d8e39534,12,SetPrototypeClear
code-creation,Builtin,2,610547,0x7ff6d8e39574,288,SetPrototypeEntries
code-creation,Builtin,2,610570,0x7ff6d8e396b4,144,SetPrototypeGetSize
code-creation,Builtin,2,610587,0x7ff6d8e39774,464,SetPrototypeForEach
code-creation,Builtin,2,610604,0x7ff6d8e39974,288,SetPrototypeValues
code-creation,Builtin,2,610619,0x7ff6d8e39ab4,984,SetIteratorPrototypeNext
code-creation,Builtin,2,610635,0x7ff6d8e39eb4,1120,SetOrSetIteratorToList
code-creation,Builtin,2,610651,0x7ff6d8e3a334,12,ShadowRealmConstructor
code-creation,Builtin,2,610667,0x7ff6d8e3a374,572,ShadowRealmGetWrappedValue
code-creation,Builtin,2,610684,0x7ff6d8e3a5b4,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,610701,0x7ff6d8e3a5f4,12,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,610720,0x7ff6d8e3a634,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,610737,0x7ff6d8e3a674,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,610760,0x7ff6d8e3a6b4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,610780,0x7ff6d8e3a6f4,1336,AtomicsLoad
code-creation,Builtin,2,610797,0x7ff6d8e3ac34,1068,AtomicsStore
code-creation,Builtin,2,610814,0x7ff6d8e3b074,1716,AtomicsExchange
code-creation,Builtin,2,610830,0x7ff6d8e3b734,2064,AtomicsCompareExchange
code-creation,Builtin,2,610879,0x7ff6d8e3bf74,1804,AtomicsAdd
code-creation,Builtin,2,610903,0x7ff6d8e3c6b4,1804,AtomicsSub
code-creation,Builtin,2,610921,0x7ff6d8e3cdf4,1804,AtomicsAnd
code-creation,Builtin,2,610937,0x7ff6d8e3d534,1804,AtomicsOr
code-creation,Builtin,2,610953,0x7ff6d8e3dc74,1804,AtomicsXor
code-creation,Builtin,2,610996,0x7ff6d8e3e3b4,12,AtomicsNotify
code-creation,Builtin,2,611021,0x7ff6d8e3e3f4,12,AtomicsIsLockFree
code-creation,Builtin,2,611038,0x7ff6d8e3e434,12,AtomicsWait
code-creation,Builtin,2,611054,0x7ff6d8e3e474,12,AtomicsWaitAsync
code-creation,Builtin,2,611070,0x7ff6d8e3e4b4,12,StringFromCodePoint
code-creation,Builtin,2,611086,0x7ff6d8e3e4f4,1456,StringFromCharCode
code-creation,Builtin,2,611103,0x7ff6d8e3eab4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,611120,0x7ff6d8e3eaf4,4316,StringPrototypeMatchAll
code-creation,Builtin,2,611136,0x7ff6d8e3fbf4,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,611154,0x7ff6d8e3fc34,1216,StringPrototypeReplace
code-creation,Builtin,2,611171,0x7ff6d8e40134,2900,StringPrototypeSplit
code-creation,Builtin,2,611187,0x7ff6d8e40cb4,12,StringRaw
code-creation,Builtin,2,611205,0x7ff6d8e40cf4,12,SymbolConstructor
code-creation,Builtin,2,611221,0x7ff6d8e40d34,12,SymbolFor
code-creation,Builtin,2,611239,0x7ff6d8e40d74,12,SymbolKeyFor
code-creation,Builtin,2,611283,0x7ff6d8e40db4,88,TypedArrayBaseConstructor
code-creation,Builtin,2,611305,0x7ff6d8e40e34,264,TypedArrayConstructor
code-creation,Builtin,2,611322,0x7ff6d8e40f74,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,611359,0x7ff6d8e40fb4,912,TypedArrayPrototypeByteLength
code-creation,Builtin,2,611384,0x7ff6d8e41374,360,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,611402,0x7ff6d8e414f4,616,TypedArrayPrototypeLength
code-creation,Builtin,2,611418,0x7ff6d8e41774,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,611435,0x7ff6d8e417b4,12,TypedArrayPrototypeFill
code-creation,Builtin,2,611449,0x7ff6d8e417f4,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,611464,0x7ff6d8e41834,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,611481,0x7ff6d8e41874,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,611497,0x7ff6d8e418b4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,611513,0x7ff6d8e418f4,304,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,611530,0x7ff6d8e41a34,24304,TypedArrayPrototypeMap
code-creation,Builtin,2,611547,0x7ff6d8e47934,1000,GenericJSToWasmWrapper
code-creation,Builtin,2,611563,0x7ff6d8e47d34,1176,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,611580,0x7ff6d8e481f4,156,WasmSuspend
code-creation,Builtin,2,611595,0x7ff6d8e482b4,248,WasmResume
code-creation,Builtin,2,611611,0x7ff6d8e483b4,160,WasmCompileLazy
code-creation,Builtin,2,611628,0x7ff6d8e48474,168,WasmDebugBreak
code-creation,Builtin,2,611644,0x7ff6d8e48534,16,WasmOnStackReplace
code-creation,Builtin,2,611681,0x7ff6d8e48574,136,WasmFloat32ToNumber
code-creation,Builtin,2,611699,0x7ff6d8e48634,148,WasmFloat64ToNumber
code-creation,Builtin,2,611715,0x7ff6d8e486f4,4,WasmI32AtomicWait32
code-creation,Builtin,2,611731,0x7ff6d8e48734,4,WasmI64AtomicWait32
code-creation,Builtin,2,611747,0x7ff6d8e48774,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,611763,0x7ff6d8e487b4,4380,WeakMapConstructor
code-creation,Builtin,2,611796,0x7ff6d8e498f4,212,WeakMapLookupHashIndex
code-creation,Builtin,2,611817,0x7ff6d8e499f4,220,WeakMapGet
code-creation,Builtin,2,611834,0x7ff6d8e49af4,180,WeakMapPrototypeHas
code-creation,Builtin,2,611850,0x7ff6d8e49bb4,220,WeakMapPrototypeSet
code-creation,Builtin,2,611865,0x7ff6d8e49cb4,144,WeakMapPrototypeDelete
code-creation,Builtin,2,611882,0x7ff6d8e49d74,2960,WeakSetConstructor
code-creation,Builtin,2,611912,0x7ff6d8e4a934,180,WeakSetPrototypeHas
code-creation,Builtin,2,611933,0x7ff6d8e4a9f4,224,WeakSetPrototypeAdd
code-creation,Builtin,2,611950,0x7ff6d8e4aaf4,144,WeakSetPrototypeDelete
code-creation,Builtin,2,611966,0x7ff6d8e4abb4,396,WeakCollectionDelete
code-creation,Builtin,2,611982,0x7ff6d8e4ad74,784,WeakCollectionSet
code-creation,Builtin,2,611998,0x7ff6d8e4b0b4,12,SharedStructTypeConstructor
code-creation,Builtin,2,612014,0x7ff6d8e4b0f4,12,SharedStructConstructor
code-creation,Builtin,2,612027,0x7ff6d8e4b134,296,AsyncGeneratorResolve
code-creation,Builtin,2,612061,0x7ff6d8e4b274,104,AsyncGeneratorReject
code-creation,Builtin,2,612082,0x7ff6d8e4b2f4,1912,AsyncGeneratorYield
code-creation,Builtin,2,612095,0x7ff6d8e4ba74,2028,AsyncGeneratorReturn
code-creation,Builtin,2,612108,0x7ff6d8e4c274,312,AsyncGeneratorResumeNext
code-creation,Builtin,2,612120,0x7ff6d8e4c3b4,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,612132,0x7ff6d8e4c3f4,1016,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,612144,0x7ff6d8e4c7f4,1020,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,612168,0x7ff6d8e4cbf4,1020,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,612214,0x7ff6d8e4cff4,1860,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,612242,0x7ff6d8e4d774,1860,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,612269,0x7ff6d8e4def4,168,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,612292,0x7ff6d8e4dfb4,176,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,612331,0x7ff6d8e4e074,120,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,612358,0x7ff6d8e4e0f4,120,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,612401,0x7ff6d8e4e174,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,612421,0x7ff6d8e4e1f4,176,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,612439,0x7ff6d8e4e2b4,1668,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,612456,0x7ff6d8e4e974,1780,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,612472,0x7ff6d8e4f074,1800,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,612489,0x7ff6d8e4f7b4,96,AsyncIteratorValueUnwrap
code-creation,Builtin,2,612523,0x7ff6d8e4f834,228,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,612542,0x7ff6d8e4f934,228,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,612562,0x7ff6d8e4fa34,212,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,612602,0x7ff6d8e4fb34,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,612663,0x7ff6d8e4fcf4,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,612691,0x7ff6d8e4feb4,244,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,612712,0x7ff6d8e4ffb4,244,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,612732,0x7ff6d8e500b4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,612751,0x7ff6d8e501b4,416,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,612770,0x7ff6d8e50374,416,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,612790,0x7ff6d8e50534,4,DirectCEntry
code-creation,Builtin,2,612807,0x7ff6d8e50574,1072,StringAdd_CheckNone
code-creation,Builtin,2,612824,0x7ff6d8e509b4,2420,SubString
code-creation,Builtin,2,612842,0x7ff6d8e51334,16,StackCheck
code-creation,Builtin,2,612858,0x7ff6d8e51374,84,DoubleToI
code-creation,Builtin,2,612875,0x7ff6d8e513f4,2276,GetProperty
code-creation,Builtin,2,612892,0x7ff6d8e51cf4,2368,GetPropertyWithReceiver
code-creation,Builtin,2,612910,0x7ff6d8e52674,15796,SetProperty
code-creation,Builtin,2,612928,0x7ff6d8e56434,13620,CreateDataProperty
code-creation,Builtin,2,612946,0x7ff6d8e59974,8,MemCopyUint8Uint8
code-creation,Builtin,2,612963,0x7ff6d8e599b4,8,MemMove
code-creation,Builtin,2,612980,0x7ff6d8e599f4,12,IsTraceCategoryEnabled
code-creation,Builtin,2,612998,0x7ff6d8e59a34,12,Trace
code-creation,Builtin,2,613042,0x7ff6d8e59a74,12,FinalizationRegistryUnregister
code-creation,Builtin,2,613097,0x7ff6d8e59ab4,420,AsyncModuleEvaluate
code-creation,Builtin,2,613128,0x7ff6d8e59c74,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,613146,0x7ff6d8e59cb4,12,CallAsyncModuleRejected
code-creation,Builtin,2,613163,0x7ff6d8e59cf4,12,TemporalNowTimeZone
code-creation,Builtin,2,613180,0x7ff6d8e59d34,12,TemporalNowInstant
code-creation,Builtin,2,613198,0x7ff6d8e59d74,12,TemporalNowPlainDateTime
code-creation,Builtin,2,613215,0x7ff6d8e59db4,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,613231,0x7ff6d8e59df4,12,TemporalNowZonedDateTime
code-creation,Builtin,2,613247,0x7ff6d8e59e34,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,613262,0x7ff6d8e59e74,12,TemporalNowPlainDate
code-creation,Builtin,2,613277,0x7ff6d8e59eb4,12,TemporalNowPlainDateISO
code-creation,Builtin,2,613293,0x7ff6d8e59ef4,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,613309,0x7ff6d8e59f34,12,TemporalPlainDateConstructor
code-creation,Builtin,2,613327,0x7ff6d8e59f74,12,TemporalPlainDateFrom
code-creation,Builtin,2,613346,0x7ff6d8e59fb4,12,TemporalPlainDateCompare
code-creation,Builtin,2,613362,0x7ff6d8e59ff4,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,613378,0x7ff6d8e5a034,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,613395,0x7ff6d8e5a074,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,613412,0x7ff6d8e5a0b4,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,613429,0x7ff6d8e5a0f4,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,613445,0x7ff6d8e5a134,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,613463,0x7ff6d8e5a174,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,613480,0x7ff6d8e5a1b4,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,613504,0x7ff6d8e5a1f4,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,613534,0x7ff6d8e5a234,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,613559,0x7ff6d8e5a274,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,613584,0x7ff6d8e5a2b4,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,613610,0x7ff6d8e5a2f4,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,613637,0x7ff6d8e5a334,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,613660,0x7ff6d8e5a374,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,613687,0x7ff6d8e5a3b4,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,613711,0x7ff6d8e5a3f4,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,613740,0x7ff6d8e5a434,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,613764,0x7ff6d8e5a474,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,613782,0x7ff6d8e5a4b4,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,613799,0x7ff6d8e5a4f4,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,613822,0x7ff6d8e5a534,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,613855,0x7ff6d8e5a574,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,613885,0x7ff6d8e5a5b4,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,613923,0x7ff6d8e5a5f4,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,613947,0x7ff6d8e5a634,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,614026,0x7ff6d8e5a674,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,614057,0x7ff6d8e5a6b4,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,614088,0x7ff6d8e5a6f4,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,614118,0x7ff6d8e5a734,12,TemporalPlainTimeFrom
code-creation,Builtin,2,614148,0x7ff6d8e5a774,12,TemporalPlainTimeCompare
code-creation,Builtin,2,614172,0x7ff6d8e5a7b4,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,614189,0x7ff6d8e5a7f4,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,614221,0x7ff6d8e5a834,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,614238,0x7ff6d8e5a874,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,614261,0x7ff6d8e5a8b4,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,614284,0x7ff6d8e5a8f4,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,614302,0x7ff6d8e5a934,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,614354,0x7ff6d8e5a974,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,614382,0x7ff6d8e5a9b4,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,614401,0x7ff6d8e5a9f4,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,614483,0x7ff6d8e5aa34,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,614510,0x7ff6d8e5aa74,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,614536,0x7ff6d8e5aab4,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,614553,0x7ff6d8e5aaf4,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,614570,0x7ff6d8e5ab34,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,614587,0x7ff6d8e5ab74,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,614612,0x7ff6d8e5abb4,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,614653,0x7ff6d8e5abf4,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,614673,0x7ff6d8e5ac34,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,614691,0x7ff6d8e5ac74,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,614708,0x7ff6d8e5acb4,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,614725,0x7ff6d8e5acf4,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,614742,0x7ff6d8e5ad34,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,614760,0x7ff6d8e5ad74,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,614778,0x7ff6d8e5adb4,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,614796,0x7ff6d8e5adf4,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,614813,0x7ff6d8e5ae34,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,614831,0x7ff6d8e5ae74,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,614876,0x7ff6d8e5aeb4,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,614902,0x7ff6d8e5aef4,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,614921,0x7ff6d8e5af34,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,614938,0x7ff6d8e5af74,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,614956,0x7ff6d8e5afb4,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,615001,0x7ff6d8e5aff4,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,615021,0x7ff6d8e5b034,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,615038,0x7ff6d8e5b074,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,615055,0x7ff6d8e5b0b4,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,615071,0x7ff6d8e5b0f4,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,615088,0x7ff6d8e5b134,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,615105,0x7ff6d8e5b174,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,615122,0x7ff6d8e5b1b4,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,615139,0x7ff6d8e5b1f4,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,615155,0x7ff6d8e5b234,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,615172,0x7ff6d8e5b274,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,615191,0x7ff6d8e5b2b4,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,615219,0x7ff6d8e5b2f4,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,615242,0x7ff6d8e5b334,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,615260,0x7ff6d8e5b374,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,615278,0x7ff6d8e5b3b4,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,615296,0x7ff6d8e5b3f4,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,615329,0x7ff6d8e5b434,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,615349,0x7ff6d8e5b474,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,615372,0x7ff6d8e5b4b4,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,615394,0x7ff6d8e5b4f4,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,615411,0x7ff6d8e5b534,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,615429,0x7ff6d8e5b574,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,615457,0x7ff6d8e5b5b4,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,615478,0x7ff6d8e5b5f4,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,615496,0x7ff6d8e5b634,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,615513,0x7ff6d8e5b674,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,615530,0x7ff6d8e5b6b4,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,615548,0x7ff6d8e5b6f4,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,615565,0x7ff6d8e5b734,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,615581,0x7ff6d8e5b774,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,615598,0x7ff6d8e5b7b4,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,615615,0x7ff6d8e5b7f4,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,615633,0x7ff6d8e5b834,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,615649,0x7ff6d8e5b874,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,615666,0x7ff6d8e5b8b4,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,615684,0x7ff6d8e5b8f4,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,615701,0x7ff6d8e5b934,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,615718,0x7ff6d8e5b974,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,615734,0x7ff6d8e5b9b4,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,615752,0x7ff6d8e5b9f4,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,615788,0x7ff6d8e5ba34,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,615810,0x7ff6d8e5ba74,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,615829,0x7ff6d8e5bab4,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,615871,0x7ff6d8e5baf4,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,615898,0x7ff6d8e5bb34,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,615922,0x7ff6d8e5bb74,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,615956,0x7ff6d8e5bbb4,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,615987,0x7ff6d8e5bbf4,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,616018,0x7ff6d8e5bc34,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,616048,0x7ff6d8e5bc74,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,616082,0x7ff6d8e5bcb4,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,616114,0x7ff6d8e5bcf4,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,616150,0x7ff6d8e5bd34,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,616242,0x7ff6d8e5bd74,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,616283,0x7ff6d8e5bdb4,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,616311,0x7ff6d8e5bdf4,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,616331,0x7ff6d8e5be34,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,616349,0x7ff6d8e5be74,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,616368,0x7ff6d8e5beb4,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,616387,0x7ff6d8e5bef4,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,616407,0x7ff6d8e5bf34,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,616425,0x7ff6d8e5bf74,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,616444,0x7ff6d8e5bfb4,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,616463,0x7ff6d8e5bff4,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,616535,0x7ff6d8e5c034,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,616560,0x7ff6d8e5c074,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,616579,0x7ff6d8e5c0b4,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,616597,0x7ff6d8e5c0f4,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,616626,0x7ff6d8e5c134,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,616647,0x7ff6d8e5c174,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,616665,0x7ff6d8e5c1b4,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,616683,0x7ff6d8e5c1f4,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,616701,0x7ff6d8e5c234,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,616720,0x7ff6d8e5c274,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,616739,0x7ff6d8e5c2b4,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,616775,0x7ff6d8e5c2f4,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,616797,0x7ff6d8e5c334,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,616814,0x7ff6d8e5c374,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,616831,0x7ff6d8e5c3b4,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,616849,0x7ff6d8e5c3f4,12,TemporalDurationConstructor
code-creation,Builtin,2,616867,0x7ff6d8e5c434,12,TemporalDurationFrom
code-creation,Builtin,2,616883,0x7ff6d8e5c474,12,TemporalDurationCompare
code-creation,Builtin,2,616899,0x7ff6d8e5c4b4,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,616914,0x7ff6d8e5c4f4,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,616931,0x7ff6d8e5c534,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,616948,0x7ff6d8e5c574,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,616984,0x7ff6d8e5c5b4,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,617004,0x7ff6d8e5c5f4,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,617023,0x7ff6d8e5c634,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,617041,0x7ff6d8e5c674,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,617058,0x7ff6d8e5c6b4,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,617077,0x7ff6d8e5c6f4,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,617094,0x7ff6d8e5c734,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,617111,0x7ff6d8e5c774,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,617129,0x7ff6d8e5c7b4,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,617147,0x7ff6d8e5c7f4,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,617164,0x7ff6d8e5c834,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,617183,0x7ff6d8e5c874,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,617199,0x7ff6d8e5c8b4,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,617216,0x7ff6d8e5c8f4,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,617235,0x7ff6d8e5c934,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,617275,0x7ff6d8e5c974,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,617301,0x7ff6d8e5c9b4,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,617318,0x7ff6d8e5c9f4,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,617335,0x7ff6d8e5ca34,12,TemporalInstantConstructor
code-creation,Builtin,2,617353,0x7ff6d8e5ca74,12,TemporalInstantFrom
code-creation,Builtin,2,617389,0x7ff6d8e5cab4,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,617412,0x7ff6d8e5caf4,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,617430,0x7ff6d8e5cb34,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,617446,0x7ff6d8e5cb74,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,617463,0x7ff6d8e5cbb4,12,TemporalInstantCompare
code-creation,Builtin,2,617479,0x7ff6d8e5cbf4,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,617495,0x7ff6d8e5cc34,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,617567,0x7ff6d8e5cc74,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,617591,0x7ff6d8e5ccb4,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,617609,0x7ff6d8e5ccf4,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,617626,0x7ff6d8e5cd34,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,617643,0x7ff6d8e5cd74,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,617660,0x7ff6d8e5cdb4,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,617677,0x7ff6d8e5cdf4,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,617694,0x7ff6d8e5ce34,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,617711,0x7ff6d8e5ce74,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,617728,0x7ff6d8e5ceb4,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,617746,0x7ff6d8e5cef4,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,617764,0x7ff6d8e5cf34,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,617782,0x7ff6d8e5cf74,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,617812,0x7ff6d8e5cfb4,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,617832,0x7ff6d8e5cff4,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,617849,0x7ff6d8e5d034,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,617867,0x7ff6d8e5d074,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,617914,0x7ff6d8e5d0b4,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,617934,0x7ff6d8e5d0f4,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,617951,0x7ff6d8e5d134,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,617967,0x7ff6d8e5d174,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,617985,0x7ff6d8e5d1b4,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,618003,0x7ff6d8e5d1f4,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,618021,0x7ff6d8e5d234,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,618039,0x7ff6d8e5d274,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,618056,0x7ff6d8e5d2b4,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,618074,0x7ff6d8e5d2f4,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,618092,0x7ff6d8e5d334,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,618109,0x7ff6d8e5d374,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,618126,0x7ff6d8e5d3b4,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,618144,0x7ff6d8e5d3f4,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,618163,0x7ff6d8e5d434,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,618200,0x7ff6d8e5d474,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,618235,0x7ff6d8e5d4b4,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,618255,0x7ff6d8e5d4f4,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,618329,0x7ff6d8e5d534,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,618355,0x7ff6d8e5d574,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,618369,0x7ff6d8e5d5b4,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,618381,0x7ff6d8e5d5f4,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,618394,0x7ff6d8e5d634,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,618407,0x7ff6d8e5d674,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,618419,0x7ff6d8e5d6b4,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,618431,0x7ff6d8e5d6f4,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,618450,0x7ff6d8e5d734,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,618481,0x7ff6d8e5d774,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,618510,0x7ff6d8e5d7b4,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,618540,0x7ff6d8e5d7f4,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,618576,0x7ff6d8e5d834,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,618688,0x7ff6d8e5d874,12,TemporalTimeZoneFrom
code-creation,Builtin,2,618742,0x7ff6d8e5d8b4,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,618765,0x7ff6d8e5d8f4,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,618785,0x7ff6d8e5d934,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,618804,0x7ff6d8e5d974,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,618823,0x7ff6d8e5d9b4,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,618842,0x7ff6d8e5d9f4,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,618861,0x7ff6d8e5da34,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,618880,0x7ff6d8e5da74,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,618900,0x7ff6d8e5dab4,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,618918,0x7ff6d8e5daf4,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,618937,0x7ff6d8e5db34,12,TemporalCalendarConstructor
code-creation,Builtin,2,618955,0x7ff6d8e5db74,12,TemporalCalendarFrom
code-creation,Builtin,2,618972,0x7ff6d8e5dbb4,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,618990,0x7ff6d8e5dbf4,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,619009,0x7ff6d8e5dc34,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,619028,0x7ff6d8e5dc74,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,619046,0x7ff6d8e5dcb4,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,619065,0x7ff6d8e5dcf4,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,619098,0x7ff6d8e5dd34,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,619119,0x7ff6d8e5dd74,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,619163,0x7ff6d8e5ddb4,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,619187,0x7ff6d8e5ddf4,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,619205,0x7ff6d8e5de34,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,619223,0x7ff6d8e5de74,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,619239,0x7ff6d8e5deb4,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,619253,0x7ff6d8e5def4,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,619265,0x7ff6d8e5df34,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,619278,0x7ff6d8e5df74,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,619290,0x7ff6d8e5dfb4,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,619302,0x7ff6d8e5dff4,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,619316,0x7ff6d8e5e034,12,TemporalCalendarPrototypeFields
code-creation,Builtin,2,619331,0x7ff6d8e5e074,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,619347,0x7ff6d8e5e0b4,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,619364,0x7ff6d8e5e0f4,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,619395,0x7ff6d8e5e134,1596,StringFixedArrayFromIterable
code-creation,Builtin,2,619425,0x7ff6d8e5e774,1568,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,619456,0x7ff6d8e5edb4,272,AggregateErrorConstructor
code-creation,Builtin,2,619487,0x7ff6d8e5eef4,848,ArrayPrototypeAt
code-creation,Builtin,2,619509,0x7ff6d8e5f274,628,ArrayPrototypeConcat
code-creation,Builtin,2,619549,0x7ff6d8e5f4f4,5520,ArrayPrototypeCopyWithin
code-creation,Builtin,2,619575,0x7ff6d8e60ab4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,619590,0x7ff6d8e60bb4,584,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,619603,0x7ff6d8e60e34,3368,ArrayEveryLoopContinuation
code-creation,Builtin,2,619616,0x7ff6d8e61b74,1496,ArrayEvery
code-creation,Builtin,2,619628,0x7ff6d8e62174,276,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,619640,0x7ff6d8e622b4,912,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,619660,0x7ff6d8e62674,3632,ArrayFilterLoopContinuation
code-creation,Builtin,2,619689,0x7ff6d8e634b4,4188,ArrayFilter
code-creation,Builtin,2,619723,0x7ff6d8e64534,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,619746,0x7ff6d8e64634,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,619779,0x7ff6d8e64674,304,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,619810,0x7ff6d8e647b4,508,ArrayFindLoopContinuation
code-creation,Builtin,2,619829,0x7ff6d8e649b4,1476,ArrayPrototypeFind
code-creation,Builtin,2,619843,0x7ff6d8e64fb4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,619856,0x7ff6d8e650b4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,619869,0x7ff6d8e650f4,304,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,619882,0x7ff6d8e65234,504,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,619895,0x7ff6d8e65434,1472,ArrayPrototypeFindIndex
code-creation,Builtin,2,619929,0x7ff6d8e65a34,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,619955,0x7ff6d8e65c34,1668,ArrayPrototypeFindLast
code-creation,Builtin,2,619970,0x7ff6d8e662f4,444,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,619982,0x7ff6d8e664b4,1664,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,619994,0x7ff6d8e66b74,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,620007,0x7ff6d8e66c74,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,620020,0x7ff6d8e66d74,3236,ArrayForEachLoopContinuation
code-creation,Builtin,2,620032,0x7ff6d8e67a34,1344,ArrayForEach
code-creation,Builtin,2,620044,0x7ff6d8e67fb4,3412,ArrayFrom
code-creation,Builtin,2,620055,0x7ff6d8e68d34,160,ArrayIsArray
code-creation,Builtin,2,620066,0x7ff6d8e68df4,412,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,620079,0x7ff6d8e68fb4,44,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,620102,0x7ff6d8e68ff4,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,620152,0x7ff6d8e690b4,324,ConvertToLocaleString
code-creation,Builtin,2,620179,0x7ff6d8e69234,768,JoinStackPush
code-creation,Builtin,2,620193,0x7ff6d8e69574,280,JoinStackPop
code-creation,Builtin,2,620205,0x7ff6d8e696b4,6620,ArrayPrototypeJoin
tick,0x7ff6d8187110,620221,0,0x0,6
code-creation,Builtin,2,620241,0x7ff6d8e6b0b4,5368,ArrayPrototypeToLocaleString
code-creation,Builtin,2,620269,0x7ff6d8e6c5b4,240,ArrayPrototypeToString
code-creation,Builtin,2,620317,0x7ff6d8e6c6b4,6508,TypedArrayPrototypeJoin
code-creation,Builtin,2,620353,0x7ff6d8e6e034,5188,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,620379,0x7ff6d8e6f4b4,3712,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,620413,0x7ff6d8e70374,256,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,620442,0x7ff6d8e704b4,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,620473,0x7ff6d8e705b4,496,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,620493,0x7ff6d8e707b4,3256,ArrayMapLoopContinuation
code-creation,Builtin,2,620546,0x7ff6d8e71474,3840,ArrayMap
code-creation,Builtin,2,620571,0x7ff6d8e723b4,868,ArrayOf
code-creation,Builtin,2,620589,0x7ff6d8e72734,424,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,620608,0x7ff6d8e728f4,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,620627,0x7ff6d8e729f4,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,620646,0x7ff6d8e72af4,3280,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,620665,0x7ff6d8e737f4,1948,ArrayReduceRight
code-creation,Builtin,2,620682,0x7ff6d8e73fb4,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,620701,0x7ff6d8e74074,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,620720,0x7ff6d8e74174,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,620739,0x7ff6d8e74274,3320,ArrayReduceLoopContinuation
code-creation,Builtin,2,620776,0x7ff6d8e74f74,1564,ArrayReduce
code-creation,Builtin,2,620797,0x7ff6d8e755b4,3180,ArrayPrototypeReverse
code-creation,Builtin,2,620814,0x7ff6d8e76234,3608,ArrayPrototypeShift
code-creation,Builtin,2,620831,0x7ff6d8e77074,5140,ArrayPrototypeSlice
code-creation,Builtin,2,620846,0x7ff6d8e784b4,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,620870,0x7ff6d8e785b4,556,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,620892,0x7ff6d8e787f4,3360,ArraySomeLoopContinuation
code-creation,Builtin,2,620932,0x7ff6d8e79534,1476,ArraySome
code-creation,Builtin,2,620952,0x7ff6d8e79b34,13776,ArrayPrototypeSplice
code-creation,Builtin,2,620970,0x7ff6d8e7d134,3052,ArrayPrototypeUnshift
code-creation,Builtin,2,620987,0x7ff6d8e7dd34,324,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,621006,0x7ff6d8e7deb4,488,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,621024,0x7ff6d8e7e0b4,212,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,621043,0x7ff6d8e7e1b4,324,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,621062,0x7ff6d8e7e334,212,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,621080,0x7ff6d8e7e434,100,ArrayBufferIsView
code-creation,Builtin,2,621101,0x7ff6d8e7e4b4,396,ToInteger
code-creation,Builtin,2,621118,0x7ff6d8e7e674,3112,FastCreateDataProperty
code-creation,Builtin,2,621136,0x7ff6d8e7f2b4,612,CheckSameObject
code-creation,Builtin,2,621154,0x7ff6d8e7f534,928,BooleanConstructor
code-creation,Builtin,2,621173,0x7ff6d8e7f8f4,160,BooleanPrototypeToString
code-creation,Builtin,2,621192,0x7ff6d8e7f9b4,156,BooleanPrototypeValueOf
tick,0x7fffad96d1c4,621212,0,0x0,6
tick,0x7fffad96d1c4,621266,0,0x0,6
tick,0x7fffad96d1c4,621333,0,0x0,6
tick,0x7ff6d8b327cb,621357,0,0x0,6
tick,0x7fffad96d1c4,621374,0,0x0,6
tick,0x7fffad96d1c4,621390,0,0x0,6
tick,0x7fffad96d1c4,621406,0,0x0,6
tick,0x7fffad96d1c4,621423,0,0x0,6
tick,0x7fffad96d1c4,621440,0,0x0,6
tick,0x7ff6d938c604,621457,0,0x0,6
tick,0x7fffad970ab4,621473,0,0x0,6
code-creation,Builtin,2,621491,0x7ff6d8e7fa74,1196,BigIntAddNoThrow
code-creation,Builtin,2,621521,0x7ff6d8e7ff34,1280,BigIntAdd
code-creation,Builtin,2,621537,0x7ff6d8e80474,1196,BigIntSubtractNoThrow
code-creation,Builtin,2,621554,0x7ff6d8e80934,1284,BigIntSubtract
code-creation,Builtin,2,621570,0x7ff6d8e80e74,288,BigIntUnaryMinus
code-creation,Builtin,2,621585,0x7ff6d8e80fb4,1348,ToString
code-creation,Builtin,2,621600,0x7ff6d8e81534,156,StringPrototypeToString
code-creation,Builtin,2,621617,0x7ff6d8e815f4,156,StringPrototypeValueOf
code-creation,Builtin,2,621632,0x7ff6d8e816b4,2476,StringToList
code-creation,Builtin,2,621649,0x7ff6d8e82074,996,StringPrototypeCharAt
code-creation,Builtin,2,621686,0x7ff6d8e82474,696,StringPrototypeCharCodeAt
code-creation,Builtin,2,621731,0x7ff6d8e82734,1236,StringPrototypeCodePointAt
code-creation,Builtin,2,622373,0x7ff6d8e82c34,420,StringPrototypeConcat
code-creation,Builtin,2,622396,0x7ff6d8e82df4,984,StringConstructor
code-creation,Builtin,2,622414,0x7ff6d8e831f4,1408,StringAddConvertLeft
code-creation,Builtin,2,622431,0x7ff6d8e837b4,1440,StringAddConvertRight
code-creation,Builtin,2,622453,0x7ff6d8e83d74,792,StringCharAt
code-creation,Builtin,2,622476,0x7ff6d8e840b4,16,FastNewClosureBaseline
code-creation,Builtin,2,622498,0x7ff6d8e840f4,200,FastNewFunctionContextEval
code-creation,Builtin,2,622521,0x7ff6d8e841f4,200,FastNewFunctionContextFunction
code-creation,Builtin,2,622546,0x7ff6d8e842f4,248,CreateRegExpLiteral
code-creation,Builtin,2,622575,0x7ff6d8e843f4,1068,CreateShallowArrayLiteral
code-creation,Builtin,2,622604,0x7ff6d8e84834,500,CreateEmptyArrayLiteral
code-creation,Builtin,2,622629,0x7ff6d8e84a34,1844,CreateShallowObjectLiteral
code-creation,Builtin,2,622648,0x7ff6d8e85174,388,ObjectConstructor
code-creation,Builtin,2,622668,0x7ff6d8e85334,176,CreateEmptyLiteralObject
code-creation,Builtin,2,622728,0x7ff6d8e853f4,544,NumberConstructor
code-creation,Builtin,2,622784,0x7ff6d8e85634,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,622889,0x7ff6d8e85674,64,StringToNumber
code-creation,Builtin,2,622923,0x7ff6d8e856f4,184,NonNumberToNumber
code-creation,Builtin,2,622953,0x7ff6d8e857b4,240,NonNumberToNumeric
code-creation,Builtin,2,623050,0x7ff6d8e858b4,36,ToNumeric
code-creation,Builtin,2,623068,0x7ff6d8e858f4,1296,NumberToString
code-creation,Builtin,2,623083,0x7ff6d8e85e34,104,ToBoolean
code-creation,Builtin,2,623135,0x7ff6d8e85eb4,100,ToBooleanForBaselineJump
code-creation,Builtin,2,623193,0x7ff6d8e85f34,604,ToLength
code-creation,Builtin,2,623229,0x7ff6d8e861b4,1332,ToName
code-creation,Builtin,2,623275,0x7ff6d8e866f4,756,ToObject
code-creation,Builtin,2,623543,0x7ff6d8e869f4,236,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,623569,0x7ff6d8e86af4,236,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,623587,0x7ff6d8e86bf4,236,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,623605,0x7ff6d8e86cf4,380,OrdinaryToPrimitive_Number
code-creation,Builtin,2,623621,0x7ff6d8e86e74,380,OrdinaryToPrimitive_String
code-creation,Builtin,2,623638,0x7ff6d8e86ff4,232,FastConsoleAssert
code-creation,Builtin,2,623655,0x7ff6d8e870f4,156,DataViewPrototypeGetBuffer
code-creation,Builtin,2,623672,0x7ff6d8e871b4,752,DataViewPrototypeGetByteLength
code-creation,Builtin,2,623691,0x7ff6d8e874b4,416,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,623709,0x7ff6d8e87674,816,DataViewPrototypeGetUint8
code-creation,Builtin,2,623728,0x7ff6d8e879b4,816,DataViewPrototypeGetInt8
code-creation,Builtin,2,623748,0x7ff6d8e87cf4,900,DataViewPrototypeGetUint16
code-creation,Builtin,2,623768,0x7ff6d8e880b4,896,DataViewPrototypeGetInt16
code-creation,Builtin,2,623832,0x7ff6d8e88474,1048,DataViewPrototypeGetUint32
code-creation,Builtin,2,624000,0x7ff6d8e888b4,928,DataViewPrototypeGetInt32
code-creation,Builtin,2,624063,0x7ff6d8e88c74,1080,DataViewPrototypeGetFloat32
code-creation,Builtin,2,624085,0x7ff6d8e890b4,1144,DataViewPrototypeGetFloat64
code-creation,Builtin,2,624101,0x7ff6d8e89534,1216,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,624165,0x7ff6d8e89a34,1240,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,624191,0x7ff6d8e89f34,1216,DataViewPrototypeSetUint8
code-creation,Builtin,2,624212,0x7ff6d8e8a434,1216,DataViewPrototypeSetInt8
code-creation,Builtin,2,624237,0x7ff6d8e8a934,1292,DataViewPrototypeSetUint16
code-creation,Builtin,2,624259,0x7ff6d8e8ae74,1292,DataViewPrototypeSetInt16
code-creation,Builtin,2,624275,0x7ff6d8e8b3b4,1328,DataViewPrototypeSetUint32
code-creation,Builtin,2,624291,0x7ff6d8e8b8f4,1328,DataViewPrototypeSetInt32
code-creation,Builtin,2,624306,0x7ff6d8e8be34,1292,DataViewPrototypeSetFloat32
code-creation,Builtin,2,624323,0x7ff6d8e8c374,1356,DataViewPrototypeSetFloat64
code-creation,Builtin,2,624339,0x7ff6d8e8c8f4,1232,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,624356,0x7ff6d8e8cdf4,1232,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,624372,0x7ff6d8e8d2f4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,624388,0x7ff6d8e8d634,1144,FinalizationRegistryRegister
code-creation,Builtin,2,624404,0x7ff6d8e8dab4,692,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,624421,0x7ff6d8e8dd74,340,FunctionPrototypeHasInstance
code-creation,Builtin,2,624437,0x7ff6d8e8def4,940,FastFunctionPrototypeBind
code-creation,Builtin,2,624452,0x7ff6d8e8e2b4,92,IncBlockCounter
code-creation,Builtin,2,624467,0x7ff6d8e8e334,228,GetTemplateObject
code-creation,Builtin,2,624482,0x7ff6d8e8e434,92,ForInNext
code-creation,Builtin,2,624497,0x7ff6d8e8e4b4,132,GetImportMetaObjectBaseline
code-creation,Builtin,2,624559,0x7ff6d8e8e574,116,GetIteratorWithFeedback
code-creation,Builtin,2,624587,0x7ff6d8e8e5f4,100,GetIteratorBaseline
code-creation,Builtin,2,624603,0x7ff6d8e8e674,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,624618,0x7ff6d8e8e7b4,1068,CallIteratorWithFeedback
code-creation,Builtin,2,624634,0x7ff6d8e8ebf4,284,MathAbs
code-creation,Builtin,2,624647,0x7ff6d8e8ed34,424,MathCeil
code-creation,Builtin,2,624662,0x7ff6d8e8eef4,428,MathFloor
code-creation,Builtin,2,624676,0x7ff6d8e8f0b4,484,MathRound
code-creation,Builtin,2,624732,0x7ff6d8e8f2b4,428,MathTrunc
code-creation,Builtin,2,624765,0x7ff6d8e8f474,376,MathPow
code-creation,Builtin,2,624783,0x7ff6d8e8f5f4,412,MathMax
code-creation,Builtin,2,624798,0x7ff6d8e8f7b4,416,MathMin
code-creation,Builtin,2,624812,0x7ff6d8e8f974,328,MathAcos
code-creation,Builtin,2,624826,0x7ff6d8e8faf4,328,MathAcosh
code-creation,Builtin,2,624869,0x7ff6d8e8fc74,328,MathAsin
code-creation,Builtin,2,624891,0x7ff6d8e8fdf4,328,MathAsinh
code-creation,Builtin,2,624906,0x7ff6d8e8ff74,328,MathAtan
code-creation,Builtin,2,624922,0x7ff6d8e900f4,420,MathAtan2
code-creation,Builtin,2,624937,0x7ff6d8e902b4,328,MathAtanh
code-creation,Builtin,2,624953,0x7ff6d8e90434,328,MathCbrt
code-creation,Builtin,2,624969,0x7ff6d8e905b4,168,MathClz32
code-creation,Builtin,2,624984,0x7ff6d8e90674,328,MathCos
code-creation,Builtin,2,625000,0x7ff6d8e907f4,328,MathCosh
code-creation,Builtin,2,625015,0x7ff6d8e90974,328,MathExp
code-creation,Builtin,2,625028,0x7ff6d8e90af4,328,MathExpm1
code-creation,Builtin,2,625041,0x7ff6d8e90c74,268,MathFround
code-creation,Builtin,2,625053,0x7ff6d8e90db4,304,MathImul
code-creation,Builtin,2,625066,0x7ff6d8e90ef4,328,MathLog
code-creation,Builtin,2,625081,0x7ff6d8e91074,328,MathLog1p
code-creation,Builtin,2,625096,0x7ff6d8e911f4,328,MathLog10
code-creation,Builtin,2,625111,0x7ff6d8e91374,328,MathLog2
code-creation,Builtin,2,625161,0x7ff6d8e914f4,328,MathSin
code-creation,Builtin,2,625183,0x7ff6d8e91674,176,MathSign
code-creation,Builtin,2,625199,0x7ff6d8e91734,328,MathSinh
code-creation,Builtin,2,625240,0x7ff6d8e918b4,264,MathSqrt
code-creation,Builtin,2,625260,0x7ff6d8e919f4,328,MathTan
code-creation,Builtin,2,625275,0x7ff6d8e91b74,328,MathTanh
code-creation,Builtin,2,625290,0x7ff6d8e91cf4,1052,MathHypot
code-creation,Builtin,2,625309,0x7ff6d8e92134,336,MathRandom
code-creation,Builtin,2,625334,0x7ff6d8e922b4,2820,NumberPrototypeToString
code-creation,Builtin,2,625358,0x7ff6d8e92df4,156,NumberIsFinite
code-creation,Builtin,2,625380,0x7ff6d8e92eb4,344,NumberIsInteger
code-creation,Builtin,2,625401,0x7ff6d8e93034,128,NumberIsNaN
code-creation,Builtin,2,625425,0x7ff6d8e930f4,376,NumberIsSafeInteger
code-creation,Builtin,2,625450,0x7ff6d8e93274,156,NumberPrototypeValueOf
code-creation,Builtin,2,625473,0x7ff6d8e93334,200,NumberParseFloat
code-creation,Builtin,2,625491,0x7ff6d8e93434,252,ParseInt
code-creation,Builtin,2,625512,0x7ff6d8e93534,84,NumberParseInt
code-creation,Builtin,2,625538,0x7ff6d8e935b4,820,Add
code-creation,Builtin,2,625580,0x7ff6d8e938f4,420,Subtract
code-creation,Builtin,2,625613,0x7ff6d8e93ab4,608,Multiply
code-creation,Builtin,2,625642,0x7ff6d8e93d34,532,Divide
code-creation,Builtin,2,625663,0x7ff6d8e93f74,592,Modulus
code-creation,Builtin,2,625685,0x7ff6d8e941f4,520,Exponentiate
code-creation,Builtin,2,625707,0x7ff6d8e94434,344,Negate
code-creation,Builtin,2,625732,0x7ff6d8e945b4,108,BitwiseNot
code-creation,Builtin,2,625755,0x7ff6d8e94634,108,Decrement
code-creation,Builtin,2,625773,0x7ff6d8e946b4,108,Increment
code-creation,Builtin,2,625794,0x7ff6d8e94734,428,ShiftLeft
code-creation,Builtin,2,625816,0x7ff6d8e948f4,428,ShiftRight
code-creation,Builtin,2,625839,0x7ff6d8e94ab4,540,ShiftRightLogical
code-creation,Builtin,2,625863,0x7ff6d8e94cf4,424,BitwiseAnd
code-creation,Builtin,2,625887,0x7ff6d8e94eb4,424,BitwiseOr
code-creation,Builtin,2,625913,0x7ff6d8e95074,424,BitwiseXor
code-creation,Builtin,2,625948,0x7ff6d8e95234,796,LessThan
code-creation,Builtin,2,625977,0x7ff6d8e95574,796,LessThanOrEqual
code-creation,Builtin,2,626001,0x7ff6d8e958b4,792,GreaterThan
code-creation,Builtin,2,626049,0x7ff6d8e95bf4,792,GreaterThanOrEqual
code-creation,Builtin,2,626078,0x7ff6d8e95f34,852,Equal
code-creation,Builtin,2,626100,0x7ff6d8e962b4,332,StrictEqual
code-creation,Builtin,2,626126,0x7ff6d8e96434,3332,ObjectFromEntries
code-creation,Builtin,2,626153,0x7ff6d8e97174,752,CreateObjectWithoutProperties
code-creation,Builtin,2,626182,0x7ff6d8e97474,144,ObjectIsExtensible
code-creation,Builtin,2,626209,0x7ff6d8e97534,148,ObjectPreventExtensions
code-creation,Builtin,2,626236,0x7ff6d8e975f4,140,ObjectGetPrototypeOf
code-creation,Builtin,2,626263,0x7ff6d8e976b4,304,ObjectSetPrototypeOf
code-creation,Builtin,2,626290,0x7ff6d8e977f4,80,ObjectPrototypeToString
code-creation,Builtin,2,626316,0x7ff6d8e97874,96,ObjectPrototypeValueOf
code-creation,Builtin,2,626342,0x7ff6d8e978f4,176,ObjectPrototypeToLocaleString
code-creation,Builtin,2,626376,0x7ff6d8e979b4,872,FulfillPromise
code-creation,Builtin,2,626405,0x7ff6d8e97d34,1012,RejectPromise
code-creation,Builtin,2,626443,0x7ff6d8e98134,2700,NewPromiseCapability
code-creation,Builtin,2,626472,0x7ff6d8e98bf4,168,PromiseCapabilityDefaultReject
code-creation,Builtin,2,626499,0x7ff6d8e98cb4,156,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,626526,0x7ff6d8e98d74,1296,PerformPromiseThen
code-creation,Builtin,2,626552,0x7ff6d8e992b4,668,PromiseReject
code-creation,Builtin,2,626590,0x7ff6d8e99574,292,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,626621,0x7ff6d8e996b4,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,626649,0x7ff6d8e99734,4720,PromiseAll
code-creation,Builtin,2,626667,0x7ff6d8e9a9b4,5144,PromiseAllSettled
code-creation,Builtin,2,626681,0x7ff6d8e9bdf4,1108,PromiseAllResolveElementClosure
code-creation,Builtin,2,626698,0x7ff6d8e9c274,1404,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,626715,0x7ff6d8e9c7f4,1412,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,626731,0x7ff6d8e9cdb4,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,626747,0x7ff6d8e9d274,2692,PromiseAny
code-creation,Builtin,2,626780,0x7ff6d8e9dd34,3136,PromiseConstructor
code-creation,Builtin,2,626818,0x7ff6d8e9e9b4,300,PromisePrototypeCatch
code-creation,Builtin,2,626844,0x7ff6d8e9eaf4,88,PromiseValueThunkFinally
code-creation,Builtin,2,626889,0x7ff6d8e9eb74,80,PromiseThrowerFinally
tick,0x7fffad96d1c4,626918,0,0x0,6
tick,0x7ff6d8197f23,626950,0,0x0,6
code-creation,Builtin,2,626979,0x7ff6d8e9ebf4,1020,PromiseCatchFinally
code-creation,Builtin,2,627022,0x7ff6d8e9eff4,1020,PromiseThenFinally
code-creation,Builtin,2,627049,0x7ff6d8e9f3f4,1796,PromisePrototypeFinally
code-creation,Builtin,2,627076,0x7ff6d8e9fb34,1544,PromiseRace
code-creation,Builtin,2,627100,0x7ff6d8ea0174,340,PromiseFulfillReactionJob
code-creation,Builtin,2,627124,0x7ff6d8ea02f4,444,PromiseRejectReactionJob
code-creation,Builtin,2,627145,0x7ff6d8ea04b4,156,PromiseResolveTrampoline
code-creation,Builtin,2,627170,0x7ff6d8ea0574,680,PromiseResolve
code-creation,Builtin,2,627216,0x7ff6d8ea0834,696,ResolvePromise
code-creation,Builtin,2,627275,0x7ff6d8ea0af4,2248,PromisePrototypeThen
code-creation,Builtin,2,627308,0x7ff6d8ea13f4,1364,PromiseResolveThenableJob
code-creation,Builtin,2,627333,0x7ff6d8ea1974,448,ProxyConstructor
code-creation,Builtin,2,627359,0x7ff6d8ea1b74,1768,ProxyDeleteProperty
code-creation,Builtin,2,627385,0x7ff6d8ea2274,2144,ProxyGetProperty
code-creation,Builtin,2,627411,0x7ff6d8ea2af4,1056,ProxyGetPrototypeOf
code-creation,Builtin,2,627437,0x7ff6d8ea2f34,1692,ProxyHasProperty
code-creation,Builtin,2,627463,0x7ff6d8ea35f4,772,ProxyIsExtensible
code-creation,Builtin,2,627490,0x7ff6d8ea3934,824,ProxyPreventExtensions
code-creation,Builtin,2,627517,0x7ff6d8ea3c74,1236,ProxyRevocable
code-creation,Builtin,2,627544,0x7ff6d8ea4174,132,ProxyRevoke
code-creation,Builtin,2,627570,0x7ff6d8ea4234,2240,ProxySetProperty
code-creation,Builtin,2,627605,0x7ff6d8ea4b34,1312,ProxySetPrototypeOf
code-creation,Builtin,2,627635,0x7ff6d8ea5074,208,ReflectIsExtensible
code-creation,Builtin,2,627661,0x7ff6d8ea5174,216,ReflectPreventExtensions
code-creation,Builtin,2,627687,0x7ff6d8ea5274,184,ReflectGetPrototypeOf
code-creation,Builtin,2,627715,0x7ff6d8ea5334,296,ReflectSetPrototypeOf
code-creation,Builtin,2,627742,0x7ff6d8ea5474,300,ReflectGet
code-creation,Builtin,2,627766,0x7ff6d8ea55b4,156,ReflectDeleteProperty
code-creation,Builtin,2,627793,0x7ff6d8ea5674,144,ReflectHas
code-creation,Builtin,2,627819,0x7ff6d8ea5734,5024,RegExpPrototypeExecSlow
code-creation,Builtin,2,627839,0x7ff6d8ea6af4,5044,RegExpPrototypeExec
code-creation,Builtin,2,627863,0x7ff6d8ea7eb4,2312,RegExpPrototypeMatchAll
code-creation,Builtin,2,627885,0x7ff6d8ea87f4,9352,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,627914,0x7ff6d8eaacb4,8744,RegExpMatchFast
code-creation,Builtin,2,627941,0x7ff6d8eacef4,3572,RegExpPrototypeMatch
code-creation,Builtin,2,627969,0x7ff6d8eadcf4,6180,RegExpReplace
code-creation,Builtin,2,628018,0x7ff6d8eaf534,524,RegExpPrototypeReplace
code-creation,Builtin,2,628072,0x7ff6d8eaf774,1356,RegExpSearchFast
code-creation,Builtin,2,628101,0x7ff6d8eafcf4,1636,RegExpPrototypeSearch
code-creation,Builtin,2,628129,0x7ff6d8eb0374,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,628158,0x7ff6d8eb0474,5744,RegExpSplit
code-creation,Builtin,2,628183,0x7ff6d8eb1af4,484,RegExpPrototypeSplit
code-creation,Builtin,2,628210,0x7ff6d8eb1cf4,2220,RegExpPrototypeTest
code-creation,Builtin,2,628237,0x7ff6d8eb25b4,1284,RegExpPrototypeTestFast
code-creation,Builtin,2,628265,0x7ff6d8eb2af4,240,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,628291,0x7ff6d8eb2bf4,256,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,628320,0x7ff6d8eb2d34,256,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,628349,0x7ff6d8eb2e74,256,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,628376,0x7ff6d8eb2fb4,256,RegExpPrototypeLinearGetter
code-creation,Builtin,2,628402,0x7ff6d8eb30f4,256,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,628443,0x7ff6d8eb3234,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,628473,0x7ff6d8eb3374,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,628502,0x7ff6d8eb34b4,2288,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,628530,0x7ff6d8eb3db4,1464,StringPrototypeAt
code-creation,Builtin,2,628557,0x7ff6d8eb4374,3096,StringPrototypeEndsWith
code-creation,Builtin,2,628584,0x7ff6d8eb4fb4,488,CreateHTML
code-creation,Builtin,2,628609,0x7ff6d8eb51b4,164,StringPrototypeAnchor
code-creation,Builtin,2,628636,0x7ff6d8eb5274,128,StringPrototypeBig
code-creation,Builtin,2,628691,0x7ff6d8eb5334,128,StringPrototypeBlink
code-creation,Builtin,2,628722,0x7ff6d8eb53f4,128,StringPrototypeBold
code-creation,Builtin,2,628746,0x7ff6d8eb54b4,172,StringPrototypeFontcolor
code-creation,Builtin,2,628768,0x7ff6d8eb5574,172,StringPrototypeFontsize
code-creation,Builtin,2,628822,0x7ff6d8eb5634,128,StringPrototypeFixed
code-creation,Builtin,2,628851,0x7ff6d8eb56f4,128,StringPrototypeItalics
code-creation,Builtin,2,628877,0x7ff6d8eb57b4,172,StringPrototypeLink
code-creation,Builtin,2,628902,0x7ff6d8eb5874,128,StringPrototypeSmall
code-creation,Builtin,2,628928,0x7ff6d8eb5934,128,StringPrototypeStrike
code-creation,Builtin,2,628953,0x7ff6d8eb59f4,128,StringPrototypeSub
code-creation,Builtin,2,628979,0x7ff6d8eb5ab4,128,StringPrototypeSup
code-creation,Builtin,2,629004,0x7ff6d8eb5b74,1060,StringPrototypeIncludes
code-creation,Builtin,2,629034,0x7ff6d8eb5fb4,648,StringPrototypeIndexOf
code-creation,Builtin,2,629060,0x7ff6d8eb6274,344,StringPrototypeIterator
code-creation,Builtin,2,629086,0x7ff6d8eb63f4,1976,StringIteratorPrototypeNext
code-creation,Builtin,2,629116,0x7ff6d8eb6bb4,1264,StringPrototypeMatch
code-creation,Builtin,2,629143,0x7ff6d8eb70b4,1264,StringPrototypeSearch
code-creation,Builtin,2,629173,0x7ff6d8eb75b4,816,StringPrototypePadStart
code-creation,Builtin,2,629200,0x7ff6d8eb78f4,816,StringPrototypePadEnd
code-creation,Builtin,2,629226,0x7ff6d8eb7c34,120,StringRepeat
code-creation,Builtin,2,629252,0x7ff6d8eb7cb4,404,StringPrototypeRepeat
code-creation,Builtin,2,629280,0x7ff6d8eb7e74,11220,StringPrototypeReplaceAll
code-creation,Builtin,2,629308,0x7ff6d8ebaa74,3316,StringPrototypeSlice
code-creation,Builtin,2,629333,0x7ff6d8ebb774,3120,StringPrototypeStartsWith
code-creation,Builtin,2,629361,0x7ff6d8ebc3b4,3248,StringPrototypeSubstr
code-creation,Builtin,2,629387,0x7ff6d8ebd074,3168,StringPrototypeSubstring
code-creation,Builtin,2,629444,0x7ff6d8ebdcf4,6860,StringPrototypeTrim
code-creation,Builtin,2,629474,0x7ff6d8ebf7f4,6212,StringPrototypeTrimStart
code-creation,Builtin,2,629501,0x7ff6d8ec1074,5828,StringPrototypeTrimEnd
code-creation,Builtin,2,629562,0x7ff6d8ec2774,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,629590,0x7ff6d8ec2834,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,629654,0x7ff6d8ec28f4,176,SymbolPrototypeToString
code-creation,Builtin,2,629677,0x7ff6d8ec29b4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,629703,0x7ff6d8ec2a74,1152,TypedArrayPrototypeAt
code-creation,Builtin,2,629761,0x7ff6d8ec2f34,10140,CreateTypedArray
code-creation,Builtin,2,629785,0x7ff6d8ec56f4,1776,TypedArrayPrototypeEvery
code-creation,Builtin,2,629803,0x7ff6d8ec5df4,420,TypedArrayPrototypeEntries
code-creation,Builtin,2,629819,0x7ff6d8ec5fb4,4232,TypedArrayPrototypeFilter
code-creation,Builtin,2,629834,0x7ff6d8ec7074,1792,TypedArrayPrototypeFind
code-creation,Builtin,2,629851,0x7ff6d8ec77b4,1796,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,629868,0x7ff6d8ec7ef4,1780,TypedArrayPrototypeFindLast
code-creation,Builtin,2,629884,0x7ff6d8ec85f4,1784,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,629901,0x7ff6d8ec8cf4,1660,TypedArrayPrototypeForEach
code-creation,Builtin,2,629917,0x7ff6d8ec9374,2348,TypedArrayFrom
code-creation,Builtin,2,629933,0x7ff6d8ec9cb4,404,TypedArrayPrototypeKeys
code-creation,Builtin,2,629949,0x7ff6d8ec9e74,1036,TypedArrayOf
code-creation,Builtin,2,629965,0x7ff6d8eca2b4,1764,TypedArrayPrototypeReduce
code-creation,Builtin,2,629980,0x7ff6d8eca9b4,1756,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,629996,0x7ff6d8ecb0b4,3492,TypedArrayPrototypeSet
code-creation,Builtin,2,630012,0x7ff6d8ecbe74,3912,TypedArrayPrototypeSlice
code-creation,Builtin,2,630034,0x7ff6d8eccdf4,1792,TypedArrayPrototypeSome
code-creation,Builtin,2,630064,0x7ff6d8ecd534,948,TypedArrayMergeSort
code-creation,Builtin,2,630089,0x7ff6d8ecd8f4,2352,TypedArrayPrototypeSort
code-creation,Builtin,2,630117,0x7ff6d8ece234,3188,TypedArrayPrototypeSubArray
code-creation,Builtin,2,630146,0x7ff6d8eceeb4,420,TypedArrayPrototypeValues
code-creation,Builtin,2,630176,0x7ff6d8ecf074,956,WeakRefConstructor
code-creation,Builtin,2,630235,0x7ff6d8ecf434,184,WeakRefDeref
code-creation,Builtin,2,630280,0x7ff6d8ecf4f4,664,NewSloppyArgumentsElements
code-creation,Builtin,2,630306,0x7ff6d8ecf7b4,304,NewStrictArgumentsElements
code-creation,Builtin,2,630330,0x7ff6d8ecf8f4,332,NewRestArgumentsElements
code-creation,Builtin,2,630353,0x7ff6d8ecfa74,1536,FastNewSloppyArguments
code-creation,Builtin,2,630375,0x7ff6d8ed00b4,516,FastNewStrictArguments
code-creation,Builtin,2,630399,0x7ff6d8ed02f4,564,FastNewRestArguments
code-creation,Builtin,2,630418,0x7ff6d8ed0534,668,StringSlowFlatten
code-creation,Builtin,2,630439,0x7ff6d8ed07f4,2164,StringIndexOf
code-creation,Builtin,2,630461,0x7ff6d8ed1074,2064,TestTurbofanType
code-creation,Builtin,2,630484,0x7ff6d8ed18b4,152,CheckTurbofanType
code-creation,Builtin,2,630509,0x7ff6d8ed1974,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,630531,0x7ff6d8ed19b4,20,TestHelperPlus1
code-creation,Builtin,2,630555,0x7ff6d8ed19f4,20,TestHelperPlus2
code-creation,Builtin,2,630577,0x7ff6d8ed1a34,96,NewSmiBox
code-creation,Builtin,2,630636,0x7ff6d8ed1ab4,24,ReturnTwoValues
code-creation,Builtin,2,630721,0x7ff6d8ed1af4,32,Load_FastSmiElements_0
code-creation,Builtin,2,630749,0x7ff6d8ed1b34,32,Load_FastObjectElements_0
code-creation,Builtin,2,630765,0x7ff6d8ed1b74,144,Load_FastDoubleElements_0
code-creation,Builtin,2,630781,0x7ff6d8ed1c34,32,Store_FastSmiElements_0
code-creation,Builtin,2,630796,0x7ff6d8ed1c74,96,Store_FastObjectElements_0
code-creation,Builtin,2,630810,0x7ff6d8ed1cf4,48,Store_FastDoubleElements_0
code-creation,Builtin,2,630825,0x7ff6d8ed1d34,40,Delete_FastSmiElements_0
code-creation,Builtin,2,630840,0x7ff6d8ed1d74,40,Delete_FastObjectElements_0
code-creation,Builtin,2,630855,0x7ff6d8ed1db4,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,630871,0x7ff6d8ed1df4,296,SortCompareDefault
code-creation,Builtin,2,630887,0x7ff6d8ed1f34,96,SortCompareUserFn
code-creation,Builtin,2,630903,0x7ff6d8ed1fb4,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,630920,0x7ff6d8ed1ff4,312,Copy
code-creation,Builtin,2,630934,0x7ff6d8ed2134,5784,MergeAt
code-creation,Builtin,2,630955,0x7ff6d8ed37f4,792,GallopLeft
code-creation,Builtin,2,630983,0x7ff6d8ed3b34,832,GallopRight
code-creation,Builtin,2,631048,0x7ff6d8ed3eb4,3808,ArrayTimSort
code-creation,Builtin,2,631076,0x7ff6d8ed4db4,2100,ArrayPrototypeSort
code-creation,Builtin,2,631101,0x7ff6d8ed55f4,3564,StringFastLocaleCompare
code-creation,Builtin,2,631135,0x7ff6d8ed63f4,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,631163,0x7ff6d8ed6474,24,WasmFuncRefToJS
code-creation,Builtin,2,631180,0x7ff6d8ed64b4,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,631196,0x7ff6d8ed6534,76,WasmTaggedToFloat64
code-creation,Builtin,2,631212,0x7ff6d8ed65b4,72,WasmMemoryGrow
code-creation,Builtin,2,631227,0x7ff6d8ed6634,100,WasmTableInit
code-creation,Builtin,2,631243,0x7ff6d8ed66b4,100,WasmTableCopy
code-creation,Builtin,2,631258,0x7ff6d8ed6734,84,WasmTableFill
code-creation,Builtin,2,631276,0x7ff6d8ed67b4,72,WasmTableGrow
code-creation,Builtin,2,631303,0x7ff6d8ed6834,148,WasmTableGet
code-creation,Builtin,2,631331,0x7ff6d8ed68f4,240,WasmTableSet
code-creation,Builtin,2,631356,0x7ff6d8ed69f4,96,WasmRefFunc
code-creation,Builtin,2,631383,0x7ff6d8ed6a74,144,WasmAllocateFixedArray
code-creation,Builtin,2,631403,0x7ff6d8ed6b34,44,WasmThrow
code-creation,Builtin,2,631448,0x7ff6d8ed6b74,56,WasmRethrow
code-creation,Builtin,2,631500,0x7ff6d8ed6bb4,44,WasmRethrowExplicitContext
code-creation,Builtin,2,631535,0x7ff6d8ed6bf4,44,WasmTriggerTierUp
code-creation,Builtin,2,631564,0x7ff6d8ed6c34,32,WasmStackGuard
code-creation,Builtin,2,631591,0x7ff6d8ed6c74,32,WasmStackOverflow
code-creation,Builtin,2,631612,0x7ff6d8ed6cb4,40,WasmTraceMemory
code-creation,Builtin,2,631629,0x7ff6d8ed6cf4,32,WasmTraceEnter
code-creation,Builtin,2,631646,0x7ff6d8ed6d34,40,WasmTraceExit
code-creation,Builtin,2,631662,0x7ff6d8ed6d74,340,WasmAllocateJSArray
code-creation,Builtin,2,631678,0x7ff6d8ed6ef4,120,WasmAllocateStructWithRtt
code-creation,Builtin,2,631695,0x7ff6d8ed6f74,136,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,631716,0x7ff6d8ed7034,172,WasmAllocateArray_InitZero
code-creation,Builtin,2,631746,0x7ff6d8ed70f4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,631776,0x7ff6d8ed71b4,60,WasmArrayInitFromData
code-creation,Builtin,2,631831,0x7ff6d8ed71f4,140,WasmArrayCopyWithChecks
code-creation,Builtin,2,631857,0x7ff6d8ed72b4,72,WasmArrayCopy
code-creation,Builtin,2,631886,0x7ff6d8ed7334,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,631906,0x7ff6d8ed7434,52,WasmSubtypeCheck
code-creation,Builtin,2,631928,0x7ff6d8ed7474,8,WasmInt32ToNumber
code-creation,Builtin,2,631957,0x7ff6d8ed74b4,116,WasmUint32ToNumber
code-creation,Builtin,2,631986,0x7ff6d8ed7534,144,UintPtr53ToNumber
code-creation,Builtin,2,632011,0x7ff6d8ed75f4,96,WasmAtomicNotify
code-creation,Builtin,2,632036,0x7ff6d8ed7674,116,WasmI32AtomicWait64
code-creation,Builtin,2,632057,0x7ff6d8ed76f4,116,WasmI64AtomicWait64
code-creation,Builtin,2,632081,0x7ff6d8ed7774,1268,CallRefIC
code-creation,Builtin,2,632103,0x7ff6d8ed7c74,596,WasmGetOwnProperty
code-creation,Builtin,2,632127,0x7ff6d8ed7ef4,40,WasmTrap
code-creation,Builtin,2,632149,0x7ff6d8ed7f34,16,ThrowWasmTrapUnreachable
tick,0x7fffad96d1c4,632180,0,0x0,6
tick,0x7fffad96d1c4,632209,0,0x0,6
tick,0x7fffad8f91bf,632225,0,0x0,6
code-creation,Builtin,2,632244,0x7ff6d8ed7f74,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,632276,0x7ff6d8ed7fb4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,632298,0x7ff6d8ed7ff4,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,632315,0x7ff6d8ed8034,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,632331,0x7ff6d8ed8074,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,632381,0x7ff6d8ed80b4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,632408,0x7ff6d8ed80f4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,632425,0x7ff6d8ed8134,16,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,632442,0x7ff6d8ed8174,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,632458,0x7ff6d8ed81b4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,632474,0x7ff6d8ed81f4,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,632490,0x7ff6d8ed8234,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,632506,0x7ff6d8ed8274,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,632521,0x7ff6d8ed82b4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,632538,0x7ff6d8ed82f4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,632559,0x7ff6d8ed8334,168,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,632580,0x7ff6d8ed83f4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,632596,0x7ff6d8ed8434,112,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,632612,0x7ff6d8ed84b4,108,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,632628,0x7ff6d8ed8534,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,632645,0x7ff6d8ed8574,216,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,632661,0x7ff6d8ed8674,244,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,632702,0x7ff6d8ed8774,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,632728,0x7ff6d8ed87b4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,632745,0x7ff6d8ed87f4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,632762,0x7ff6d8ed8834,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,632778,0x7ff6d8ed8874,128,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,632795,0x7ff6d8ed8934,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,632845,0x7ff6d8ed8974,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,632873,0x7ff6d8ed89b4,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,632891,0x7ff6d8ed89f4,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,632908,0x7ff6d8ed8a34,2760,Load_GenericElementsAccessor_0
code-creation,Builtin,2,632924,0x7ff6d8ed9534,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,632940,0x7ff6d8ed9574,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,632956,0x7ff6d8ed95b4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,632972,0x7ff6d8ed95f4,172,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,632989,0x7ff6d8ed96b4,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,633006,0x7ff6d8ed9774,112,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,633022,0x7ff6d8ed97f4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,633039,0x7ff6d8ed9834,160,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,633057,0x7ff6d8ed98f4,108,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,633074,0x7ff6d8ed9974,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,633119,0x7ff6d8ed99b4,156,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,633156,0x7ff6d8ed9a74,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,633176,0x7ff6d8ed9ab4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,633200,0x7ff6d8ed9af4,616,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,633224,0x7ff6d8ed9d74,216,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,633250,0x7ff6d8ed9e74,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,633279,0x7ff6d8ed9eb4,196,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,633308,0x7ff6d8ed9fb4,244,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,633350,0x7ff6d8eda0b4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,633385,0x7ff6d8eda0f4,196,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,633415,0x7ff6d8eda1f4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,633443,0x7ff6d8eda234,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,633496,0x7ff6d8eda274,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,633531,0x7ff6d8eda334,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,633559,0x7ff6d8eda374,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,633588,0x7ff6d8eda3b4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,633617,0x7ff6d8eda474,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,633645,0x7ff6d8eda4b4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,633685,0x7ff6d8eda4f4,184,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,633726,0x7ff6d8eda5b4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,633758,0x7ff6d8eda5f4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,633788,0x7ff6d8eda634,184,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,633816,0x7ff6d8eda6f4,128,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,633843,0x7ff6d8eda7b4,172,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,633872,0x7ff6d8eda874,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,633902,0x7ff6d8eda934,12,CollatorConstructor
code-creation,Builtin,2,633928,0x7ff6d8eda974,12,CollatorInternalCompare
code-creation,Builtin,2,633955,0x7ff6d8eda9b4,12,CollatorPrototypeCompare
code-creation,Builtin,2,633983,0x7ff6d8eda9f4,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,634036,0x7ff6d8edaa34,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,634070,0x7ff6d8edaa74,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,634098,0x7ff6d8edaab4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,634125,0x7ff6d8edaaf4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,634155,0x7ff6d8edab34,12,DateTimeFormatConstructor
code-creation,Builtin,2,634183,0x7ff6d8edab74,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,634210,0x7ff6d8edabb4,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,634238,0x7ff6d8edabf4,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,634267,0x7ff6d8edac34,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,634316,0x7ff6d8edac74,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,634349,0x7ff6d8edacb4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,634378,0x7ff6d8edacf4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,634405,0x7ff6d8edad34,12,DisplayNamesConstructor
code-creation,Builtin,2,634430,0x7ff6d8edad74,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,634456,0x7ff6d8edadb4,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,634484,0x7ff6d8edadf4,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,634511,0x7ff6d8edae34,12,IntlGetCanonicalLocales
code-creation,Builtin,2,634536,0x7ff6d8edae74,12,IntlSupportedValuesOf
code-creation,Builtin,2,634552,0x7ff6d8edaeb4,12,ListFormatConstructor
code-creation,Builtin,2,634568,0x7ff6d8edaef4,228,ListFormatPrototypeFormat
code-creation,Builtin,2,634583,0x7ff6d8edaff4,228,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,634599,0x7ff6d8edb0f4,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,634618,0x7ff6d8edb134,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,634641,0x7ff6d8edb174,12,LocaleConstructor
code-creation,Builtin,2,634658,0x7ff6d8edb1b4,12,LocalePrototypeBaseName
code-creation,Builtin,2,634693,0x7ff6d8edb1f4,12,LocalePrototypeCalendar
code-creation,Builtin,2,634778,0x7ff6d8edb234,12,LocalePrototypeCalendars
code-creation,Builtin,2,634803,0x7ff6d8edb274,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,634820,0x7ff6d8edb2b4,12,LocalePrototypeCollation
code-creation,Builtin,2,634836,0x7ff6d8edb2f4,12,LocalePrototypeCollations
code-creation,Builtin,2,634851,0x7ff6d8edb334,12,LocalePrototypeHourCycle
code-creation,Builtin,2,634867,0x7ff6d8edb374,12,LocalePrototypeHourCycles
code-creation,Builtin,2,634909,0x7ff6d8edb3b4,12,LocalePrototypeLanguage
code-creation,Builtin,2,634924,0x7ff6d8edb3f4,12,LocalePrototypeMaximize
code-creation,Builtin,2,634939,0x7ff6d8edb434,12,LocalePrototypeMinimize
code-creation,Builtin,2,634954,0x7ff6d8edb474,12,LocalePrototypeNumeric
code-creation,Builtin,2,634969,0x7ff6d8edb4b4,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,634985,0x7ff6d8edb4f4,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,635001,0x7ff6d8edb534,12,LocalePrototypeRegion
code-creation,Builtin,2,635016,0x7ff6d8edb574,12,LocalePrototypeScript
code-creation,Builtin,2,635032,0x7ff6d8edb5b4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,635049,0x7ff6d8edb5f4,12,LocalePrototypeTimeZones
code-creation,Builtin,2,635064,0x7ff6d8edb634,12,LocalePrototypeToString
code-creation,Builtin,2,635085,0x7ff6d8edb674,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,635107,0x7ff6d8edb6b4,12,NumberFormatConstructor
code-creation,Builtin,2,635122,0x7ff6d8edb6f4,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,635139,0x7ff6d8edb734,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,635156,0x7ff6d8edb774,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,635172,0x7ff6d8edb7b4,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,635187,0x7ff6d8edb7f4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,635242,0x7ff6d8edb834,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,635263,0x7ff6d8edb874,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,635279,0x7ff6d8edb8b4,12,PluralRulesConstructor
code-creation,Builtin,2,635295,0x7ff6d8edb8f4,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,635311,0x7ff6d8edb934,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,635327,0x7ff6d8edb974,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,635342,0x7ff6d8edb9b4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,635357,0x7ff6d8edb9f4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,635372,0x7ff6d8edba34,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,635387,0x7ff6d8edba74,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,635403,0x7ff6d8edbab4,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,635419,0x7ff6d8edbaf4,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,635434,0x7ff6d8edbb34,12,SegmenterConstructor
code-creation,Builtin,2,635449,0x7ff6d8edbb74,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,635464,0x7ff6d8edbbb4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,635479,0x7ff6d8edbbf4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,635511,0x7ff6d8edbc34,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,635561,0x7ff6d8edbc74,12,SegmentsPrototypeContaining
code-creation,Builtin,2,635613,0x7ff6d8edbcb4,12,SegmentsPrototypeIterator
code-creation,Builtin,2,635645,0x7ff6d8edbcf4,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,635665,0x7ff6d8edbd34,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,635684,0x7ff6d8edbd74,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,635708,0x7ff6d8edbdb4,196,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,635729,0x7ff6d8edbeb4,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,635754,0x7ff6d8edbef4,660,StringToLowerCaseIntl
code-creation,Builtin,2,635775,0x7ff6d8edc1b4,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,635799,0x7ff6d8edc1f4,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,635825,0x7ff6d8edc234,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,635845,0x7ff6d8edc274,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,635870,0x7ff6d8edc2b4,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,635894,0x7ff6d8edc2f4,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,635940,0x7ff6d8edc334,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,635967,0x7ff6d8edc374,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,635990,0x7ff6d8edc3b4,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,636012,0x7ff6d8edc3f4,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,636038,0x7ff6d8edc434,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,636063,0x7ff6d8edc474,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,636088,0x7ff6d8edc4b4,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,636114,0x7ff6d8edc4f4,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,636138,0x7ff6d8edc534,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,636165,0x7ff6d8edc574,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,636193,0x7ff6d8edc5b4,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,636231,0x7ff6d8edc5f4,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,636259,0x7ff6d8edc634,12,V8BreakIteratorConstructor
code-creation,Builtin,2,636280,0x7ff6d8edc674,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,636304,0x7ff6d8edc6b4,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,636351,0x7ff6d8edc6f4,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,636381,0x7ff6d8edc734,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,636405,0x7ff6d8edc774,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,636430,0x7ff6d8edc7b4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,636451,0x7ff6d8edc7f4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,636474,0x7ff6d8edc834,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,636496,0x7ff6d8edc874,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,636520,0x7ff6d8edc8b4,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,636545,0x7ff6d8edc8f4,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,636569,0x7ff6d8edc934,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,636596,0x7ff6d8edc974,24,Wide
code-creation,BytecodeHandler,0,636616,0x7ff6d8edc9b4,24,ExtraWide
code-creation,BytecodeHandler,0,636638,0x7ff6d8edc9f4,104,DebugBreakWide
code-creation,BytecodeHandler,0,636687,0x7ff6d8edca74,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,636717,0x7ff6d8edcaf4,164,DebugBreak0
code-creation,BytecodeHandler,0,636741,0x7ff6d8edcbb4,104,DebugBreak1
code-creation,BytecodeHandler,0,636766,0x7ff6d8edcc34,104,DebugBreak2
code-creation,BytecodeHandler,0,636790,0x7ff6d8edccb4,104,DebugBreak3
code-creation,BytecodeHandler,0,636813,0x7ff6d8edcd34,104,DebugBreak4
code-creation,BytecodeHandler,0,636837,0x7ff6d8edcdb4,104,DebugBreak5
code-creation,BytecodeHandler,0,636860,0x7ff6d8edce34,104,DebugBreak6
code-creation,BytecodeHandler,0,636880,0x7ff6d8edceb4,32,Ldar
code-creation,BytecodeHandler,0,636908,0x7ff6d8edcef4,60,LdaZero
code-creation,BytecodeHandler,0,636927,0x7ff6d8edcf34,68,LdaSmi
code-creation,BytecodeHandler,0,636943,0x7ff6d8edcfb4,64,LdaUndefined
code-creation,BytecodeHandler,0,636964,0x7ff6d8edd034,64,LdaNull
tick,0x7fffad96d1c4,637031,0,0x0,6
code-creation,BytecodeHandler,0,637058,0x7ff6d8edd0b4,64,LdaTheHole
code-creation,BytecodeHandler,0,637078,0x7ff6d8edd134,24,LdaTrue
code-creation,BytecodeHandler,0,637116,0x7ff6d8edd174,24,LdaFalse
code-creation,BytecodeHandler,0,637138,0x7ff6d8edd1b4,68,LdaConstant
code-creation,BytecodeHandler,0,637155,0x7ff6d8edd234,124,LdaContextSlot
code-creation,BytecodeHandler,0,637171,0x7ff6d8edd2b4,124,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,637189,0x7ff6d8edd334,80,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,637206,0x7ff6d8edd3b4,80,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,637222,0x7ff6d8edd434,32,Star
code-creation,BytecodeHandler,0,637236,0x7ff6d8edd474,48,Mov
code-creation,BytecodeHandler,0,637251,0x7ff6d8edd4b4,40,PushContext
code-creation,BytecodeHandler,0,637266,0x7ff6d8edd4f4,36,PopContext
code-creation,BytecodeHandler,0,637282,0x7ff6d8edd534,56,TestReferenceEqual
code-creation,BytecodeHandler,0,637299,0x7ff6d8edd574,60,TestUndetectable
code-creation,BytecodeHandler,0,637315,0x7ff6d8edd5b4,44,TestNull
code-creation,BytecodeHandler,0,637355,0x7ff6d8edd5f4,44,TestUndefined
code-creation,BytecodeHandler,0,637374,0x7ff6d8edd634,364,TestTypeOf
code-creation,BytecodeHandler,0,637391,0x7ff6d8edd7b4,5648,LdaGlobal
code-creation,BytecodeHandler,0,637406,0x7ff6d8ededf4,4400,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,637422,0x7ff6d8edff34,160,StaGlobal
code-creation,BytecodeHandler,0,637437,0x7ff6d8edfff4,160,StaContextSlot
code-creation,BytecodeHandler,0,637453,0x7ff6d8ee00b4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,637470,0x7ff6d8ee0134,124,LdaLookupSlot
code-creation,BytecodeHandler,0,637485,0x7ff6d8ee01b4,244,LdaLookupContextSlot
code-creation,BytecodeHandler,0,637502,0x7ff6d8ee02b4,4660,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,637518,0x7ff6d8ee14f4,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,637541,0x7ff6d8ee1574,244,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,637562,0x7ff6d8ee1674,4572,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,637580,0x7ff6d8ee2874,220,StaLookupSlot
code-creation,BytecodeHandler,0,637595,0x7ff6d8ee2974,5292,GetNamedProperty
code-creation,BytecodeHandler,0,637610,0x7ff6d8ee3e34,184,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,637626,0x7ff6d8ee3ef4,200,GetKeyedProperty
code-creation,BytecodeHandler,0,637659,0x7ff6d8ee3ff4,160,LdaModuleVariable
code-creation,BytecodeHandler,0,637678,0x7ff6d8ee40b4,292,StaModuleVariable
code-creation,BytecodeHandler,0,637694,0x7ff6d8ee41f4,176,SetNamedProperty
code-creation,BytecodeHandler,0,637717,0x7ff6d8ee42b4,176,DefineNamedOwnProperty
tick,0x7ff6d83bcdb0,637740,0,0x0,6
code-creation,BytecodeHandler,0,637766,0x7ff6d8ee4374,168,SetKeyedProperty
code-creation,BytecodeHandler,0,637789,0x7ff6d8ee4434,168,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,637806,0x7ff6d8ee44f4,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,637822,0x7ff6d8ee45b4,200,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,637838,0x7ff6d8ee46b4,164,CollectTypeProfile
code-creation,BytecodeHandler,0,637854,0x7ff6d8ee4774,1028,Add
code-creation,BytecodeHandler,0,637868,0x7ff6d8ee4bb4,1056,Sub
code-creation,BytecodeHandler,0,637882,0x7ff6d8ee4ff4,1036,Mul
code-creation,BytecodeHandler,0,637896,0x7ff6d8ee5434,988,Div
code-creation,BytecodeHandler,0,637911,0x7ff6d8ee5834,936,Mod
code-creation,BytecodeHandler,0,637926,0x7ff6d8ee5bf4,988,Exp
code-creation,BytecodeHandler,0,637941,0x7ff6d8ee5ff4,992,BitwiseOr
code-creation,BytecodeHandler,0,637955,0x7ff6d8ee63f4,992,BitwiseXor
code-creation,BytecodeHandler,0,637970,0x7ff6d8ee67f4,992,BitwiseAnd
code-creation,BytecodeHandler,0,637985,0x7ff6d8ee6bf4,1008,ShiftLeft
code-creation,BytecodeHandler,0,638000,0x7ff6d8ee6ff4,1008,ShiftRight
code-creation,BytecodeHandler,0,638015,0x7ff6d8ee73f4,1128,ShiftRightLogical
code-creation,BytecodeHandler,0,638042,0x7ff6d8ee7874,956,AddSmi
code-creation,BytecodeHandler,0,638069,0x7ff6d8ee7c34,964,SubSmi
code-creation,BytecodeHandler,0,638119,0x7ff6d8ee8034,892,MulSmi
code-creation,BytecodeHandler,0,638148,0x7ff6d8ee83b4,940,DivSmi
code-creation,BytecodeHandler,0,638187,0x7ff6d8ee8774,812,ModSmi
code-creation,BytecodeHandler,0,638209,0x7ff6d8ee8ab4,872,ExpSmi
code-creation,BytecodeHandler,0,638226,0x7ff6d8ee8e34,500,BitwiseOrSmi
code-creation,BytecodeHandler,0,638241,0x7ff6d8ee9034,500,BitwiseXorSmi
code-creation,BytecodeHandler,0,638256,0x7ff6d8ee9234,500,BitwiseAndSmi
code-creation,BytecodeHandler,0,638271,0x7ff6d8ee9434,524,ShiftLeftSmi
code-creation,BytecodeHandler,0,638297,0x7ff6d8ee9674,512,ShiftRightSmi
code-creation,BytecodeHandler,0,638318,0x7ff6d8ee98b4,820,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,638341,0x7ff6d8ee9bf4,656,Inc
code-creation,BytecodeHandler,0,638369,0x7ff6d8ee9eb4,656,Dec
code-creation,BytecodeHandler,0,638855,0x7ff6d8eea174,652,Negate
code-creation,BytecodeHandler,0,638912,0x7ff6d8eea434,500,BitwiseNot
code-creation,BytecodeHandler,0,638941,0x7ff6d8eea634,120,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,638968,0x7ff6d8eea6b4,44,LogicalNot
code-creation,BytecodeHandler,0,638984,0x7ff6d8eea6f4,208,TypeOf
code-creation,BytecodeHandler,0,639021,0x7ff6d8eea7f4,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,639048,0x7ff6d8eea874,116,DeletePropertySloppy
code-creation,BytecodeHandler,0,639067,0x7ff6d8eea8f4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,639087,0x7ff6d8eea934,1108,CallAnyReceiver
code-creation,BytecodeHandler,0,639181,0x7ff6d8eeadb4,1108,CallProperty
code-creation,BytecodeHandler,0,639205,0x7ff6d8eeb234,1004,CallProperty0
code-creation,BytecodeHandler,0,639221,0x7ff6d8eeb634,1016,CallProperty1
code-creation,BytecodeHandler,0,639235,0x7ff6d8eeba34,1028,CallProperty2
code-creation,BytecodeHandler,0,639250,0x7ff6d8eebe74,992,CallUndefinedReceiver
code-creation,BytecodeHandler,0,639275,0x7ff6d8eec274,1040,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,639309,0x7ff6d8eec6b4,1016,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,639379,0x7ff6d8eecab4,1032,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,639401,0x7ff6d8eecef4,1108,CallWithSpread
code-creation,BytecodeHandler,0,639422,0x7ff6d8eed374,128,CallRuntime
code-creation,BytecodeHandler,0,639438,0x7ff6d8eed434,164,CallRuntimeForPair
code-creation,BytecodeHandler,0,639495,0x7ff6d8eed4f4,84,CallJSRuntime
code-creation,BytecodeHandler,0,639512,0x7ff6d8eed574,1316,InvokeIntrinsic
code-creation,BytecodeHandler,0,639526,0x7ff6d8eedab4,1016,Construct
code-creation,BytecodeHandler,0,639541,0x7ff6d8eedeb4,516,ConstructWithSpread
code-creation,BytecodeHandler,0,639555,0x7ff6d8eee0f4,1920,TestEqual
code-creation,BytecodeHandler,0,639570,0x7ff6d8eee8b4,1048,TestEqualStrict
code-creation,BytecodeHandler,0,639584,0x7ff6d8eeecf4,1624,TestLessThan
code-creation,BytecodeHandler,0,639596,0x7ff6d8eef374,1624,TestGreaterThan
code-creation,BytecodeHandler,0,639611,0x7ff6d8eef9f4,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,639625,0x7ff6d8ef0074,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,639641,0x7ff6d8ef06f4,868,TestInstanceOf
code-creation,BytecodeHandler,0,639656,0x7ff6d8ef0a74,156,TestIn
code-creation,BytecodeHandler,0,639672,0x7ff6d8ef0b34,116,ToName
code-creation,BytecodeHandler,0,639725,0x7ff6d8ef0bb4,220,ToNumber
code-creation,BytecodeHandler,0,639750,0x7ff6d8ef0cb4,240,ToNumeric
code-creation,BytecodeHandler,0,639765,0x7ff6d8ef0db4,116,ToObject
code-creation,BytecodeHandler,0,639779,0x7ff6d8ef0e34,120,ToString
code-creation,BytecodeHandler,0,639794,0x7ff6d8ef0eb4,404,CreateRegExpLiteral
code-creation,BytecodeHandler,0,639810,0x7ff6d8ef1074,1480,CreateArrayLiteral
code-creation,BytecodeHandler,0,639825,0x7ff6d8ef1674,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,639841,0x7ff6d8ef16f4,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,639856,0x7ff6d8ef1a34,2236,CreateObjectLiteral
code-creation,BytecodeHandler,0,639872,0x7ff6d8ef22f4,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,639888,0x7ff6d8ef23f4,172,CloneObject
code-creation,BytecodeHandler,0,639904,0x7ff6d8ef24b4,208,GetTemplateObject
code-creation,BytecodeHandler,0,639920,0x7ff6d8ef25b4,328,CreateClosure
code-creation,BytecodeHandler,0,639936,0x7ff6d8ef2734,116,CreateBlockContext
code-creation,BytecodeHandler,0,639955,0x7ff6d8ef27b4,132,CreateCatchContext
code-creation,BytecodeHandler,0,639971,0x7ff6d8ef2874,260,CreateFunctionContext
code-creation,BytecodeHandler,0,639987,0x7ff6d8ef29b4,260,CreateEvalContext
code-creation,BytecodeHandler,0,640004,0x7ff6d8ef2af4,132,CreateWithContext
code-creation,BytecodeHandler,0,640021,0x7ff6d8ef2bb4,1600,CreateMappedArguments
code-creation,BytecodeHandler,0,640037,0x7ff6d8ef3234,588,CreateUnmappedArguments
code-creation,BytecodeHandler,0,640054,0x7ff6d8ef34b4,644,CreateRestParameter
code-creation,BytecodeHandler,0,640069,0x7ff6d8ef3774,480,JumpLoop
code-creation,BytecodeHandler,0,640120,0x7ff6d8ef3974,44,Jump
code-creation,BytecodeHandler,0,640153,0x7ff6d8ef39b4,56,JumpConstant
code-creation,BytecodeHandler,0,640181,0x7ff6d8ef39f4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,640199,0x7ff6d8ef3a74,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,640217,0x7ff6d8ef3af4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,640236,0x7ff6d8ef3b74,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,640253,0x7ff6d8ef3bf4,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,640271,0x7ff6d8ef3c74,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,640390,0x7ff6d8ef3cf4,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,640429,0x7ff6d8ef3d74,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,640451,0x7ff6d8ef3df4,160,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,640493,0x7ff6d8ef3eb4,156,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,640515,0x7ff6d8ef3f74,144,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,640533,0x7ff6d8ef4034,144,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,640557,0x7ff6d8ef40f4,68,JumpIfTrue
code-creation,BytecodeHandler,0,640578,0x7ff6d8ef4174,68,JumpIfFalse
code-creation,BytecodeHandler,0,640596,0x7ff6d8ef41f4,68,JumpIfNull
code-creation,BytecodeHandler,0,640612,0x7ff6d8ef4274,68,JumpIfNotNull
code-creation,BytecodeHandler,0,640628,0x7ff6d8ef42f4,68,JumpIfUndefined
code-creation,BytecodeHandler,0,640645,0x7ff6d8ef4374,68,JumpIfNotUndefined
code-creation,BytecodeHandler,0,640662,0x7ff6d8ef43f4,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,640679,0x7ff6d8ef4474,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,640695,0x7ff6d8ef44f4,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,640712,0x7ff6d8ef4574,468,ForInEnumerate
code-creation,BytecodeHandler,0,640726,0x7ff6d8ef4774,260,ForInPrepare
code-creation,BytecodeHandler,0,640740,0x7ff6d8ef48b4,64,ForInContinue
code-creation,BytecodeHandler,0,640756,0x7ff6d8ef4934,264,ForInNext
code-creation,BytecodeHandler,0,640771,0x7ff6d8ef4a74,48,ForInStep
code-creation,BytecodeHandler,0,640787,0x7ff6d8ef4ab4,36,SetPendingMessage
code-creation,BytecodeHandler,0,640819,0x7ff6d8ef4af4,116,Throw
code-creation,BytecodeHandler,0,640839,0x7ff6d8ef4b74,116,ReThrow
code-creation,BytecodeHandler,0,640870,0x7ff6d8ef4bf4,112,Return
code-creation,BytecodeHandler,0,640890,0x7ff6d8ef4c74,192,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,640907,0x7ff6d8ef4d74,136,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,640925,0x7ff6d8ef4e34,136,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,640943,0x7ff6d8ef4ef4,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,640960,0x7ff6d8ef4fb4,124,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,640978,0x7ff6d8ef5034,524,SuspendGenerator
code-creation,BytecodeHandler,0,640995,0x7ff6d8ef5274,140,ResumeGenerator
code-creation,BytecodeHandler,0,641011,0x7ff6d8ef5334,164,GetIterator
code-creation,BytecodeHandler,0,641028,0x7ff6d8ef53f4,116,Debugger
code-creation,BytecodeHandler,0,641045,0x7ff6d8ef5474,124,IncBlockCounter
code-creation,BytecodeHandler,0,641061,0x7ff6d8ef54f4,56,Abort
code-creation,BytecodeHandler,0,641078,0x7ff6d8ef5534,32,Star0
code-creation,BytecodeHandler,0,641093,0x7ff6d8ef5574,60,Illegal
code-creation,BytecodeHandler,0,641110,0x7ff6d8ef55b4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,641136,0x7ff6d8ef5634,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,641156,0x7ff6d8ef56b4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,641174,0x7ff6d8ef5734,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,641191,0x7ff6d8ef57b4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,641209,0x7ff6d8ef5834,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,641239,0x7ff6d8ef58b4,32,Ldar.Wide
code-creation,BytecodeHandler,0,641258,0x7ff6d8ef58f4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,641276,0x7ff6d8ef5934,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,641293,0x7ff6d8ef5974,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,641311,0x7ff6d8ef59f4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,641329,0x7ff6d8ef5a74,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,641347,0x7ff6d8ef5ab4,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,641366,0x7ff6d8ef5af4,32,Star.Wide
code-creation,BytecodeHandler,0,641382,0x7ff6d8ef5b34,48,Mov.Wide
code-creation,BytecodeHandler,0,641398,0x7ff6d8ef5b74,40,PushContext.Wide
code-creation,BytecodeHandler,0,641414,0x7ff6d8ef5bb4,36,PopContext.Wide
code-creation,BytecodeHandler,0,641431,0x7ff6d8ef5bf4,56,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,641446,0x7ff6d8ef5c34,4536,LdaGlobal.Wide
code-creation,BytecodeHandler,0,641461,0x7ff6d8ef6df4,4464,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,641479,0x7ff6d8ef7f74,164,StaGlobal.Wide
code-creation,BytecodeHandler,0,641524,0x7ff6d8ef8034,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,641545,0x7ff6d8ef80f4,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,641563,0x7ff6d8ef8174,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,641585,0x7ff6d8ef8234,248,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,641624,0x7ff6d8ef8334,4732,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,641646,0x7ff6d8ef95b4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,641665,0x7ff6d8ef9674,248,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,641684,0x7ff6d8ef9774,4636,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,641702,0x7ff6d8efa9b4,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,641720,0x7ff6d8efaab4,5304,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,641736,0x7ff6d8efbf74,192,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,641755,0x7ff6d8efc074,156,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,641771,0x7ff6d8efc134,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,641789,0x7ff6d8efc1f4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,641806,0x7ff6d8efc334,180,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,641823,0x7ff6d8efc3f4,180,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,641850,0x7ff6d8efc4b4,172,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,641870,0x7ff6d8efc574,172,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,641888,0x7ff6d8efc634,172,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,641905,0x7ff6d8efc6f4,204,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,641923,0x7ff6d8efc7f4,168,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,641941,0x7ff6d8efc8b4,988,Add.Wide
code-creation,BytecodeHandler,0,641957,0x7ff6d8efccb4,1024,Sub.Wide
code-creation,BytecodeHandler,0,641975,0x7ff6d8efd0f4,992,Mul.Wide
code-creation,BytecodeHandler,0,642000,0x7ff6d8efd4f4,992,Div.Wide
code-creation,BytecodeHandler,0,642019,0x7ff6d8efd8f4,944,Mod.Wide
code-creation,BytecodeHandler,0,642036,0x7ff6d8efdcb4,1004,Exp.Wide
code-creation,BytecodeHandler,0,642052,0x7ff6d8efe0b4,1016,BitwiseOr.Wide
code-creation,BytecodeHandler,0,642069,0x7ff6d8efe4b4,1016,BitwiseXor.Wide
code-creation,BytecodeHandler,0,642086,0x7ff6d8efe8b4,1016,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,642101,0x7ff6d8efecb4,1032,ShiftLeft.Wide
code-creation,BytecodeHandler,0,642119,0x7ff6d8eff0f4,1032,ShiftRight.Wide
code-creation,BytecodeHandler,0,642136,0x7ff6d8eff534,1152,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,642153,0x7ff6d8eff9f4,920,AddSmi.Wide
code-creation,BytecodeHandler,0,642178,0x7ff6d8effdb4,932,SubSmi.Wide
code-creation,BytecodeHandler,0,642198,0x7ff6d8f00174,892,MulSmi.Wide
code-creation,BytecodeHandler,0,642214,0x7ff6d8f004f4,940,DivSmi.Wide
code-creation,BytecodeHandler,0,642230,0x7ff6d8f008b4,812,ModSmi.Wide
tick,0x7fffad96d1c4,642266,0,0x0,6
tick,0x7ff6d93904a4,642292,0,0x0,6
tick,0x7ff6d8d2db1a,642307,0,0x0,6
code-creation,BytecodeHandler,0,642321,0x7ff6d8f00bf4,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,642342,0x7ff6d8f00f74,508,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,642373,0x7ff6d8f01174,508,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,642392,0x7ff6d8f01374,508,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,642407,0x7ff6d8f01574,532,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,642424,0x7ff6d8f017b4,520,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,642440,0x7ff6d8f019f4,828,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,642456,0x7ff6d8f01d34,624,Inc.Wide
code-creation,BytecodeHandler,0,642470,0x7ff6d8f01fb4,624,Dec.Wide
code-creation,BytecodeHandler,0,642485,0x7ff6d8f02234,660,Negate.Wide
code-creation,BytecodeHandler,0,642500,0x7ff6d8f024f4,512,BitwiseNot.Wide
code-creation,BytecodeHandler,0,642515,0x7ff6d8f02734,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,642531,0x7ff6d8f027f4,120,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,642569,0x7ff6d8f02874,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,642590,0x7ff6d8f028b4,1112,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,642606,0x7ff6d8f02d34,1112,CallProperty.Wide
code-creation,BytecodeHandler,0,642628,0x7ff6d8f031b4,1004,CallProperty0.Wide
code-creation,BytecodeHandler,0,642648,0x7ff6d8f035b4,1016,CallProperty1.Wide
code-creation,BytecodeHandler,0,642665,0x7ff6d8f039b4,1028,CallProperty2.Wide
code-creation,BytecodeHandler,0,642681,0x7ff6d8f03df4,992,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,642698,0x7ff6d8f041f4,1044,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,642715,0x7ff6d8f04634,1020,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,642752,0x7ff6d8f04a34,1036,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,642772,0x7ff6d8f04e74,1112,CallWithSpread.Wide
code-creation,BytecodeHandler,0,642789,0x7ff6d8f052f4,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,642804,0x7ff6d8f053b4,176,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,642820,0x7ff6d8f05474,88,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,642835,0x7ff6d8f054f4,1320,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,642850,0x7ff6d8f05a34,968,Construct.Wide
code-creation,BytecodeHandler,0,642867,0x7ff6d8f05e34,464,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,642884,0x7ff6d8f06034,1944,TestEqual.Wide
code-creation,BytecodeHandler,0,642923,0x7ff6d8f067f4,1056,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,642943,0x7ff6d8f06c34,1612,TestLessThan.Wide
code-creation,BytecodeHandler,0,642960,0x7ff6d8f072b4,1612,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,642975,0x7ff6d8f07934,1612,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,642992,0x7ff6d8f07fb4,1612,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,643008,0x7ff6d8f08634,876,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,643025,0x7ff6d8f089b4,156,TestIn.Wide
code-creation,BytecodeHandler,0,643040,0x7ff6d8f08a74,120,ToName.Wide
code-creation,BytecodeHandler,0,643056,0x7ff6d8f08af4,224,ToNumber.Wide
code-creation,BytecodeHandler,0,643071,0x7ff6d8f08bf4,244,ToNumeric.Wide
code-creation,BytecodeHandler,0,643087,0x7ff6d8f08cf4,120,ToObject.Wide
code-creation,BytecodeHandler,0,643130,0x7ff6d8f08d74,408,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,643151,0x7ff6d8f08f34,1404,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,643168,0x7ff6d8f094b4,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,643184,0x7ff6d8f097f4,2164,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,643201,0x7ff6d8f0a074,176,CloneObject.Wide
code-creation,BytecodeHandler,0,643217,0x7ff6d8f0a134,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,643233,0x7ff6d8f0a1f4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,643250,0x7ff6d8f0a374,120,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,643285,0x7ff6d8f0a3f4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,643307,0x7ff6d8f0a4b4,260,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,643324,0x7ff6d8f0a5f4,260,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,643341,0x7ff6d8f0a734,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,643357,0x7ff6d8f0a7f4,492,JumpLoop.Wide
code-creation,BytecodeHandler,0,643372,0x7ff6d8f0a9f4,44,Jump.Wide
code-creation,BytecodeHandler,0,643388,0x7ff6d8f0aa34,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,643405,0x7ff6d8f0aa74,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,643422,0x7ff6d8f0aaf4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,643438,0x7ff6d8f0ab74,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,643455,0x7ff6d8f0abf4,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,643471,0x7ff6d8f0ac74,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,643486,0x7ff6d8f0acf4,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,643502,0x7ff6d8f0ad74,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,643517,0x7ff6d8f0adf4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,643534,0x7ff6d8f0ae74,160,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,643570,0x7ff6d8f0af34,156,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,643596,0x7ff6d8f0aff4,144,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,643617,0x7ff6d8f0b0b4,144,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,643641,0x7ff6d8f0b174,68,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,643661,0x7ff6d8f0b1f4,68,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,643678,0x7ff6d8f0b274,68,JumpIfNull.Wide
code-creation,BytecodeHandler,0,643701,0x7ff6d8f0b2f4,68,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,643725,0x7ff6d8f0b374,68,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,643741,0x7ff6d8f0b3f4,68,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,643791,0x7ff6d8f0b474,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,643824,0x7ff6d8f0b4f4,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,643843,0x7ff6d8f0b574,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,643861,0x7ff6d8f0b5f4,472,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,643882,0x7ff6d8f0b7f4,260,ForInPrepare.Wide
code-creation,BytecodeHandler,0,643909,0x7ff6d8f0b934,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,643943,0x7ff6d8f0b9b4,268,ForInNext.Wide
code-creation,BytecodeHandler,0,643964,0x7ff6d8f0baf4,48,ForInStep.Wide
code-creation,BytecodeHandler,0,643980,0x7ff6d8f0bb34,160,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,643998,0x7ff6d8f0bbf4,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,644015,0x7ff6d8f0bcb4,124,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,644032,0x7ff6d8f0bd34,532,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,644051,0x7ff6d8f0bf74,140,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,644080,0x7ff6d8f0c034,168,GetIterator.Wide
code-creation,BytecodeHandler,0,644105,0x7ff6d8f0c0f4,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,644182,0x7ff6d8f0c1b4,56,Abort.Wide
code-creation,BytecodeHandler,0,644249,0x7ff6d8f0c1f4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,644290,0x7ff6d8f0c274,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,644327,0x7ff6d8f0c2f4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,644352,0x7ff6d8f0c374,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,644428,0x7ff6d8f0c3f4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,644737,0x7ff6d8f0c474,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,644799,0x7ff6d8f0c4f4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,644823,0x7ff6d8f0c534,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,644843,0x7ff6d8f0c574,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,644870,0x7ff6d8f0c5b4,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,644897,0x7ff6d8f0c634,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,644927,0x7ff6d8f0c6b4,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,644956,0x7ff6d8f0c6f4,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,644985,0x7ff6d8f0c734,32,Star.ExtraWide
code-creation,BytecodeHandler,0,645009,0x7ff6d8f0c774,44,Mov.ExtraWide
code-creation,BytecodeHandler,0,645144,0x7ff6d8f0c7b4,40,PushContext.ExtraWide
code-creation,BytecodeHandler,0,645171,0x7ff6d8f0c7f4,36,PopContext.ExtraWide
code-creation,BytecodeHandler,0,645201,0x7ff6d8f0c834,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,645228,0x7ff6d8f0c874,4524,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,645284,0x7ff6d8f0da34,4452,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,645319,0x7ff6d8f0ebb4,164,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,645346,0x7ff6d8f0ec74,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,645375,0x7ff6d8f0ed34,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,645399,0x7ff6d8f0edb4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,645428,0x7ff6d8f0ee74,244,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,645456,0x7ff6d8f0ef74,4716,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,645485,0x7ff6d8f101f4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,645549,0x7ff6d8f102b4,244,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,645586,0x7ff6d8f103b4,4624,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,645618,0x7ff6d8f115f4,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,645649,0x7ff6d8f116f4,5284,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,645680,0x7ff6d8f12bb4,188,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,645707,0x7ff6d8f12c74,156,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,645735,0x7ff6d8f12d34,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,645764,0x7ff6d8f12df4,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,645792,0x7ff6d8f12f34,176,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,645817,0x7ff6d8f12ff4,176,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,645835,0x7ff6d8f130b4,168,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,645855,0x7ff6d8f13174,168,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,645874,0x7ff6d8f13234,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,645900,0x7ff6d8f132f4,200,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,645930,0x7ff6d8f133f4,168,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,645960,0x7ff6d8f134b4,984,Add.ExtraWide
code-creation,BytecodeHandler,0,645986,0x7ff6d8f138b4,1024,Sub.ExtraWide
code-creation,BytecodeHandler,0,646012,0x7ff6d8f13cf4,988,Mul.ExtraWide
code-creation,BytecodeHandler,0,646057,0x7ff6d8f140f4,992,Div.ExtraWide
code-creation,BytecodeHandler,0,646086,0x7ff6d8f144f4,944,Mod.ExtraWide
code-creation,BytecodeHandler,0,646115,0x7ff6d8f148b4,1000,Exp.ExtraWide
code-creation,BytecodeHandler,0,646143,0x7ff6d8f14cb4,1012,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,646168,0x7ff6d8f150b4,1016,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,646222,0x7ff6d8f154b4,1016,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,646255,0x7ff6d8f158b4,1028,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,646284,0x7ff6d8f15cf4,1028,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,646312,0x7ff6d8f16134,1152,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,646342,0x7ff6d8f165f4,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,646369,0x7ff6d8f169b4,928,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,646396,0x7ff6d8f16d74,892,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,646449,0x7ff6d8f170f4,936,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,646473,0x7ff6d8f174b4,812,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,646493,0x7ff6d8f177f4,868,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,646510,0x7ff6d8f17b74,508,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,646530,0x7ff6d8f17d74,508,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,646550,0x7ff6d8f17f74,508,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,646603,0x7ff6d8f18174,528,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,646626,0x7ff6d8f183b4,516,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,646647,0x7ff6d8f185f4,828,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,646669,0x7ff6d8f18934,624,Inc.ExtraWide
code-creation,BytecodeHandler,0,646695,0x7ff6d8f18bb4,620,Dec.ExtraWide
code-creation,BytecodeHandler,0,646721,0x7ff6d8f18e34,656,Negate.ExtraWide
code-creation,BytecodeHandler,0,646749,0x7ff6d8f190f4,508,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,646774,0x7ff6d8f192f4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,646800,0x7ff6d8f19374,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,646866,0x7ff6d8f193f4,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,646900,0x7ff6d8f19434,1104,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,646929,0x7ff6d8f198b4,1104,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,646951,0x7ff6d8f19d34,1000,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,646976,0x7ff6d8f1a134,1012,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,647014,0x7ff6d8f1a534,1024,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,647049,0x7ff6d8f1a974,988,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,647080,0x7ff6d8f1ad74,1040,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,647111,0x7ff6d8f1b1b4,1016,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,647142,0x7ff6d8f1b5b4,1032,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,647170,0x7ff6d8f1b9f4,1104,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,647198,0x7ff6d8f1be74,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,647226,0x7ff6d8f1bf34,176,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,647255,0x7ff6d8f1bff4,84,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,647322,0x7ff6d8f1c074,1320,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,647420,0x7ff6d8f1c5b4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,647471,0x7ff6d8f1c9b4,460,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,647500,0x7ff6d8f1cbb4,1944,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,647524,0x7ff6d8f1d374,1052,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,647551,0x7ff6d8f1d7b4,1608,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,647579,0x7ff6d8f1de34,1608,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,647605,0x7ff6d8f1e4b4,1608,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,647632,0x7ff6d8f1eb34,1608,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,647683,0x7ff6d8f1f1b4,876,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,647717,0x7ff6d8f1f534,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,647743,0x7ff6d8f1f5f4,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,647784,0x7ff6d8f1f674,220,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,647815,0x7ff6d8f1f774,240,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,647843,0x7ff6d8f1f874,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,647871,0x7ff6d8f1f8f4,404,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,647897,0x7ff6d8f1fab4,1404,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,647926,0x7ff6d8f20034,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,647954,0x7ff6d8f20374,2160,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,647984,0x7ff6d8f20bf4,172,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,648012,0x7ff6d8f20cb4,164,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,648054,0x7ff6d8f20d74,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,648083,0x7ff6d8f20ef4,120,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,648116,0x7ff6d8f20f74,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,648146,0x7ff6d8f21034,260,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,648176,0x7ff6d8f21174,260,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,648204,0x7ff6d8f212b4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,648231,0x7ff6d8f21374,488,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,648259,0x7ff6d8f21574,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,648285,0x7ff6d8f215b4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,648310,0x7ff6d8f215f4,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,648329,0x7ff6d8f21674,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,648349,0x7ff6d8f216f4,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,648370,0x7ff6d8f21774,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,648425,0x7ff6d8f217f4,88,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,648495,0x7ff6d8f21874,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,648517,0x7ff6d8f218f4,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,648535,0x7ff6d8f21974,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,648552,0x7ff6d8f219f4,160,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,648576,0x7ff6d8f21ab4,156,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,648597,0x7ff6d8f21b74,144,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,648614,0x7ff6d8f21c34,144,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,648631,0x7ff6d8f21cf4,68,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,648646,0x7ff6d8f21d74,68,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,648663,0x7ff6d8f21df4,68,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,648679,0x7ff6d8f21e74,68,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,648695,0x7ff6d8f21ef4,68,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,648711,0x7ff6d8f21f74,68,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,648727,0x7ff6d8f21ff4,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,648745,0x7ff6d8f22074,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,648762,0x7ff6d8f220f4,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,648793,0x7ff6d8f22174,472,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,648815,0x7ff6d8f22374,256,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,648832,0x7ff6d8f224b4,64,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,648852,0x7ff6d8f22534,264,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,648868,0x7ff6d8f22674,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,648884,0x7ff6d8f226b4,160,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,648901,0x7ff6d8f22774,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,648919,0x7ff6d8f22834,124,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,648936,0x7ff6d8f228b4,528,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,648978,0x7ff6d8f22af4,136,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,649014,0x7ff6d8f22bb4,164,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,649042,0x7ff6d8f22c74,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,649066,0x7ff6d8f22cf4,56,Abort.ExtraWide
tick,0x7ff6d93ad9e8,649628,0,0x0,6
tick,0x7fffad96d1c4,649661,0,0x0,6
tick,0x7ff6d8c28343,649706,0,0x0,6
new,MemoryChunk,0x9126600000,262144
new,MemoryChunk,0x3fecd200000,262144
tick,0x7ff6d912a954,651170,0,0x0,5
tick,0x7ff6d890092f,653134,0,0x0,5
new,MemoryChunk,0x30daf80000,262144
new,MemoryChunk,0x3404b140000,262144
new,MemoryChunk,0x1b7d8d80000,262144
tick,0x7ff6d890074d,658850,0,0x0,5
tick,0x7fffad96d1a4,660824,0,0x0,6
tick,0x7fffad96d1a4,663188,0,0x0,6
tick,0x7fffad96d1a4,668805,0,0x0,6
tick,0x7fffad96d1a4,670458,0,0x0,6
code-creation,Eval,10,672284,0x1b7d8db5238,5, node:internal/main/run_main_module:1:1,0x1b7d8db50f0,~
script-source,388,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x1b7d8db5238,388,0,649,C0O0C4O649,,
code-creation,Function,10,672557,0x1b7d8db52e0,58, node:internal/main/run_main_module:1:1,0x1b7d8db51b0,~
code-source-info,0x1b7d8db52e0,388,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,673312,0x1b7d8db5528,76,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0x29c5434d080,~
script-source,15,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'test'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Determine if a core module can be loaded without the node: prefix. This\x0d\n  // function does not validate if the module actually exists.\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return !schemelessBlockList.has(id);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x1b7d8db5528,15,11126,11479,C0O11136C2O11147C4O11143C9O11164C13O11185C14O11208C19O11221C24O11225C29O11225C35O11369C37O11379C47O11427C60O11385C65O11379C66O11449C71O11449C75O11476,,
tick,0x7ff6d9398e17,675206,0,0x0,3,0x7ff6d893c890,0x1b7d8db52e3
code-creation,LazyCompile,10,675350,0x1b7d8db62b8,175,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0x29c5434cfe0,~
code-source-info,0x1b7d8db62b8,15,10306,10889,C0O10325C6O10340C12O10370C16O10378C17O10409C22O10418C23O10431C30O10477C37O10508C45O10477C63O10610C70O10610C75O10646C89O10681C103O10638C108O10721C109O10733C124O10765C126O10778C141O10801C152O10820C160O10852C165O10801C170O10876C174O10884,,
code-creation,Eval,10,676199,0x1b7d8db7308,5, node:internal/bootstrap/pre_execution:1:1,0x1b7d8db6ee0,~
script-source,389,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C\x0d\n                                    initialzeModules = true) {\x0d\n  refreshRuntimeOptions();\x0d\n\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n\x0d\n  require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n\x0d\n  if (!initialzeModules) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: getOptionValue('--build-snapshot')\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      getOptionValue('--no-experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let undici;\x0d\n  function lazyUndici() {\x0d\n    if (undici) {\x0d\n      return undici;\x0d\n    }\x0d\n\x0d\n    undici = require('internal/deps/undici/undici');\x0d\n    return undici;\x0d\n  }\x0d\n\x0d\n  async function fetch(input\x2C init = undefined) {\x0d\n    emitExperimentalWarning('The Fetch API');\x0d\n    return lazyUndici().fetch(input\x2C init);\x0d\n  }\x0d\n\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C fetch);\x0d\n\x0d\n  function lazyInterface(name) {\x0d\n    return {\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      get() {\x0d\n        return lazyUndici()[name];\x0d\n      }\x2C\x0d\n      set(value) {\x0d\n        exposeInterface(globalThis\x2C name\x2C value);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    FormData: lazyInterface('FormData')\x2C\x0d\n    Headers: lazyInterface('Headers')\x2C\x0d\n    Request: lazyInterface('Request')\x2C\x0d\n    Response: lazyInterface('Response')\x2C\x0d\n  });\x0d\n\x0d\n  // The WebAssembly Web API: https://webassembly.github.io/spec/web-api\x0d\n  const { wasmStreamingCallback } = require('internal/wasm_web_api');\x0d\n  internalBinding('wasm_web_api').setImplementation(wasmStreamingCallback);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto') });\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    exposeInterface(globalThis\x2C 'Crypto'\x2C webcrypto.Crypto);\x0d\n    exposeInterface(globalThis\x2C 'CryptoKey'\x2C webcrypto.CryptoKey);\x0d\n    exposeInterface(globalThis\x2C 'SubtleCrypto'\x2C webcrypto.SubtleCrypto);\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  refreshRuntimeOptions\x2C\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupCustomEvent\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x1b7d8db7308,389,0,19389,C0O0C4O19389,,
code-creation,Function,10,678688,0x1b7d8db8038,519, node:internal/bootstrap/pre_execution:1:1,0x1b7d8db7280,~
code-source-info,0x1b7d8db8038,389,0,19389,C0O0C229O28C235O47C241O74C247O99C253O134C259O146C265O162C271O192C277O299C283O299C288O236C294O255C300O278C306O365C312O365C317O337C323O475C329O475C334O405C340O425C346O453C352O551C358O551C363O577C368O515C374O601C380O601C384O601C386O18893C393O18915C399O18941C405O18964C411O18987C417O19011C423O19026C429O19045C435O19066C441O19084C447O19103C453O19134C459O19161C465O19185C471O19216C477O19249C483O19272C489O19300C495O19324C501O19345C507O19369C513O18908C518O19388,,
code-creation,LazyCompile,10,679515,0x1b7d8db9af8,273,prepareMainThreadExecution node:internal/bootstrap/pre_execution:31:36,0x1b7d8db7338,~
code-source-info,0x1b7d8db9af
code-creation,LazyCompile,10,679763,0x1b7d8dbb060,10,refreshRuntimeOptions node:internal/bootstrap/pre_execution:101:31,0x1b7d8db7388,~
code-source-info,0x1b7d8dbb060,389,2918,2946,C0O2926C5O2926C9O2945,,
code-creation,LazyCompile,10,679853,0x1b7d8dbb150,22,refreshOptions node:internal/options:39:24,0x1b92a08a608,~
script-source,88,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x0d\n};\x0d\n
code-source-info,0x1b7d8dbb150,88,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,LazyCompile,10,680273,0x1b7d8dbb4b8,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x20182dbcf60,~
script-source,31,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x1b7d8dbb4b8,31,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
tick,0x7ff6d93904a4,685296,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x1b7d8db556f,0x1b7d8db52e3
tick,0x7fffad96d1c4,685321,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x1b7d8db556f,0x1b7d8db52e3
tick,0x7ff6d938d077,685343,0,0x0,3,0x7ff6d893c890,0x1b7d8db9b17,0x1b7d8db52ef
code-creation,LazyCompile,10,685492,0x1b7d8dbdda8,460,patchProcessObject node:internal/bootstrap/pre_execution:105:28,0x1b7d8db73d8,~
code-source-info,0x1b7d8dbdda
code-creation,LazyCompile,10,685765,0x1b7d8dbe138,69,internalBinding node:internal/bootstrap/loaders:171:45,0x29c5434cb50,~
code-source-info,0x1b7d8dbe138,15,5433,5678,C0O5459C7O5469C11O5484C15O5522C25O5549C30O5547C37O5584C48O5603C56O5639C61O5584C66O5662C68O5673,,
code-creation,LazyCompile,10,686078,0x1b7d8dbe3f0,69,refreshHrtimeBuffer node:internal/process/per_thread:67:29,0x31522b0a130,~
script-source,36,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x1b7d8dbe3f0,36,1502,1950,C0O1693C7O1720C10O1728C17O1704C25O1702C31O1883C38O1919C41O1927C53O1900C61O1898C68O1949,,
tick,0x7fffab0dcd69,687737,0,0x0,3,0x7ff6d893c890,0x1b7d8dbddd0,0x1b7d8db9b1d,0x1b7d8db52ef
code-creation,LazyCompile,10,687857,0x1b7d8dbf2b8,82,getOptionValue node:internal/options:44:24,0x1b92a08a658,~
code-source-info,0x1b7d8dbf2b8,88,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,LazyCompile,10,687972,0x1b7d8dbf418,33,getCLIOptionsFromBinding node:internal/options:18:34,0x1b92a08a440,~
code-source-info,0x1b7d8dbf418,88,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
tick,0x7ff6d8b53872,690081,0,0x0,3,0x7ff6d893c890,0x1b7d8dbde8a,0x1b7d8db9b1d,0x1b7d8db52ef
code-creation,LazyCompile,10,690259,0x1b7d8dbf718,832,resolve node:path:158:10,0x351f86ef748,~
script-source,71,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x1b7d8dbf
tick,0x7ff6d8197515,696436,0,0x0,3,0x7ff6d893c890,0x1b7d8dbde8a,0x1b7d8db9b1d,0x1b7d8db52ef
tick,0x7fffad8ffab3,696474,0,0x0,3,0x7ff6d893c890,0x1b7d8dbde8a,0x1b7d8db9b1d,0x1b7d8db52ef
tick,0x7fffad8ff235,696500,0,0x0,3,0x7ff6d893c890,0x1b7d8dbde8a,0x1b7d8db9b1d,0x1b7d8db52ef
code-creation,LazyCompile,10,696548,0x3404b17e2d0,30,validateString node:internal/validators:114:24,0x29c5437d180,~
script-source,22,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateUint32(value\x2C name);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!NumberIsInteger(value)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n  const min = positive ? 1 : 0;\x0d\n  // 2 ** 32 === 4294967296\x0d\n  const max = 4_294_967_295;\x0d\n  if (value < min || value > max) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n      ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\nfunction getOwnPropertyValueOrDefault(options\x2C key\x2C defaultValue) {\x0d\n  return options == null || !ObjectPrototypeHasOwnProperty(options\x2C key) ?\x0d\n    defaultValue :\x0d\n    options[key];\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const allowArray = getOwnPropertyValueOrDefault(options\x2C 'allowArray'\x2C false);\x0d\n    const allowFunction = getOwnPropertyValueOrDefault(options\x2C 'allowFunction'\x2C false);\x0d\n    const nullable = getOwnPropertyValueOrDefault(options\x2C 'nullable'\x2C false);\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x3404b17e2d0,22,3341,3453,C0O3360C6O3396C22O3402C27O3396C29O3452,,
code-creation,LazyCompile,10,697823,0x3404b17ecc0,17,isPathSeparator node:path:52:25,0x351f86ef3d0,~
code-source-info,0x3404b17ecc0,71,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,697938,0x3404b17edc8,35,isWindowsDeviceRoot node:path:60:29,0x351f86ef658,~
code-source-info,0x3404b17edc8,71,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,698326,0x3404b17eee8,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x2c7d080be90,~
script-source,130,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x3404b17eee8,130,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
tick,0x7ff6d89f4dfb,698957,0,0x0,3,0x7ff6d893c890,0x1b7d8dbf771,0x1b7d8dbde8a,0x1b7d8db9b1d,0x1b7d8db52ef
code-creation,LazyCompile,10,699216,0x3404b17f550,442,normalizeString node:path:66:25,0x351f86ef6a8,~
code-source-info,0x3404b17f550,71,2226,4212,C0O2292C3O2323C5O2345C8O2363C10O2380C12O2399C14O2412C18O2404C23O2445C27O2438C32O2460C37O2467C45O2517C51O2547C53O2571C58O2609C64O2641C66O2661C69O2655C76O2673C83O2713C85O2722C90O2748C97O2755C104O2780C111O2802C114O2837C118O2844C122O2802C130O2853C132O2849C139O2878C142O2913C146O2920C150O2878C158O2929C160O2925C165O2960C172O2967C177O3010C182O3010C188O3067C190O3086C195O3111C198O3136C202O3196C215O3202C221O3304C225O3311C231O3317C234O3317C239O3315C243O3389C246O3417C248O3440C250O3476C256O3483C261O3505C264O3528C266O3564C269O3592C271O3615C273O3658C277O3702C283O3709C293O3718C308O3751C313O3818C319O3825C324O3841C326O3851C330O3863C335O3900C345O3863C363O3936C370O3979C380O3942C386O3997C388O4019C391O4031C395O4052C398O4074C402O4096C404O4109C406O4105C413O4126C418O4143C425O4172C428O2422C433O2386C439O4198C441O4209,,
code-creation,LazyCompile,10,699822,0x3404b17fc10,37,initializeGlobalConsole node:internal/console/constructor:687:33,0x1b92a0bcb50,~
script-source,107,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\n\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = stream.isTTY && (\x0d\n          typeof stream.getColorDepth === 'function' ?\x0d\n            stream.getColorDepth() > 2 : true);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = ObjectCreate(null);\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  globalConsole[kBindProperties](true\x2C 'auto');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime // exported for tests\x0d\n};\x0d\n
code-source-info,0x3404b17fc10,107,21084,21198,C0O21105C2O21119C4O21118C11O21136C16O21150C18O21164C20O21163C29O21180C36O21197,,
tick,0x7ff6d820e6f3,702157,0,0x0,3,0x7ff6d893c890,0x1b7d8dbdeb4,0x1b7d8db9b1d,0x1b7d8db52ef
tick,0x7fffab100040,702191,0,0x0,3,0x7ff6d893c890,0x1b7d8dbdeb4,0x1b7d8db9b1d,0x1b7d8db52ef
code-creation,LazyCompile,10,702321,0x30dafbdfb0,94,value node:internal/console/constructor:200:20,0x1b92a0bc1e0,~
code-source-info,0x30dafbdfb0,107,5921,6580,C0O5921C15O5943C16O5943C18O5962C19O5962C21O5977C33O6028C38O6130C46O6241C60O6304C65O6406C73O6521C87O5977C93O6579,,
code-creation,LazyCompile,10,702651,0x30dafbe648,414,value node:internal/console/constructor:230:20,0x1b92a0bc268,~
code-source-info,0x30dafbe648,107,6684,8114,C17O6741C27O6804C34O6848C52O6919C55O6889C73O6991C86O7090C89O7060C104O7140C111O7184C126O7225C129O7225C144O7278C151O7300C166O7334C169O7330C187O7427C191O7437C198O7459C213O7493C216O7489C235O7516C239O7529C246O7551C261O7581C275O7604C279O7617C286O7639C300O7669C314O7687C318O7702C325O7724C340O7754C354O7770C358O7795C365O7839C380O7880C394O7919C398O7939C407O6741C413O8113,,
code-creation,LazyCompile,10,702915,0x30dafbeaa8,18,createWriteErrorHandler node:internal/console/constructor:354:33,0x1b92a0bc510,~
code-source-info,0x30dafbeaa8,107,10994,11869,C0O10994C13O11024C17O11866,,
code-creation,LazyCompile,10,703101,0x30dafbec88,27,SafeMap node:internal/per_context/primordials:366:16,0x29c54347578,~
script-source,12,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x0d\n    )\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x30dafbec88,12,10966,10983,C3O10972C7O10978C11O10972C26O10982,,
code-creation,LazyCompile,10,706082,0x30dafbfd98,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:157:33,0x1b7d8db7428,~
code-source-info,0x30dafbfd98,389,5146,5405,C16O5199C21O5199C26O5226C28O5244C36O5274C43O5364C49O5383C56O5244C62O5404,,
code-creation,LazyCompile,10,706704,0x30dafbff00,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:335:33,0x1b7d8db7848,~
code-source-info,0x30dafbff00,389,10396,10627,C0O10439C6O10439C11O10412C16O10512C22O10512C27O10483C32O10555C35O10580C40O10555C45O10626,,
code-creation,LazyCompile,10,706876,0x3404b17fd38,77,toggleTraceCategoryState node:internal/process/per_thread:397:34,0x31522b0a610,~
code-source-info,0x3404b17fd38,36,11761,12068,C0O11786C4O11816C10O11852C16O11884C21O11928C26O11929C33O11873C39O11955C44O11976C49O11976C55O11996C61O12029C66O12050C71O12050C76O12067,,
code-creation,LazyCompile,10,707015,0x3404b17fee8,42,setupPerfHooks node:internal/bootstrap/pre_execution:341:24,0x1b7d8db7898,~
code-source-info,0x3404b17fee8,389,10654,10777,C0O10662C6O10662C11O10698C16O10699C20O10723C26O10723C31O10753C36O10754C41O10776,,
new,MemoryChunk,0x167f8a40000,262144
code-creation,LazyCompile,10,707304,0x1b7d8dbfcb8,42,refreshTimeOrigin node:internal/perf/performance:217:27,0x221f73c9e58,~
script-source,115,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst { markResourceTiming } = require('internal/perf/resource_timing');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearResourceTimings(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('resource'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  clearResourceTimings: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearResourceTimings\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  // In the browser\x2C this function is not public.  However\x2C it must be used inside fetch\x0d\n  // which is a Node.js dependency\x2C not a internal module\x0d\n  markResourceTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: markResourceTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x1b7d8dbfcb8,115,4969,5154,C0O4977C7O4998C10O5010C25O5119C28O5119C35O4977C41O5153,,
code-creation,LazyCompile,10,708220,0x167f8a41918,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x31522b323d8,~
script-source,50,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x167f8a41918,50,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,708480,0x167f8a41b88,62,setupInspectorHooks node:internal/bootstrap/pre_execution:346:29,0x1b7d8db78e8,~
code-source-info,0x167f8a41b88,389,10809,11375,C0O11158C6O11162C11O11187C17O11256C23O11256C28O11224C33O11239C38O11303C44O11303C49O11331C54O11332C61O11374,,
code-creation,Eval,10,708769,0x167f8a41f28,5, node:internal/inspector_async_hook:1:1,0x167f8a41d70,~
script-source,390,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x167f8a41f28,390,0,2048,C0O0C4O2048,,
code-creation,Function,10,709076,0x167f8a42148,79, node:internal/inspector_async_hook:1:1,0x167f8a41ea0,~
code-source-info,0x167f8a42148,390,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
tick,0x7fffad96d1c4,709234,0,0x0,3,0x7ff6d893c890,0x30dafbe6f1,0x3404b17fc2d,0x1b7d8dbdeb4,0x1b7d8db9b1d,0x1b7d8db52ef
code-creation,LazyCompile,10,709448,0x167f8a42640,69,setupWarningHandler node:internal/bootstrap/pre_execution:170:29,0x1b7d8db7478,~
code-source-info,0x167f8a42640,389,5437,5642,C0O5475C6O5475C11O5458C16O5515C24O5519C33O5564C38O5568C45O5585C50O5601C53O5609C61O5609C68O5641,,
new,MemoryChunk,0xb9fe8c0000,262144
new,MemoryChunk,0x7ff658f80000,262144
code-creation,Function,11,709908,0x7ff658f83080,556,getOptionValue node:internal/options:44:24,0x1b92a08a658,^
code-source-info,0x7ff658f83080,88,1028,1278,,,
code-creation,Function,11,710030,0x7ff658f83340,204,isPathSeparator node:path:52:25,0x351f86ef3d0,^
code-source-info,0x7ff658f83340,71,1794,1876,,,
tick,0x7ff6d8c4ce80,710084,0,0x0,0,0x7ff6d89311b0,0x167f8a4217e,0x1b7d8db631f,0x1b7d8db556f,0x167f8a41b9f,0x1b7d8db9b30,0x1b7d8db52ef
code-creation,Function,11,710145,0x7ff658f834c0,3008,normalizeString node:path:66:25,0x351f86ef6a8,^
code-source-info,0x7ff658f834c0,71,2226,4212,,,
code-creation,Function,11,710203,0x7ff658f84100,628,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0x29c5434d080,^
code-source-info,0x7ff658f84100,15,11126,11479,,,
code-creation,LazyCompile,10,710459,0x167f8a42ad8,20,addListener node:events:604:58,0x20182da3cf0,~
script-source,29,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  identicalSequenceRange\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      // EventTarget does not have `error` event semantics like Node\x0d\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    emitter.addEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x167f8a42ad8,29,18313,18387,C0O18335C14O18342C19O18384,,
tick,0x7ff6d820e553,715911,0,0x0,3,0x7ff6d893c890,0x167f8a4267d,0x1b7d8db9b36,0x1b7d8db52ef
code-creation,LazyCompile,10,716227,0x167f8a45130,378,_addListener node:events:541:22,0x20182da3c50,~
code-source-info,0x167f8a
code-creation,LazyCompile,10,716609,0x167f8a45448,15,checkListener node:events:265:23,0x20182da3668,~
code-source-info,0x167f8a45448,29,7994,8052,C0O8010C8O8010C14O8051,,
code-creation,LazyCompile,10,716777,0x167f8a45538,30, node:internal/validators:240:42,0x29c5437d590,~
code-source-info,0x167f8a45538,22,7638,7757,C0O7660C6O7698C22O7704C27O7698C29O7756,,
code-creation,LazyCompile,10,717131,0x167f8a45780,380,emit node:events:460:44,0x20182da3bb0,~
code-source-info,0x167f8a
code-creation,LazyCompile,10,717443,0x167f8a45b28,172,startListeningIfSignal node:internal/process/signal:22:32,0x2c7d080acf8,~
script-source,129,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x167f8a45b28,129,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,717872,0x167f8a45ee8,19,isSignal node:internal/process/signal:17:18,0x2c7d080ab90,~
code-source-info,0x167f8a45ee8,129,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,718071,0x167f8a462e8,202,setupFetch node:internal/bootstrap/pre_execution:181:20,0x1b7d8db74c8,~
code-source-info,0x167f8a462e8,389,5700,6903,C0O5700C24O5708C29O5720C34O5727C39O5737C49O5771C55O5771C61O5821C62O5828C63O5843C64O5843C66O6162C77O6178C86O6162C91O6469C102O6492C113O6521C124O6562C135O6602C146O6643C154O6469C159O6790C167O6790C172O6764C177O6827C185O6827C190O6858C195O6859C201O6902,,
code-creation,LazyCompile,10,718242,0x167f8a46558,5,get node:internal/bootstrap/node:139:6,0x29c54350df0,~
script-source,16,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\n// Non-standard extensions:\x0d\nconst { BroadcastChannel } = require('internal/worker/io');\x0d\nexposeInterface(globalThis\x2C 'BroadcastChannel'\x2C BroadcastChannel);\x0d\n\x0d\ndefineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\nconst timers = require('timers');\x0d\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n\x0d\nconst {\x0d\n  structuredClone\x2C\x0d\n} = require('internal/structured_clone');\x0d\ndefineOperation(globalThis\x2C 'structuredClone'\x2C structuredClone);\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because --no-node-snapshot disables the\x0d\n  // code cache even if the binary is built with embedded code cache.\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\nif (config.hasOpenSSL) {\x0d\n  require('crypto');\x0d\n}\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n\x0d\n  // Create global.process as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  // Create global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x167f8a46558,16,4305,4333,C0O4310C4O4331,,
tick,0x7fffad95c340,720428,0,0x0,3,0x7ff6d893c890,0x167f8a4267d,0x1b7d8db9b36,0x1b7d8db52ef
tick,0x7fffad8ffab3,720459,0,0x0,3,0x7ff6d893c890,0x167f8a4267d,0x1b7d8db9b36,0x1b7d8db52ef
tick,0x7ff6d8197515,720482,0,0x0,3,0x7ff6d893c890,0x167f8a46305,0x1b7d8db9b3c,0x1b7d8db52ef
tick,0x7fffad8ffaa0,720505,0,0x0,3,0x7ff6d893c890,0x167f8a46305,0x1b7d8db9b3c,0x1b7d8db52ef
code-creation,LazyCompile,10,720553,0x167f8a47400,52,get node:internal/bootstrap/node:115:6,0x29c54350d50,~
code-source-info,0x167f8a47400,16,3648,3919,C0O3691C14O3691C20O3731C29O3848C35O3870C43O3855C48O3890C49O3903C51O3914,,
code-creation,LazyCompile,10,720761,0x167f8a47608,29,defineOperation node:internal/util:472:25,0x29c5437a718,~
script-source,21,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet _DOMException;\x0d\nconst lazyDOMExceptionClass = () => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return _DOMException;\x0d\n};\x0d\n\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return new _DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze(ObjectCreate(null));\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  lazyDOMExceptionClass\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x167f8a47608,21,13583,13767,C0O13611C5O13640C12O13751C22O13611C28O13766,,
code-creation,LazyCompile,10,723761,0x167f8a489b8,33,lazyInterface node:internal/bootstrap/pre_execution:204:25,0x167f8a46140,~
code-source-info,0x167f8a489b8,389,6234,6463,C0O6234C9O6248C14O6317C22O6378C32O6458,,
code-creation,Eval,10,724170,0x167f8a48ed0,5, node:internal/wasm_web_api:1:1,0x167f8a48d28,~
script-source,391,node:internal/wasm_web_api,'use strict';\x0d\n\x0d\nconst {\x0d\n  PromiseResolve\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_WEBASSEMBLY_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nlet undici;\x0d\nfunction lazyUndici() {\x0d\n  return undici ??= require('internal/deps/undici/undici');\x0d\n}\x0d\n\x0d\n// This is essentially an implementation of a v8::WasmStreamingCallback\x2C except\x0d\n// that it is implemented in JavaScript because the fetch() implementation is\x0d\n// difficult to use from C++. See lib/internal/bootstrap/pre_execution.js and\x0d\n// src/node_wasm_web_api.cc that interact with this function.\x0d\nfunction wasmStreamingCallback(streamState\x2C source) {\x0d\n  (async () => {\x0d\n    const response = await PromiseResolve(source);\x0d\n    if (!(response instanceof lazyUndici().Response)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'source'\x2C ['Response'\x2C 'Promise resolving to Response']\x2C response);\x0d\n    }\x0d\n\x0d\n    const contentType = response.headers.get('Content-Type');\x0d\n    if (contentType !== 'application/wasm') {\x0d\n      throw new ERR_WEBASSEMBLY_RESPONSE(\x0d\n        `has unsupported MIME type '${contentType}'`);\x0d\n    }\x0d\n\x0d\n    if (!response.ok) {\x0d\n      throw new ERR_WEBASSEMBLY_RESPONSE(\x0d\n        `has status code ${response.status}`);\x0d\n    }\x0d\n\x0d\n    if (response.bodyUsed !== false) {\x0d\n      throw new ERR_WEBASSEMBLY_RESPONSE('body has already been used');\x0d\n    }\x0d\n\x0d\n    if (response.url) {\x0d\n      streamState.setURL(response.url);\x0d\n    }\x0d\n\x0d\n    // Pass all data from the response body to the WebAssembly compiler.\x0d\n    const { body } = response;\x0d\n    if (body != null) {\x0d\n      for await (const chunk of body) {\x0d\n        streamState.push(chunk);\x0d\n      }\x0d\n    }\x0d\n  })().then(() => {\x0d\n    // No error occurred. Tell the implementation that the stream has ended.\x0d\n    streamState.finish();\x0d\n  }\x2C (err) => {\x0d\n    // An error occurred\x2C either because the given object was not a valid\x0d\n    // and usable Response or because a network error occurred.\x0d\n    streamState.abort(err);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  wasmStreamingCallback\x0d\n};\x0d\n
code-source-info,0x167f8a48ed0,391,0,2015,C0O0C4O2015,,
code-creation,Function,10,724493,0x167f8a49068,88, node:internal/wasm_web_api:1:1,0x167f8a48e48,~
code-source-info,0x167f8a49068,391,0,2015,C0O0C32O28C38O130C44O130C49O156C54O74C60O99C66O171C67O171C69O1966C76O1988C82O1981C87O2014,,
code-creation,LazyCompile,10,724957,0x167f8a49a20,256,setupWebCrypto node:internal/bootstrap/pre_execution:231:24,0x1b7d8db7578,~
code-source-info,0x167f8a49a20,389,7036,7882,C0O7036C8O7044C13O7056C18O7063C23O7073C33O7108C39O7108C45O7166C46O7173C47O7188C48O7188C50O7202C61O7223C76O7291C107O7291C120O7202C125O7570C133O7574C138O7599C144O7619C158O7633C162O7629C164O7676C175O7692C184O7724C189O7676C194O7738C205O7754C214O7789C219O7738C224O7806C235O7822C244O7860C249O7806C255O7881,,
code-creation,LazyCompile,10,725401,0x167f8a49d28,74,setupCustomEvent node:internal/bootstrap/pre_execution:255:26,0x1b7d8db75f0,~
code-source-info,0x167f8a49d28,389,8019,8287,C0O8027C3O8039C8O8046C13O8056C21O8091C27O8091C33O8151C34O8158C35O8191C41O8191C46O8175C51O8228C58O8244C67O8228C73O8286,,
code-creation,LazyCompile,10,725859,0x167f8a49f20,75,setupDebugEnv node:internal/bootstrap/pre_execution:307:23,0x1b7d8db7758,~
code-source-info,0x167f8a49f20,389,9618,9833,C0O9626C6O9626C11O9659C19O9687C24O9691C29O9660C34O9707C42O9711C48O9756C54O9756C59O9793C64O9806C69O9807C74O9832,,
tick,0x7ff6d938da8f,726004,0,0x0,3,0x7ff6d893c890,0x167f8a4633e,0x1b7d8db9b3c,0x1b7d8db52ef
tick,0x7ff6d8198f95,726032,0,0x0,3,0x7ff6d893c890,0x1b7d8db9b7c,0x1b7d8db52ef
code-creation,LazyCompile,10,726151,0x167f8a4a2b8,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x20182d9a4a0,~
script-source,28,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x167f8a4a2b8,28,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,726642,0x167f8a4a8c8,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:285:40,0x1b7d8db7690,~
code-source-info,0x167f8a4a8c8,389,9140,9334,C0O9148C8O9153C14O9194C15O9201C16O9237C22O9237C27O9218C32O9289C38O9323C43O9323C48O9333,,
code-creation,LazyCompile,10,726800,0x167f8a4aae8,62,initializeReport node:internal/bootstrap/pre_execution:295:26,0x1b7d8db76e0,~
code-source-info,0x167f8a4aae8,389,9363,9592,C0O9363C8O9390C16O9390C21O9379C27O9429C42O9450C47O9546C55O9429C61O9591,,
code-creation,Eval,10,727207,0x167f8a4b060,5, node:internal/process/report:1:1,0x167f8a4ae68,~
script-source,392,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x167f8a4b060,392,0,2666,C0O0C4O2666,,
code-creation,Function,10,727854,0x167f8a4bb70,306, node:internal/process/report:1:1,0x167f8a4afd8,~
code-source-info,0x167f8a4bb70,392,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
tick,0x7fffad96d1c4,728014,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a4aaf8,0x1b7d8db9b88,0x1b7d8db52ef
code-creation,LazyCompile,10,728358,0x167f8a4d7b0,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:315:40,0x1b7d8db77a8,~
code-source-info,0x167f8a4d7b0,389,9937,10037,C0O9974C6O9974C11O9953C16O10015C20O10036,,
code-creation,LazyCompile,10,728501,0x167f8a4d8b8,57,addSignalHandler node:internal/process/report:98:26,0x167f8a4b090,~
code-source-info,0x167f8a4d8b8,392,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,728625,0x167f8a4de88,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:321:46,0x1b7d8db77f8,~
code-source-info,0x167f8a4de88,389,10086,10360,C0O10086C8O10109C18O10109C23O10155C25O10173C26O10180C27O10186C35O10186C40O10216C45O10217C50O10278C58O10278C63O10256C69O10298C74O10306C79O10309C84O10306C91O10359,,
code-creation,LazyCompile,10,728785,0x167f8a4e118,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:425:37,0x1b7d8db7988,~
code-source-info,0x167f8a4e118,389,13625,14171,C0O13633C3O13645C8O13649C14O13688C20O13688C25O13734C33O13757C38O13761C46O13734C52O13788C53O13798C57O13788C61O13882C64O13897C73O13958C76O13966C81O13970C90O14018C93O14033C102O14077C108O14077C113O14101C118O14102C124O14142C127O14157C132O14142C137O14170,,
code-creation,LazyCompile,10,728959,0x167f8a4e2b0,21,assert node:internal/assert:11:16,0x20182d99470,~
script-source,27,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x167f8a4e2b0,27,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,730247,0x167f8a4f1d8,5, node:child_process:1:1,0x167f8a4ecb0,~
script-source,393,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object' && !ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  } else {\x0d\n    validateArray(args\x2C 'args');\x0d\n  }\x0d\n\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  options = { ...options\x2C shell: false };\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\nfunction normalizeExecFileArgs(file\x2C args\x2C options\x2C callback) {\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args != null && typeof args === 'object') {\x0d\n    callback = options;\x0d\n    options = args;\x0d\n    args = null;\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = null;\x0d\n    args = null;\x0d\n  }\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n\x0d\n  if (callback != null) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  return { file\x2C args\x2C options\x2C callback };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args\x2C options\x2C callback) {\x0d\n  ({ file\x2C args\x2C options\x2C callback } = normalizeExecFileArgs(file\x2C args\x2C options\x2C callback));\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args?.length)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = kEmptyObject;\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(file\x2C args\x2C options) {\x0d\n  ({ file\x2C args\x2C options } = normalizeExecFileArgs(file\x2C args\x2C options));\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(file\x2C args\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const errArgs = [options.argv0 || file];\x0d\n  ArrayPrototypePushApply(errArgs\x2C args);\x0d\n  const err = checkExecSyncError(ret\x2C errArgs);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x167f8a4f1d8,393,0,26129,C0O0C4O26129,,
code-creation,Function,10,733162,0x167f8a4fcb0,790, node:child_process:1:1,0x167f8a4f150,~
code-source-info,0x167f8a4fcb
code-creation,LazyCompile,10,733876,0x167f8a52398,82,debuglog node:internal/util/debuglog:71:18,0x20182d9a728,~
code-source-info,0x167f8a52398,28,2302,3350,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3238C74O3169C79O3333C81O3347,,
tick,0x7ff6d820e6ec,734256,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7ff6d899afe5,735645,1,0x7ff6d82c7c30,2,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,Eval,10,735927,0x167f8a55900,5, node:internal/child_process:1:1,0x167f8a54c48,~
script-source,394,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
tick,0x7fffad96d1c4,749020,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7fffad96d1c4,749058,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7ff6d819751a,749088,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7ff6d8187ae0,749117,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-source-info,0x167f8a55900,394,0,32552,C0O0C4O32552,,
code-creation,Function,10,749170,0x167f8a56f20,1265, node:internal/child_process:1:1,0x167f8a55878,~
code-source-info,0x167f8a56f
tick,0x7fffad8ffab3,750011,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,Function,10,750044,0x167f8a576a0,26,<instance_members_initializer> node:internal/child_process:522:1,0x167f8a565e0,~
code-source-info,0x167f8a576a0,394,14071,15109,C3O14122C11O14139C19O14165C25O15109,,
tick,0x7ff6d899b9a2,751974,1,0x7ff6d82c7c30,2,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,Eval,10,753012,0x167f8a5c780,5, node:net:1:1,0x167f8a5b260,~
script-source,395,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!this._handle.setKeepAlive) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (enable !== this[kSetKeepAlive] ||\x0d\n      (\x0d\n        enable &&\x0d\n        this[kSetKeepAliveInitialDelay] !== initialDelay\x0d\n      )\x0d\n  ) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.resetAndDestroy = function() {\x0d\n  if (this._handle) {\x0d\n    if (!(this._handle instanceof TCP))\x0d\n      throw new ERR_INVALID_HANDLE_TYPE();\x0d\n    if (this.connecting) {\x0d\n      debug('reset wait for connection');\x0d\n      this.once('connect'\x2C () => this._reset());\x0d\n    } else {\x0d\n      this._reset();\x0d\n    }\x0d\n  } else {\x0d\n    this.destroy(new ERR_SOCKET_CLOSED());\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    if (this.resetAndClosing) {\x0d\n      this.resetAndClosing = false;\x0d\n      const err = this._handle.reset(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n      if (err)\x0d\n        this.emit('error'\x2C errnoException(err\x2C 'reset'));\x0d\n    } else {\x0d\n      this._handle.close(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n    }\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._reset = function() {\x0d\n  debug('reset connection');\x0d\n  this.resetAndClosing = true;\x0d\n  return this.destroy();\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getpeername(out);\x0d\n    if (err) return out;\x0d\n    this._peername = out;\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\x0d\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\x0d\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\x0d\n    }\x0d\n  } else {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C\x0d\n                    pipeName\x2C\x0d\n                    -1\x2C\x0d\n                    -1\x2C\x0d\n                    backlog\x2C\x0d\n                    undefined\x2C\x0d\n                    options.exclusive\x2C\x0d\n                    undefined\x2C\x0d\n                    {\x0d\n                      readableAll: options.readableAll\x2C\x0d\n                      writableAll: options.writableAll\x2C\x0d\n                    });\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    if (clientHandle.getsockname || clientHandle.getpeername) {\x0d\n      const data = ObjectCreate(null);\x0d\n      if (clientHandle.getsockname) {\x0d\n        const localInfo = ObjectCreate(null);\x0d\n        clientHandle.getsockname(localInfo);\x0d\n        data.localAddress = localInfo.address;\x0d\n        data.localPort = localInfo.port;\x0d\n      }\x0d\n      if (clientHandle.getpeername) {\x0d\n        const remoteInfo = ObjectCreate(null);\x0d\n        clientHandle.getpeername(remoteInfo);\x0d\n        data.remoteAddress = remoteInfo.address;\x0d\n        data.remotePort = remoteInfo.port;\x0d\n        data.remoteFamily = remoteInfo.family;\x0d\n      }\x0d\n      self.emit('drop'\x2C data);\x0d\n    } else {\x0d\n      self.emit('drop');\x0d\n    }\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && clientHandle.setNoDelay) {\x0d\n    socket[kSetNoDelay] = true;\x0d\n    clientHandle.setNoDelay(true);\x0d\n  }\x0d\n  if (self.keepAlive && clientHandle.setKeepAlive) {\x0d\n    socket[kSetKeepAlive] = true;\x0d\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\x0d\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x167f8a5c780,395,0,53911,C0O0C4O53911,,
tick,0x7fffad8ffab3,776387,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,Function,10,776432,0x167f8a5f7d0,2694, node:net:1:1,0x167f8a5c6f8,~
code-source-info,0x167f8a5f7d0,395,0,53911,C0O0C435O1183C441O1200C447O1226C453O1238C459O1249C465O1265C471O1284C477O1309C482O1334C487O1345C493O1401C499O1401C503O1401C505O1436C511O1436C515O1436C517O1468C523O1468C528O1501C542O1502C548O1468C550O1635C556O1635C561O1560C567O1569C572O1580C577O1591C583O1616C589O1676C595O1676C599O1676C601O1765C604O1765C609O1716C615O1734C621O1748C627O1810C633O1810C638O1799C644O1858C647O1858C652O1838C658O1909C661O1909C666O1892C672O2009C675O2009C680O1953C686O1961C692O1991C698O2109C701O2109C706O2050C712O2059C718O2090C724O2245C730O2245C735O2151C741O2166C752O2208C758O2225C764O2455C770O2455C775O2290C781O2308C787O2325C793O2342C798O2363C804O2375C809O2392C814O2413C820O2425C826O2439C832O2903C838O2903C843O2903C848O2522C854O2555C860O2582C866O2610C872O2636C878O2665C884O2695C890O2727C896O2756C902O2780C908O2807C914O2826C920O2852C926O2873C932O2957C938O2957C943O2940C949O3120C955O3120C960O3001C966O3025C972O3046C978O3064C984O3083C990O3100C996O3181C999O3181C1003O3181C1005O3283C1011O3283C1016O3223C1022O3256C1028O3366C1029O3366C1031O3380C1032O3380C1034O3390C1035O3390C1037O3406C1038O3406C1040O3449C1046O3449C1051O3432C1057O3490C1063O3490C1068O3477C1074O3547C1076O3547C1078O3585C1080O3585C1082O3612C1085O3620C1092O3629C1095O3612C1097O3658C1101O3658C1103O3707C1106O3707C1110O3707C1112O3803C1118O3803C1123O3758C1129O3774C1135O3788C1141O7427C1144O7427C1148O7427C1150O7472C1153O7472C1157O7472C1159O7518C1162O7518C1166O7518C1168O7564C1171O7564C1175O7564C1177O7624C1180O7624C1184O7624C1186O12306C1189O12334C1197O12352C1202O12359C1207O12306C1212O12372C1218O12408C1223O12372C1228O12451C1231O12458C1240O12480C1244O12716C1247O12723C1256O12740C1260O14310C1263O14317C1270O14338C1274O14363C1277O14370C1286O14391C1290O14919C1293O14926C1302O14947C1306O15348C1309O15355C1318O15378C1322O16019C1325O16026C1334O16044C1338O16099C1344O16127C1358O16183C1366O16099C1371O16238C1377O16266C1391O16313C1399O16238C1404O16405C1410O16433C1424O16488C1432O16405C1437O16825C1443O16853C1457O16908C1465O16825C1470O17001C1476O17029C1481O17040C1487O17084C1498O17001C1503O17465C1506O17472C1515O17488C1519O17735C1522O17742C1531O17756C1535O17955C1538O17962C1547O17988C1555O18359C1558O18366C1567O18382C1575O18736C1578O18743C1587O18760C1595O18959C1598O18966C1607O18981C1615O19335C1618O19342C1627O19364C1635O19528C1638O19535C1647O19554C1655O20856C1658O20863C1667O20880C1675O20990C1678O20997C1687O21020C1695O21526C1703O21526C1713O21650C1721O21650C1731O21753C1739O21753C1749O21853C1757O21853C1767O21949C1770O21956C1779O21979C1787O22273C1795O22273C1805O22376C1813O22376C1823O22470C1826O22477C1831O22487C1835O22505C1843O22561C1846O22568C1855O22592C1863O23391C1866O23398C1875O23416C1883O23495C1886O23502C1895O23519C1903O23770C1911O23770C1921O23914C1929O23914C1939O27704C1942O27711C1951O27729C1959O32284C1962O32291C1971O32305C1979O32512C1982O32519C1991O32535C1999O36155C2002O36183C2014O36207C2023O36155C2033O36220C2039O36220C2049O40341C2052O40348C2063O40367C2071O41909C2074O41916C2087O41933C2095O46300C2101O46328C2122O46382C2134O46300C2144O46480C2147O46487C2160O46505C2168O48682C2171O48689C2184O48714C2192O49511C2195O49518C2208O49534C2216O50445C2219O50452C2232O50482C2240O50982C2243O50989C2255O51012C2268O51036C2276O51369C2282O51394C2303O51439C2315O51480C2327O51369C2337O51530C2343O51558C2360O51605C2372O51641C2384O51530C2394O51686C2397O51693C2410O51716C2418O51971C2421O51978C2434O51992C2442O52104C2445O52111C2458O52127C2466O52244C2468O52300C2469O52300C2471O52309C2482O52333C2483O52333C2485O52359C2494O53089C2499O53371C2509O53414C2519O53453C2529O53471C2539O53739C2549O53769C2559O53781C2569O53804C2579O53821C2589O53840C2599O53851C2609O53862C2619O53881C2684O53386C2693O53910,,
tick,0x7ff6d8b32c13,777147,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7fffad96d1c4,777195,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7ff6d820e638,777228,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7fffad8ff25f,777262,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7ff6d938c800,777295,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7fffad8ff25f,777401,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,Eval,10,778058,0x167f8a65570,5, node:internal/net:1:1,0x167f8a653a8,~
script-source,396,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x167f8a65570,396,0,1818,C0O0C4O1818,,
tick,0x7fffab0e50c0,778449,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5f9fc,0x1b7d8db631f,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,Function,10,778497,0x167f8a65960,617, node:internal/net:1:1,0x167f8a654e8,~
code-source-info,0x167f8a65960,396,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,779272,0x167f8a674a0,5, node:internal/dtrace:1:1,0x167f8a67358,~
script-source,397,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x167f8a674a0,397,0,589,C0O0C4O589,,
code-creation,Function,10,779415,0x167f8a67978,140, node:internal/dtrace:1:1,0x167f8a67418,~
code-source-info,0x167f8a67978,397,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
tick,0x7ff6d8187110,779920,0,0x0,2,0x7ff6d893c890,0x167f8a5fe77,0x1b7d8db631f,0x7ff658f84361,0x167f8a5710e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,LazyCompile,10,780136,0x167f8a68a40,34,protoGetter node:net:796:21,0x167f8a5cbc0,~
code-source-info,0x167f8a68a40,395,21354,21522,C0O21376C8O21404C13O21415C20O21504C27O21376C33O21521,,
code-creation,Eval,10,781656,0x167f8a6e030,5, node:dgram:1:1,0x167f8a6dab8,~
script-source,398,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  state.handle.onerror = onError;\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address != null) {\x0d\n    validateString(address\x2C 'address');\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onError(nread\x2C handle\x2C error) {\x0d\n  const self = handle[owner_symbol];\x0d\n  return self.emit('error'\x2C error);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x167f8a6e030,398,0,28518,C0O0C4O28518,,
tick,0x7fffad8ffab3,785085,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5711a,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7ff6d820e6fe,785130,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5711a,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,Function,10,785196,0x167f8a6ff98,1507, node:dgram:1:1,0x167f8a6dfa8,~
code-source-info,0x167f8a6ff
tick,0x7ff6d8c3b8d0,786102,1,0x7ff6d82c7c30,5,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a5711a,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,Eval,10,786466,0x167f8a73430,5, node:internal/dgram:1:1,0x167f8a73228,~
script-source,399,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x167f8a73430,399,0,1941,C0O0C4O1941,,
code-creation,Function,10,786907,0x167f8a736f8,196, node:internal/dgram:1:1,0x167f8a733a8,~
code-source-info,0x167f8a736f8,399,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
code-creation,LazyCompile,10,787477,0x167f8a76028,152,deprecate node:internal/util:96:19,0x29c54379e88,~
code-source-info,0x167f8a76028,21,2496,3713,C0O2496C26O2517C31O2529C37O2543C42O2560C44O2570C45O2629C53O2668C61O2690C66O2671C83O2728C87O2757C100O2757C105O2805C106O2805C108O3400C121O3400C126O3441C129O3448C135O3645C141O3671C145O3666C149O3692C151O3710,,
tick,0x7ff6d89311b0,787784,0,0x0,0,0x7ff6d89311b0,0x167f8a70550,0x1b7d8db631f,0x7ff658f84361,0x167f8a5711a,0x1b7d8db631f,0x7ff658f84361,0x167f8a4ff1e,0x1b7d8db631f,0x7ff658f84361,0x167f8a4e184,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,Eval,10,788135,0x167f8a776b8,5, node:internal/socket_list:1:1,0x167f8a77560,~
script-source,400,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x167f8a776b8,400,0,2813,C0O0C4O2813,,
code-creation,Function,10,788841,0x167f8a77cf8,126, node:internal/socket_list:1:1,0x167f8a77630,~
code-source-info,0x167f8a77cf8,400,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,789641,0x167f8a785e8,14,customPromiseExecFunction node:child_process:229:35,0x167f8a4f808,~
code-source-info,0x167f8a785e8,393,6791,7171,C0O6791C9O6806C13O7168,,
code-creation,LazyCompile,10,790661,0x167f8a7a6e8,129,_forkChild node:child_process:168:20,0x167f8a4f258,~
code-source-info,0x167f8a7a6e8,393,5030,5512,C0O5030C8O5094C19O5103C22O5117C29O5094C35O5128C40O5128C45O5143C50O5143C54O5171C72O5171C77O5171C79O5219C84O5227C97O5227C103O5362C108O5370C121O5370C128O5511,,
tick,0x7fffad96d784,791794,1,0x7ff6d8244b80,6,0x7ff6d8d6aa80,0x167f8a7a710,0x167f8a4e18e,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7fffad96d784,794385,1,0x7ff6d8244b80,6,0x7ff6d8d6aa80,0x167f8a7a710,0x167f8a4e18e,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7fffad96d784,795747,1,0x7ff6d8244b80,6,0x7ff6d8d6aa80,0x167f8a7a710,0x167f8a4e18e,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7fffad96d784,797356,1,0x7ff6d8244b80,6,0x7ff6d8d6aa80,0x167f8a7a710,0x167f8a4e18e,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7fffad96d604,799355,1,0x7ff6d8244b80,6,0x7ff6d8d6aa80,0x167f8a7a710,0x167f8a4e18e,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,LazyCompile,10,800997,0x167f8a7b0f0,396,setupChannel node:internal/child_process:569:22,0x167f8a55bb0,~
code-source-info,0x167f8a7b0f
code-creation,LazyCompile,10,801270,0x167f8a7d8b8,72,Control node:internal/child_process:527:14,0x167f8a563e8,~
code-source-info,0x167f8a7d8b8,394,14188,14282,C3O14205C11O14205C40O14219C48O14233C52O14249C59O14254C64O14272C71O14281,,
tick,0x7fffad96d1c4,801415,0,0x0,3,0x7ff6d893c890,0x167f8a7b121,0x167f8a7a730,0x167f8a4e18e,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,LazyCompile,10,801534,0x167f8a7d9e8,21,EventEmitter node:events:212:22,0x20182da3528,~
code-source-info,0x167f8a7d9e8,29,6524,6574,C0O6536C3O6549C8O6554C13O6554C20O6573,,
code-creation,LazyCompile,10,801789,0x167f8a7db28,149,EventEmitter.init node:events:337:29,0x20182da38f8,~
code-source-info,0x167f8a7db28,29,10180,10788,C0O10203C6O10240C13O10252C16O10252C21O10278C25O10248C30O10295C32O10310C37O10310C41O10308C45O10335C46O10353C50O10394C60O10387C64O10429C71O10437C80O10465C85O10486C93O10465C98O10540C100O10545C105O10557C108O10570C113O10557C117O10555C123O10730C125O10735C131O10760C138O10770C140O10769C143O10745C148O10787,,
code-creation,Eval,10,802541,0x167f8a7e478,5, node:internal/child_process/serialization:1:1,0x167f8a7e150,~
script-source,401,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kMessageBufferSize = Symbol('kMessageBufferSize');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = [];\x0d\n    channel[kMessageBufferSize] = 0;\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    ArrayPrototypePush(channel[kMessageBuffer]\x2C readData);\x0d\n    channel[kMessageBufferSize] += readData.length;\x0d\n\x0d\n    // Index 0 should always be present because we just pushed data into it.\x0d\n    let messageBufferHead = channel[kMessageBuffer][0];\x0d\n    while (messageBufferHead.length >= 4) {\x0d\n      // We call `readUInt32BE` manually here\x2C because this is faster than first converting\x0d\n      // it to a buffer and using `readUInt32BE` on that.\x0d\n      const fullMessageSize = (\x0d\n        messageBufferHead[0] << 24 |\x0d\n        messageBufferHead[1] << 16 |\x0d\n        messageBufferHead[2] << 8 |\x0d\n        messageBufferHead[3]\x0d\n      ) + 4;\x0d\n\x0d\n      if (channel[kMessageBufferSize] < fullMessageSize) break;\x0d\n\x0d\n      const concatenatedBuffer = channel[kMessageBuffer].length === 1 ?\x0d\n        channel[kMessageBuffer][0] :\x0d\n        Buffer.concat(\x0d\n          channel[kMessageBuffer]\x2C\x0d\n          channel[kMessageBufferSize]\x0d\n        );\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(concatenatedBuffer\x2C 4\x2C fullMessageSize)\x0d\n      );\x0d\n\x0d\n      messageBufferHead = TypedArrayPrototypeSubarray(concatenatedBuffer\x2C fullMessageSize);\x0d\n      channel[kMessageBufferSize] = messageBufferHead.length;\x0d\n      channel[kMessageBuffer] =\x0d\n        channel[kMessageBufferSize] !== 0 ? [messageBufferHead] : [];\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n\x0d\n    channel.buffering = channel[kMessageBufferSize] > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    // Add 4 bytes\x2C to later populate with message length\x0d\n    ser.writeRawBytes(Buffer.allocUnsafe(4));\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const serializedMessageLength = serializedMessage.length - 4;\x0d\n\x0d\n    serializedMessage.set([\x0d\n      serializedMessageLength >> 24 & 0xFF\x2C\x0d\n      serializedMessageLength >> 16 & 0xFF\x2C\x0d\n      serializedMessageLength >> 8 & 0xFF\x2C\x0d\n      serializedMessageLength & 0xFF\x2C\x0d\n    ]\x2C 0);\x0d\n\x0d\n    const result = channel.writeBuffer(req\x2C serializedMessage\x2C handle);\x0d\n\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = serializedMessage;\x0d\n\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x167f8a7e478,401,0,5522,C0O0C4O5522,,
code-creation,Function,10,803177,0x167f8a7ecf0,390, node:internal/child_process/serialization:1:1,0x167f8a7e3f0,~
code-source-info,0x167f8a7ecf0,401,0,5522,C0O0C62O28C68O42C74O60C80O85C86O108C91O119C97O186C100O186C105O175C111O232C114O232C119O214C125O271C128O271C133O317C136O317C141O295C147O365C150O365C154O365C156O442C159O442C164O402C170O419C176O500C179O500C183O500C185O554C188O554C192O554C194O605C197O605C201O605C203O652C206O652C210O652C212O915C213O915C215O950C217O950C223O994C258O954C264O1318C299O1276C301O1776C306O1781C314O1927C322O3502C333O4379C338O4384C346O4499C354O5309C365O5484C372O5503C378O5513C384O5499C389O5521,,
tick,0x7ff6d93ae564,803425,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0x167f8a7b1b6,0x167f8a7a730,0x167f8a4e18e,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,LazyCompile,10,803780,0x167f8a7f778,23,initMessageChannel node:internal/child_process/serialization:132:21,0x167f8a7e6d8,~
code-source-info,0x167f8a7f778,401,4402,4492,C0O4419C2O4427C7O4440C11O4451C13O4459C17O4475C22O4491,,
code-creation,LazyCompile,10,803964,0x167f8a7fed0,19,_getMaxListeners node:events:414:26,0x20182da3ac0,~
code-source-info,0x167f8a7fed0,29,12446,12574,C0O12467C6O12501C9O12521C13O12541C14O12557C18O12571,,
code-creation,LazyCompile,10,804045,0x167f8a7ffc8,5,get node:events:272:16,0x20182da3708,~
code-source-info,0x167f8a7ffc8,29,8173,8215,C0O8183C4O8210,,
code-creation,LazyCompile,10,804194,0xb9fe8c9470,322,arrayClone node:events:865:20,0x20182da41e0,~
code-source-info,0xb9fe8c9470,29,25538,26003,C0O25680C42O25703C50O25714C62O25722C71O25727C72O25741C80O25752C92O25760C104O25768C113O25773C114O25787C122O25798C134O25806C146O25814C158O25822C167O25827C168O25841C176O25852C188O25860C200O25868C212O25876C224O25884C233O25889C234O25903C242O25914C254O25922C266O25930C278O25938C290O25946C302O25954C311O25959C312O25968C317O25975C321O26000,,
code-creation,LazyCompile,10,804384,0xb9fe8c9748,22, node:internal/child_process:705:36,0x167f8a7ac08,~
code-source-info,0xb9fe8c9748,394,19997,20410,C0O20009C5O20017C15O20017C21O20409,,
code-creation,LazyCompile,10,804598,0xb9fe8c99e8,372,nextTick node:internal/process/task_queues:103:18,0x31522b0c140,~
script-source,38,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0xb9fe8c99e
code-creation,LazyCompile,10,805719,0xb9fe8ca260,15,isEmpty node:internal/fixed_queue:95:10,0x31522b10f28,~
script-source,40,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xb9fe8ca260,40,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,807183,0xb9fe8ca710,13,isEmpty node:internal/fixed_queue:67:10,0x31522b10d10,~
code-source-info,0xb9fe8ca710,40,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,809960,0xb9fe8ca800,25,setHasTickScheduled node:internal/process/task_queues:51:29,0x31522b0c050,~
code-source-info,0xb9fe8ca800,38,1134,1194,C0O1147C7O1156C12O1177C19O1175C24O1193,,
code-creation,LazyCompile,10,810974,0xb9fe8ca900,23,newAsyncId node:internal/async_hooks:416:20,0x29c54373ff0,~
script-source,19,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  registerDestroyHook(promise\x2C asyncId);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xb9fe8ca900,19,14888,14941,C0O14896C7O14921C16O14936C22O14938,,
tick,0x7fffad8ff25f,813411,0,0x0,3,0x7ff6d893c890,0xb9fe8c9ae8,0xb9fe8c9757,0x167f8a458d1,0x167f8a4517d,0x167f8a42ae6,0x167f8a7a749,0x167f8a4e18e,0x1b7d8db9b9a,0x1b7d8db52ef
tick,0x7ff6d820e638,813449,0,0x0,3,0x7ff6d893c890,0xb9fe8c9ae8,0xb9fe8c9757,0x167f8a458d1,0x167f8a4517d,0x167f8a42ae6,0x167f8a7a749,0x167f8a4e18e,0x1b7d8db9b9a,0x1b7d8db52ef
code-creation,LazyCompile,10,813511,0xb9fe8cbdd8,35,getDefaultTriggerAsyncId node:internal/async_hooks:432:34,0x29c54374090,~
code-source-info,0xb9fe8cbdd8,19,15363,15626,C0O15401C7O15417C9O15416C13O15512C14O15538C19O15548C26O15571C28O15570C31O15590C32O15594C34O15623,,
code-creation,LazyCompile,10,813668,0xb9fe8cc1f8,13,initHooksExist node:internal/async_hooks:478:24,0x29c54374220,~
code-source-info,0xb9fe8cc1f8,19,16630,16664,C0O16638C5O16654C8O16645C12O16661,,
code-creation,LazyCompile,10,813764,0xb9fe8cc2e0,16,hasHooks node:internal/async_hooks:470:18,0x29c54374180,~
code-source-info,0xb9fe8cc2e0,19,16490,16538,C0O16501C7O16525C12O16531C15O16535,,
code-creation,LazyCompile,10,813918,0xb9fe8cc3e8,59,push node:internal/fixed_queue:99:7,0x31522b10f78,~
code-source-info,0xb9fe8cc3e8,40,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,814032,0xb9fe8cc528,24,isFull node:internal/fixed_queue:71:9,0x31522b10d60,~
code-source-info,0xb9fe8cc528,40,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,814219,0xb9fe8cc630,37,push node:internal/fixed_queue:75:7,0x31522b10db0,~
code-source-info,0xb9fe8cc630,40,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,814413,0xb9fe8cc750,30,onNewListener node:child_process:174:51,0x167f8a7a5a0,~
code-source-info,0xb9fe8cc750,393,5267,5356,C0O5281C2O5290C9O5312C14O5330C19O5338C24O5338C29O5355,,
code-creation,LazyCompile,10,814687,0xb9fe8ccaa0,455,initializePolicy node:internal/bootstrap/pre_execution:453:26,0x1b7d8db7a28,~
code-source-info,0xb9fe8ccaa
code-creation,LazyCompile,10,814978,0xb9fe8cce70,63,initializeClusterIPC node:internal/bootstrap/pre_execution:444:30,0x1b7d8db79d8,~
code-source-info,0xb9fe8cce70,389,14204,14452,C0O14212C3O14224C10O14228C18O14243C23O14247C29O14286C35O14286C40O14319C45O14319C49O14410C52O14425C62O14451,,
code-creation,LazyCompile,10,815151,0xb9fe8ccfe0,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:548:38,0x1b7d8db7b68,~
code-source-info,0xb9fe8ccfe0,389,18107,18260,C0O18153C6O18153C11O18123C16O18205C21O18234C26O18259,,
tick,0x7ff6d8d8d017,815352,1,0x7ff6d82c7c30,2,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8ccfe6,0x1b7d8db9bac,0x1b7d8db52ef
code-creation,Eval,10,816002,0xb9fe8cdad8,5, node:internal/source_map/source_map_cache:1:1,0xb9fe8cd740,~
script-source,402,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = RegExpPrototypeExec(\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x2C\x0d\n    content\x2C\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else if (isGeneratedSource) {\x0d\n      generatedSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const matchSourceURL = RegExpPrototypeExec(\x0d\n    /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/\x2C\x0d\n    content\x0d\n  );\x0d\n  if (matchSourceURL == null) {\x0d\n    return;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL\x2C isGenerated) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap;\x0d\n  if (isGenerated) {\x0d\n    sourceMap = generatedSourceMapCache.get(sourceURL);\x0d\n  } else {\x0d\n    sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n    if (sourceMap === undefined) {\x0d\n      for (const value of cjsSourceMapCache) {\x0d\n        const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n        if (sourceURL === filename) {\x0d\n          sourceMap = {\x0d\n            data: ObjectGetValueSafe(value\x2C 'data')\x0d\n          };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8cdad8,402,0,9338,C0O0C4O9338,,
tick,0x7ff6d9398e7e,817374,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8ccfe6,0x1b7d8db9bac,0x1b7d8db52ef
code-creation,Function,10,817411,0xb9fe8ce1c0,482, node:internal/source_map/source_map_cache:1:1,0xb9fe8cda50,~
code-source-info,0xb9fe8ce1c
code-creation,Eval,10,818034,0xb9fe8cf3c0,5, node:internal/util/iterable_weak_map:1:1,0xb9fe8cf160,~
script-source,403,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8cf3c0,403,0,2042,C0O0C4O2042,,
code-creation,Function,10,818340,0xb9fe8cfb20,196, node:internal/util/iterable_weak_map:1:1,0xb9fe8cf338,~
code-source-info,0xb9fe8cfb20,403,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,818404,0xb9fe8cfca0,66,<instance_members_initializer> node:internal/util/iterable_weak_map:16:1,0xb9fe8cf648,~
code-source-info,0xb9fe8cfca0,403,388,1891,C3O426C10O426C22O458C29O458C41O497C55O497C65O1891,,
code-creation,Eval,10,819096,0xb9fe8d08d8,5, node:internal/modules/cjs/helpers:1:1,0xb9fe8d0620,~
script-source,404,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          __proto__: null\x2C\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8d08d8,404,0,7098,C0O0C4O7098,,
tick,0x7fffad8ffaa0,820127,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8ce303,0x1b7d8db631f,0x7ff658f84361,0xb9fe8ccfe6,0x1b7d8db9bac,0x1b7d8db52ef
code-creation,Function,10,820179,0xb9fe8d0e58,536, node:internal/modules/cjs/helpers:1:1,0xb9fe8d0850,~
code-source-info,0xb9fe8d0e58,404,0,7098,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6929C488O6951C494O6978C500O6996C506O7013C512O7034C518O7058C524O7083C530O6944C535O7097,,
code-creation,LazyCompile,10,820695,0xb9fe8d1af0,27,SafeSet node:internal/per_context/primordials:379:16,0x29c543476b8,~
code-source-info,0xb9fe8d1af0,12,11306,11323,C3O11312C7O11318C11O11312C26O11322,,
code-creation,LazyCompile,10,820888,0xb9fe8d1cb8,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0xb9fe8cf440,~
code-source-info,0xb9fe8d1cb8,403,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,821009,0xb9fe8d2038,27,SafeWeakMap node:internal/per_context/primordials:372:16,0x29c54347618,~
code-source-info,0xb9fe8d2038,12,11143,11160,C3O11149C7O11155C11O11149C26O11159,,
code-creation,LazyCompile,10,821139,0xb9fe8d2138,27,SafeFinalizationRegistry node:internal/per_context/primordials:393:16,0x29c543477f8,~
code-source-info,0xb9fe8d2138,12,11770,11815,C3O11790C7O11796C11O11790C26O11814,,
tick,0x7fffaba95b50,821534,0,0x0,2,0x7ff6d893c890,0x1b7d8db9bb2,0x1b7d8db52ef
code-creation,LazyCompile,10,821633,0xb9fe8d2668,358,initializeDeprecations node:internal/bootstrap/pre_execution:364:32,0x1b7d8db7938,~
code-source-info,0xb9fe8d2668,389,11606,13585,C0O11636C6O11636C11O11622C16O11692C24O11692C29O11887C35O11887C40O11929C46O11929C51O11983C80O11975C108O11975C111O12319C122O12339C126O12382C137O12457C148O12549C159O12503C168O12367C177O12610C180O12337C184O11964C249O12894C255O12894C260O12873C265O12924C267O12953C278O12974C285O13120C289O12953C294O13156C298O13187C304O13223C314O13301C321O13205C326O13203C330O13390C336O13432C347O13414C352O13412C357O13584,,
code-creation,LazyCompile,10,822351,0xb9fe8d29b0,53,initializeWASI node:internal/bootstrap/pre_execution:502:24,0x1b7d8db7a78,~
code-source-info,0xb9fe8d29b0,389,16353,16564,C0O16386C6O16386C11O16369C16O16453C21O16457C29O16457C35O16473C37O16505C43O16505C47O16498C52O16563,,
code-creation,LazyCompile,10,822592,0xb9fe8d2ae8,53,runDeserializeCallbacks node:internal/v8/startup_snapshot:31:33,0x351f86f6528,~
script-source,82,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n  markBootstrapComplete\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  // For now this is the only way to build a snapshot.\x0d\n  return require('internal/options').getOptionValue('--build-snapshot');\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n  // Remove the hooks from the snapshot.\x0d\n  require('v8').startupSnapshot = undefined;\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x0d\n    } = require('internal/bootstrap/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    prepareMainThreadExecution(true);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xb9fe8d2ae8,82,790,936,C0O833C5O826C11O833C16O878C21O899C26O899C31O856C37O869C44O913C48O798C52O935,,
code-creation,LazyCompile,10,823294,0xb9fe8d3078,66,initializeCJSLoader node:internal/bootstrap/pre_execution:509:29,0x1b7d8db7ac8,~
code-source-info,0xb9fe8d3078,389,16596,16919,C0O16622C6O16622C11O16665C16O16670C20O16690C26O16729C31O16736C36O16736C40O16835C51O16857C56O16893C60O16850C65O16918,,
tick,0x7fffad8fb522,826126,1,0x7ff6d82c7c30,2,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Eval,10,827135,0xb9fe8d5d00,5, node:internal/modules/cjs/loader:1:1,0xb9fe8d47b8,~
script-source,405,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  ArrayPrototypeFlatMap\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate\x2C kEmptyObject } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers &&\x0d\n    NativeModule.canBeRequiredWithoutScheme(id)) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst allBuiltins = new SafeSet(\x0d\n  ArrayPrototypeFlatMap(builtinModules\x2C (bm) => [bm\x2C `node:${bm}`])\x0d\n);\x0d\nNativeModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeExec(trailingSlashRegex\x2C request) !== null;\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (\x0d\n    (\x0d\n      StringPrototypeStartsWith(request\x2C 'node:') &&\x0d\n      NativeModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\x0d\n    ) || (\x0d\n      NativeModule.canBeRequiredByUsers(request) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(request)\x0d\n    )\x0d\n  ) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = readPackageScope(parentPath) || {};\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                cjsConditions)\x2C parentPath\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  const actual = tryFile(filename);\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers &&\x0d\n        NativeModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nModule.isBuiltin = function isBuiltin(moduleName) {\x0d\n  return allBuiltins.has(moduleName);\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0xb9fe8d5d00,405,0,42300,C0O0C4O42300,,
code-creation,Function,10,832825,0xb9fe8d7bd0,2678, node:internal/modules/cjs/loader:1:1,0xb9fe8d5c78,~
code-source-info,0xb9fe8d7bd
code-creation,Eval,10,834223,0xb9fe8dbd40,5, node:internal/modules/package_json_reader:1:1,0xb9fe8dbb98,~
script-source,406,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0xb9fe8dbd40,406,0,1024,C0O0C4O1024,,
code-creation,Function,10,834437,0xb9fe8dbe90,113, node:internal/modules/package_json_reader:1:1,0xb9fe8dbcb8,~
code-source-info,0xb9fe8dbe90,406,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,834910,0xb9fe8dc658,5, node:internal/process/esm_loader:1:1,0xb9fe8dc450,~
script-source,407,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n// Module.runMain() causes loadESM() to re-run (which it should do); however\x2C this should NOT cause\x0d\n// ESM to be re-initialised; doing so causes duplicate custom loaders to be added to the public\x0d\n// esmLoader.\x0d\nlet isESMInitialized = false;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  if (isESMInitialized) { return; }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (customLoaders.length === 0) return;\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const keyedExportsList = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(keyedExportsList);\x0d\n\x0d\n  isESMInitialized = true;\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xb9fe8dc658,407,0,3087,C0O0C4O3087,,
code-creation,Function,10,835490,0xb9fe8dc8f8,188, node:internal/process/esm_loader:1:1,0xb9fe8dc5d0,~
code-source-info,0xb9fe8dc8f8,407,0,3087,C0O0C47O28C53O119C59O119C64O145C69O74C75O176C81O176C86O162C92O270C98O270C103O228C109O336C115O336C120O318C126O397C132O397C137O373C143O431C147O466C151O777C155O817C159O1300C162O1300C167O1300C169O1318C171O1336C175O1588C176O1588C178O2717C182O2733C187O3086,,
tick,0x7ff6d8b32f8c,835830,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7fffad8ff243,835870,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7ff6d8197eec,835897,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7fffad8ff243,835923,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7ff6d88e3634,836238,1,0x7ff6d82c7c30,2,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Eval,10,836688,0xb9fe8ddf68,5, node:internal/modules/esm/loader:1:1,0xb9fe8dda48,~
script-source,408,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_LOADER_CHAIN_INCOMPLETE\x2C\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * @typedef {object} ExportedHooks\x0d\n * @property {Function} globalPreload\x0d\n * @property {Function} resolve\x0d\n * @property {Function} load\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedExports\x0d\n * @property {ModuleExports} exports\x0d\n * @property {URL['href']} url\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedHook\x0d\n * @property {Function} fn\x0d\n * @property {URL['href']} url\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n// [2] `validate...()`s throw the wrong error\x0d\n\x0d\nlet emittedSpecifierResolutionWarning = false;\x0d\n\x0d\n/**\x0d\n * A utility function to iterate through a hook chain\x2C track advancement in the\x0d\n * chain\x2C and generate and supply the `next<HookName>` argument to the custom\x0d\n * hook.\x0d\n * @param {KeyedHook[]} chain The whole hook chain.\x0d\n * @param {object} meta Properties that change as the current hook advances\x0d\n * along the chain.\x0d\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\x0d\n * reached AND invoked.\x0d\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\x0d\n *  pinpoint where an error occurred. Ex "file:///foo.mjs 'resolve'".\x0d\n * @param {number} meta.hookIndex A non-negative integer tracking the current\x0d\n * position in the hook chain.\x0d\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\x0d\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\x0d\n * @param {(hookErrIdentifier\x2C hookArgs) => void} validate A wrapper function\x0d\n *  containing all validation of a custom loader hook's intermediary output. Any\x0d\n *  validation within MUST throw.\x0d\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\x0d\n */\x0d\nfunction nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput }) {\x0d\n  // First\x2C prepare the current\x0d\n  const { hookName } = meta;\x0d\n  const {\x0d\n    fn: hook\x2C\x0d\n    url: hookFilePath\x2C\x0d\n  } = chain[meta.hookIndex];\x0d\n\x0d\n  // ex 'nextResolve'\x0d\n  const nextHookName = `next${\x0d\n    StringPrototypeToUpperCase(hookName[0]) +\x0d\n    StringPrototypeSlice(hookName\x2C 1)\x0d\n  }`;\x0d\n\x0d\n  // When hookIndex is 0\x2C it's reached the default\x2C which does not call next()\x0d\n  // so feed it a noop that blows up if called\x2C so the problem is obvious.\x0d\n  const generatedHookIndex = meta.hookIndex;\x0d\n  let nextNextHook;\x0d\n  if (meta.hookIndex > 0) {\x0d\n    // Now\x2C prepare the next: decrement the pointer so the next call to the\x0d\n    // factory generates the next link in the chain.\x0d\n    meta.hookIndex--;\x0d\n\x0d\n    nextNextHook = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n  } else {\x0d\n    // eslint-disable-next-line func-name-matching\x0d\n    nextNextHook = function chainAdvancedTooFar() {\x0d\n      throw new ERR_INTERNAL_ASSERTION(\x0d\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\x0d\n      );\x0d\n    };\x0d\n  }\x0d\n\x0d\n  return ObjectDefineProperty(\x0d\n    async (...args) => {\x0d\n      // Update only when hook is invoked to avoid fingering the wrong filePath\x0d\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\x0d\n\x0d\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`\x2C args);\x0d\n\x0d\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\x0d\n\x0d\n      // Set when next<HookName> is actually called\x2C not just generated.\x0d\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\x0d\n\x0d\n      // `context` is an optional argument that only needs to be passed when changed\x0d\n      switch (args.length) {\x0d\n        case 1: // It was omitted\x2C so supply the cached value\x0d\n          ArrayPrototypePush(args\x2C meta.context);\x0d\n          break;\x0d\n        case 2: // Overrides were supplied\x2C so update cached value\x0d\n          ObjectAssign(meta.context\x2C args[1]);\x0d\n          break;\x0d\n      }\x0d\n\x0d\n      ArrayPrototypePush(args\x2C nextNextHook);\x0d\n      const output = await ReflectApply(hook\x2C undefined\x2C args);\x0d\n\x0d\n      validateOutput(outputErrIdentifier\x2C output);\x0d\n\x0d\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n      return output;\x0d\n\x0d\n    }\x2C\x0d\n    'name'\x2C\x0d\n    { __proto__: null\x2C value: nextHookName }\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} globalPreloaders Last-in-first-out\x0d\n   *  list of preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} loaders Last-in-first-out\x0d\n   *  collection of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    {\x0d\n      fn: defaultLoad\x2C\x0d\n      url: 'node:internal/modules/esm/load'\x2C\x0d\n    }\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} resolvers Last-in-first-out\x0d\n   *  collection of resolver hooks.\x0d\n   */\x0d\n  #resolvers = [\x0d\n    {\x0d\n      fn: defaultResolve\x2C\x0d\n      url: 'node:internal/modules/esm/resolve'\x2C\x0d\n    }\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  constructor() {\x0d\n    if (getOptionValue('--experimental-loader').length > 0) {\x0d\n      emitExperimentalWarning('Custom ESM Loaders');\x0d\n    }\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n    if (\x0d\n      !emittedSpecifierResolutionWarning &&\x0d\n      getOptionValue('--experimental-specifier-resolution') === 'node'\x0d\n    ) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning'\x0d\n      );\x0d\n      emittedSpecifierResolutionWarning = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   *\x0d\n   * @param {ModuleExports} exports\x0d\n   * @returns {ExportedHooks}\x0d\n   */\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {KeyedExports} customLoaders\x0d\n   *  A list of exports from user-defined loaders (as returned by\x0d\n   *  ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const {\x0d\n        exports\x2C\x0d\n        url\x2C\x0d\n      } = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#globalPreloaders\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(globalPreloader)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (resolver) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#resolvers\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(resolver)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (loader) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#loaders\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(loader)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n\x0d\n    // By default\x2C `this.#loaders` contains just the Node default load hook\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user-provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve = ObjectAssign(\x0d\n        ObjectCreate(null)\x2C\x0d\n        importAssertions\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        responseURL\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\x0d\n   *  A collection of module export(s) or a list of collections of module\x0d\n   *  export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    // For loaders\x2C `import` is passed multiple things to process\x2C it returns a\x0d\n    // list pairing the url and exports collected. This is especially useful for\x0d\n    // error messaging\x2C to identity from where an export came. But\x2C in most\x0d\n    // cases\x2C only a single url is being "imported" (ex `import()`)\x2C so there is\x0d\n    // only 1 possible url from which the exports were collected and it is\x0d\n    // already known to the caller. Nesting that in a list would only ever\x0d\n    // create redundant work for the caller\x2C so it is later popped off the\x0d\n    // internal list.\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) { specifiers = [specifiers]; }\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const namespace = ObjectCreate(null);\x0d\n      namespace.url = specifiers[i];\x0d\n      namespace.exports = namespaces[i];\x0d\n\x0d\n      namespaces[i] = namespace;\x0d\n    }\x0d\n\x0d\n    return namespaces;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const chain = this.#loaders;\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'load'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C { 0: nextUrl\x2C 1: ctx }) => {\x0d\n      if (typeof nextUrl !== 'string') {\x0d\n        // non-strings can be coerced to a url string\x0d\n        // validateString() throws a less-specific error\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          `${hookErrIdentifier} url`\x2C\x0d\n          'a url string'\x2C\x0d\n          nextUrl\x2C\x0d\n        );\x0d\n      }\x0d\n\x0d\n      // Try to avoid expensive URL instantiation for known-good urls\x0d\n      if (!this.moduleMap.has(nextUrl)) {\x0d\n        try {\x0d\n          new URL(nextUrl);\x0d\n        } catch {\x0d\n          throw new ERR_INVALID_ARG_VALUE(\x0d\n            `${hookErrIdentifier} url`\x2C\x0d\n            nextUrl\x2C\x0d\n            'should be a url string'\x2C\x0d\n          );\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextLoad = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const loaded = await nextLoad(url\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C loaded);\x0d\n\x0d\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n    let responseURL = loaded.responseURL;\x0d\n\x0d\n    if (responseURL === undefined) {\x0d\n      responseURL = url;\x0d\n    }\x0d\n\x0d\n    let responseURLObj;\x0d\n    if (typeof responseURL === 'string') {\x0d\n      try {\x0d\n        responseURLObj = new URL(responseURL);\x0d\n      } catch {\x0d\n        // responseURLObj not defined will throw in next branch.\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (responseURLObj?.href !== responseURL) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'undefined or a fully resolved URL string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'responseURL'\x2C\x0d\n        responseURL\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') { // [2]\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) {\x0d\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'source'\x2C\x0d\n        source\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      responseURL\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    for (let i = this.#globalPreloaders.length - 1; i >= 0; i--) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const {\x0d\n        fn: preloader\x2C\x0d\n        url: specifier\x2C\x0d\n      } = this.#globalPreloaders[i];\x0d\n\x0d\n      const preload = preloader({\x0d\n        port: insideLoader\x2C\x0d\n      });\x0d\n\x0d\n      if (preload == null) { return; }\x0d\n\x0d\n      const hookErrIdentifier = `${specifier} globalPreload`;\x0d\n\x0d\n      if (typeof preload !== 'string') { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'a string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName) &&\x0d\n                NativeModule.canBeRequiredWithoutScheme(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'parentURL'\x2C\x0d\n        ['string'\x2C 'URL']\x2C\x0d\n        parentURL\x2C\x0d\n      );\x0d\n    }\x0d\n    const chain = this.#resolvers;\x0d\n    const context = {\x0d\n      conditions: DEFAULT_CONDITIONS\x2C\x0d\n      importAssertions\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'resolve'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C { 0: suppliedSpecifier\x2C 1: ctx }) => {\x0d\n      validateString(\x0d\n        suppliedSpecifier\x2C\x0d\n        `${hookErrIdentifier} specifier`\x2C\x0d\n      ); // non-strings can be coerced to a url string\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextResolve = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const resolution = await nextResolve(originalSpecifier\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C resolution);\x0d\n\x0d\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string' // [2]\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') {\x0d\n      // non-strings can be coerced to a url string\x0d\n      // validateString() throws a less-specific error\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a url string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // Try to avoid expensive URL instantiation for known-good urls\x0d\n    if (!this.moduleMap.has(url)) {\x0d\n      try {\x0d\n        new URL(url);\x0d\n      } catch {\x0d\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n          'a url string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          'url'\x2C\x0d\n          url\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0xb9fe8ddf68,408,0,27430,C0O0C4O27430,,
tick,0x7ff6d8b32f59,842942,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Function,10,842985,0xb9fe8de888,730, node:internal/modules/esm/loader:1:1,0xb9fe8ddee0,~
code-source-info,0xb9fe8de888,408,0,27430,C0O0C149O82C155O82C159O136C165O146C171O163C177O186C183O209C189O235C195O261C201O278C207O295C213O320C218O345C224O360C230O377C236O401C242O423C248O439C254O464C260O495C266O553C272O553C277O534C283O807C289O807C294O833C299O598C305O630C311O657C317O682C323O708C329O746C335O775C341O888C347O888C352O850C358O865C364O880C370O950C376O950C381O922C387O1033C393O1033C398O988C404O1009C410O1117C416O1117C421O1077C427O1096C433O1168C439O1168C443O1168C445O1231C451O1231C455O1231C457O1333C463O1333C468O1289C474O1308C480O1412C486O1412C491O1386C497O1493C503O1493C508O1477C514O1556C520O1556C525O1540C531O1633C537O1633C542O1614C548O2340C549O2340C710O27377C717O27346C722O27398C724O27416C729O27429,,
code-creation,Function,10,843193,0xb9fe8dee20,145,<instance_members_initializer> node:internal/modules/esm/loader:191:1,0xb9fe8de388,~
code-source-info,0xb9fe8dee20,408,6113,27342,C3O6360C12O6535C28O6555C49O6805C65O6825C86O6934C96O7033C103O7033C112O7156C117O7248C124O7248C133O7376C144O27342,,
tick,0x7ff6d8187110,843310,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Eval,10,843802,0xb9fe8e10f0,5, node:internal/modules/esm/module_map:1:1,0xb9fe8e0ef0,~
script-source,409,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0xb9fe8e10f0,409,0,1487,C0O0C4O1487,,
code-creation,Function,10,844267,0xb9fe8e1528,175, node:internal/modules/esm/module_map:1:1,0xb9fe8e1068,~
code-source-info,0xb9fe8e1528,409,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
tick,0x7fffad96d1c4,844354,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8dea3f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Eval,10,844957,0xb9fe8e2040,5, node:internal/modules/esm/module_job:1:1,0xb9fe8e1d78,~
script-source,410,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafePromiseAll\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await SafePromiseAll(promises);\x0d\n\x0d\n      return SafePromiseAll(dependencyJobs);\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return SafePromiseAll(dependencyJobs\x2C addJobsToDependencyGraph);\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\x0d\n          /:\\d+$/\x2C\x0d\n          splitStack[0]\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = RegExpPrototypeExec(\x0d\n          /module '(.*)' does not provide an export named '(.+)'/\x2C\x0d\n          e.message);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/\x2C importStatement);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g\x2C oneLineNamedImports\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) !== null &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0xb9fe8e2040,410,0,8281,C0O0C4O8281,,
code-creation,Function,10,846078,0xb9fe8e2520,316, node:internal/modules/esm/module_job:1:1,0xb9fe8e1fb8,~
code-source-info,0xb9fe8e2520,410,0,8281,C0O0C79O28C85O51C91O74C97O97C102O119C108O136C113O161C118O180C124O206C130O223C136O247C142O280C148O299C154O311C160O339C166O364C172O435C178O435C183O420C189O501C195O501C200O478C206O566C212O566C217O539C223O631C229O631C233O631C235O684C238O684C240O718C242O718C244O761C245O761C247O793C251O793C253O918C257O918C296O8233C303O8202C308O8252C310O8267C315O8280,,
tick,0x7ff6d8204ea3,846324,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8e1542,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dea3f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Eval,10,846895,0xb9fe8e4118,5, node:internal/modules/esm/assert:1:1,0xb9fe8e3f20,~
script-source,411,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8e4118,411,0,3734,C0O0C4O3734,,
code-creation,Function,10,847465,0xb9fe8e43f0,201, node:internal/modules/esm/assert:1:1,0xb9fe8e4090,~
code-source-info,0xb9fe8e43f0,411,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,847758,0xb9fe8e4a08,9, node:internal/modules/esm/assert:43:3,0xb9fe8e41e8,~
code-source-info,0xb9fe8e4a08,411,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
tick,0x7ff6d8d7f75b,848251,1,0x7ff6d82c7c30,2,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8dea57,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Eval,10,849720,0xb9fe8e74d8,5, node:internal/modules/esm/resolve:1:1,0xb9fe8e6020,~
script-source,412,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ` +\x0d\n    `"exports" field module resolution of the package at ${pjsonPath}${\x0d\n      base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null)\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\x0d\n    const request = pattern ?\x0d\n      StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\x0d\n    throwInvalidSubpath(request\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      // When this reaches EOL\x2C this can throw at the top of the whole function:\x0d\n      //\x0d\n      // if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n      //   throwInvalidSubpath(packageSubpath)\x0d\n      //\x0d\n      // To match "imports" and the spec.\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      true\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/') ||\x0d\n      StringPrototypeEndsWith(name\x2C '/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*')) {\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolveResult != null) {\x0d\n          return resolveResult;\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const resolveResult = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                                     bestMatchSubpath\x2C\x0d\n                                                     bestMatch\x2C base\x2C true\x2C\x0d\n                                                     true\x2C conditions);\x0d\n          if (resolveResult != null) {\x0d\n            return resolveResult;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {resolved: URL\x2C format? : string}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n    return new URL('node:' + specifier);\x0d\n  }\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {url: URL\x2C format?: string}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    resolved = packageImportsResolve(specifier\x2C base\x2C conditions);\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:') {\x0d\n    return resolved;\x0d\n  }\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parsedParentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier) &&\x0d\n          NativeModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parsedParentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parsedParentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(\x0d\n      specifier\x2C\x0d\n      parentURL\x2C\x0d\n      conditions\x2C\x0d\n      isMain ? preserveSymlinksMain : preserveSymlinks\x0d\n    );\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0xb9fe8e74d8,412,0,40718,C0O0C4O40718,,
code-creation,Function,10,856125,0xb9fe8e85a8,1164, node:internal/modules/esm/resolve:1:1,0xb9fe8e7450,~
code-source-info,0xb9fe8e85a
code-creation,Eval,10,859184,0xb9fe8ebe68,5, node:internal/modules/esm/get_format:1:1,0xb9fe8ebbe0,~
script-source,413,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8ebe68,413,0,4323,C0O0C4O4323,,
code-creation,Function,10,859832,0xb9fe8ec2e8,368, node:internal/modules/esm/get_format:1:1,0xb9fe8ebde0,~
code-source-info,0xb9fe8ec2e8,413,0,4323,C0O0C90O26C96O50C101O67C106O84C112O118C118O143C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4221C344O4243C350O4264C356O4298C362O4236C367O4322,,
tick,0x7ff6d8197f34,861385,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8dea57,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7ff6d820e638,861473,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8dea57,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Eval,10,862157,0xb9fe8ed150,5, node:internal/modules/esm/fetch_module:1:1,0xb9fe8ece68,~
script-source,414,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: { concat: BufferConcat }\x2C\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\nconst { once } = require('events');\x0d\nconst { compose } = require('stream');\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * It caches either the promise or the cache entry since import.meta.url needs\x0d\n * the value synchronously for the response location after all redirects.\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Redirection status code as per section 6.4 of RFC 7231:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7231#section-6.4\x0d\n * and RFC 7238:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7238\x0d\n * @param {number} statusCode\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isRedirect(statusCode) {\x0d\n  switch (statusCode) {\x0d\n    case 300: // Multiple Choices\x0d\n    case 301: // Moved Permanently\x0d\n    case 302: // Found\x0d\n    case 303: // See Other\x0d\n    case 307: // Temporary Redirect\x0d\n    case 308: // Permanent Redirect\x0d\n      return true;\x0d\n    default:\x0d\n      return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = (async () => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: { Accept: '*/*' }\x2C\x0d\n    });\x0d\n    // Note that `once` is used here to handle `error` and that it hits the\x0d\n    // `finally` on network error/timeout.\x0d\n    const { 0: res } = await once(req\x2C 'response');\x0d\n    try {\x0d\n      const hasLocation = ObjectPrototypeHasOwnProperty(res.headers\x2C 'location');\x0d\n      if (isRedirect(res.statusCode) && hasLocation) {\x0d\n        const location = new URL(res.headers.location\x2C parsed);\x0d\n        if (location.protocol !== 'http:' && location.protocol !== 'https:') {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            res.headers.location\x2C\x0d\n            parsed.href\x2C\x0d\n            'cannot redirect to non-network location'\x0d\n          );\x0d\n        }\x0d\n        const entry = await fetchWithRedirects(location);\x0d\n        cacheForGET.set(parsed.href\x2C entry);\x0d\n        return entry;\x0d\n      }\x0d\n      if (res.statusCode === 404) {\x0d\n        const err = new ERR_MODULE_NOT_FOUND(parsed.href\x2C null);\x0d\n        err.message = `Cannot find module '${parsed.href}'\x2C HTTP 404`;\x0d\n        throw err;\x0d\n      }\x0d\n      // This condition catches all unsupported status codes\x2C including\x0d\n      // 3xx redirection codes without `Location` HTTP header.\x0d\n      if (res.statusCode < 200 || res.statusCode >= 300) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          res.headers.location\x2C\x0d\n          parsed.href\x2C\x0d\n          'cannot redirect to non-network location');\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        throw new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          "the 'Content-Type' header is required"\x0d\n        );\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x2C\x0d\n        }\x2C\x0d\n        body: (async () => {\x0d\n          let bodyStream = res;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = compose(res\x2C createBrotliDecompress());\x0d\n          } else if (\x0d\n            res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate'\x0d\n          ) {\x0d\n            bodyStream = compose(res\x2C createUnzip());\x0d\n          }\x0d\n          const buffers = await bodyStream.toArray();\x0d\n          const body = BufferConcat(buffers);\x0d\n          entry.body = body;\x0d\n          return body;\x0d\n        })()\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      await entry.body;\x0d\n      return entry;\x0d\n    } finally {\x0d\n      req.destroy();\x0d\n    }\x0d\n  })();\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n      StringPrototypeEndsWith(hostname\x2C ']')\x0d\n    ) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8ed150,414,0,8018,C0O0C4O8018,,
code-creation,Function,10,863840,0xb9fe8ed608,355, node:internal/modules/esm/fetch_module:1:1,0xb9fe8ed0c8,~
code-source-info,0xb9fe8ed608,414,0,8018,C0O0C113O26C119O60C125O85C130O97C136O125C142O150C148O246C154O246C159O246C164O225C170O374C176O374C181O400C186O277C192O311C198O347C204O425C210O425C215O417C221O463C227O463C232O497C238O497C243O488C249O537C255O537C260O525C266O1131C268O1131C273O1131C275O1429C276O1429C278O1669C279O1669C281O2066C282O2066C284O6093C289O6085C294O6085C296O6107C299O6117C310O6117C316O6145C319O6155C330O6155C336O7978C343O8000C349O7993C354O8017,,
code-creation,LazyCompile,10,864375,0xb9fe8ee318,37,get BlockList node:net:1920:16,0x167f8a5ec08,~
code-source-info,0xb9fe8ee318,395,53512,53604,C0O53522C14O53536C19O53565C26O53532C32O53582C36O53599,,
code-creation,Eval,10,864790,0xb9fe8ee7e8,5, node:internal/blocklist:1:1,0xb9fe8ee600,~
script-source,415,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8ee7e8,415,0,4043,C0O0C4O4043,,
code-creation,Function,10,865409,0xb9fe8ef1f0,359, node:internal/blocklist:1:1,0xb9fe8ee760,~
code-source-info,0xb9fe8ef1f0,415,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,866087,0xb9fe8f0ac8,5, node:internal/socketaddress:1:1,0xb9fe8f08d0,~
script-source,416,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8f0ac8,416,0,3363,C0O0C4O3363,,
code-creation,Function,10,866649,0xb9fe8f15f0,366, node:internal/socketaddress:1:1,0xb9fe8f0a40,~
code-source-info,0xb9fe8f15f0,416,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,867084,0xb9fe8f2218,72,BlockList node:internal/blocklist:40:14,0xb9fe8ee818,~
code-source-info,0xb9fe8f2218,415,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,867299,0xb9fe8f29b8,115,addAddress node:internal/blocklist:60:13,0xb9fe8ee8b8,~
code-source-info,0xb9fe8f29b8,415,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,867468,0xb9fe8f2b38,20,isSocketAddress node:internal/socketaddress:43:25,0xb9fe8f0b48,~
code-source-info,0xb9fe8f2b38,416,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,867660,0xb9fe8f32c8,323,SocketAddress node:internal/socketaddress:47:14,0xb9fe8f0af8,~
code-source-info,0xb9fe8f32c8,416,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,867931,0xb9fe8f35f0,112, node:internal/validators:164:3,0x29c5437d360,~
code-source-info,0xb9fe8f35f0,22,4877,5436,C0O4929C11O4929C17O5016C28O5016C34O5101C45O5101C51O5164C59O5212C63O5226C66O5226C80O5303C88O5370C104O5376C109O5370C111O5435,,
code-creation,LazyCompile,10,868056,0xb9fe8f3778,27,getOwnPropertyValueOrDefault node:internal/validators:148:38,0x29c5437d310,~
code-source-info,0xb9fe8f3778,22,4505,4653,C0O4539C7O4566C10O4566C23O4644C26O4650,,
code-creation,LazyCompile,10,868185,0xb9fe8f38c0,129,validatePort node:internal/validators:220:22,0x29c5437d4f0,~
code-source-info,0xb9fe8f38c0,22,6952,7319,C24O6997C44O7095C47O7095C52O7120C58O7128C65O7145C70O7156C72O7162C75O7151C86O7184C92O7209C99O7219C101O7238C117O7244C122O7238C123O7300C125O7312C128O7316,,
code-creation,LazyCompile,10,868334,0xb9fe8f3af8,132, node:internal/validators:99:40,0x29c5437d130,~
code-source-info,0xb9fe8f3af8,22,2875,3312,C0O2907C6O2945C22O2951C27O2945C28O3008C33O3013C39O3044C55O3050C60O3044C61O3119C71O3181C74O3199C76O3209C83O3224C88O3238C98O3277C111O3290C124O3244C129O3238C131O3311,,
code-creation,LazyCompile,10,868565,0xb9fe8f3dd0,229,addRange node:internal/blocklist:72:11,0xb9fe8ee908,~
code-source-info,0xb9fe8f3dd0,415,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,868942,0xb9fe8f43a8,5, node:internal/modules/esm/formats:1:1,0xb9fe8f4230,~
script-source,417,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeExec(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    ) !== null\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8f43a8,417,0,1256,C0O0C4O1256,,
code-creation,Function,10,869204,0xb9fe8f4660,120, node:internal/modules/esm/formats:1:1,0xb9fe8f4320,~
code-source-info,0xb9fe8f4660,417,0,1256,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1134C90O1156C96O1179C102O1208C108O1237C114O1149C119O1255,,
code-creation,Eval,10,869682,0xb9fe8f4df0,5, node:internal/modules/esm/initialize_import_meta:1:1,0xb9fe8f4c58,~
script-source,418,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const { url } = context;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0xb9fe8f4df0,418,0,1021,C0O0C4O1021,,
code-creation,Function,10,869909,0xb9fe8f4fb8,90, node:internal/modules/esm/initialize_import_meta:1:1,0xb9fe8f4d68,~
code-source-info,0xb9fe8f4fb8,418,0,1021,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O973C78O995C84O988C89O1020,,
code-creation,Eval,10,870307,0xb9fe8f5630,5, node:internal/modules/esm/load:1:1,0xb9fe8f53f8,~
script-source,419,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst { readFile: readFileAsync } = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function getSource(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  let responseURL = url;\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n    responseURL = res.resolvedHREF;\x0d\n  } else {\x0d\n    const supportedSchemes = ['file'\x2C 'data'];\x0d\n    if (experimentalNetworkImports) {\x0d\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\x0d\n    }\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C supportedSchemes);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return { responseURL\x2C source };\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let responseURL = url;\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    ({ responseURL\x2C source } = await getSource(url\x2C context));\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    responseURL\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8f5630,419,0,2849,C0O0C4O2849,,
code-creation,Function,10,870722,0xb9fe8f5870,263, node:internal/modules/esm/load:1:1,0xb9fe8f55a8,~
code-source-info,0xb9fe8f5870,419,0,2849,C0O0C58O28C64O51C70O75C76O145C79O145C84O124C90O221C93O221C98O198C104O289C107O289C112O270C117O343C120O343C125O327C131O459C134O459C143O504C150O459C152O589C155O589C159O589C161O683C164O683C169O683C174O666C180O741C183O741C188O772C193O723C199O799C202O799C207O791C213O893C216O893C221O919C226O836C232O856C238O955C242O955C244O2809C251O2831C257O2824C262O2848,,
code-creation,Eval,10,873011,0xb9fe8f7ce8,5, node:internal/fs/promises:1:1,0xb9fe8f67d8,~
script-source,420,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromiseReject\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = constants;\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_STATE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  lazyDOMException\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\nconst kLocked = Symbol('kLocked');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst {\x0d\n  newReadableStreamFromStreamBase\x2C\x0d\n} = require('internal/webstreams/adapters');\x0d\n\x0d\nconst {\x0d\n  readableStreamCancel\x2C\x0d\n} = require('internal/webstreams/readablestream');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('../webstreams/readablestream').ReadableStream\x0d\n   * } ReadableStream\x0d\n   * @returns {ReadableStream}\x0d\n   */\x0d\n  readableWebStream() {\x0d\n    if (this[kFd] === -1)\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is closed');\x0d\n    if (this[kClosePromise])\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is closing');\x0d\n    if (this[kLocked])\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is locked');\x0d\n    this[kLocked] = true;\x0d\n\x0d\n    const readable = newReadableStreamFromStreamBase(\x0d\n      this[kHandle]\x2C\x0d\n      undefined\x2C\x0d\n      { ondone: () => this[kUnref]() });\x0d\n\x0d\n    this[kRef]();\x0d\n    this.once('close'\x2C () => {\x0d\n      readableStreamCancel(readable);\x0d\n    });\x0d\n\x0d\n    return readable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function handleFdClose(fileOpPromise\x2C closeFunc) {\x0d\n  return PromisePrototypeThen(\x0d\n    fileOpPromise\x2C\x0d\n    (result) => PromisePrototypeThen(closeFunc()\x2C () => result)\x2C\x0d\n    (opError) =>\x0d\n      PromisePrototypeThen(\x0d\n        closeFunc()\x2C\x0d\n        () => PromiseReject(opError)\x2C\x0d\n        (closeError) => PromiseReject(aggregateTwoErrors(closeError\x2C opError))\x0d\n      )\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrParams;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    // This is fh.read(params)\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = bufferOrParams ?? kEmptyObject);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset !== null && typeof offset === 'object') {\x0d\n    // This is fh.read(buffer\x2C options)\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offset);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return handleFdClose(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || kEmptyObject;\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return handleFdClose(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validatePrimitiveStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return handleFdClose(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return handleFdClose(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n    constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0xb9fe8f7ce8,420,0,25598,C0O0C4O25598,,
code-creation,Function,10,881333,0xb9fe8fa528,1812, node:internal/fs/promises:1:1,0xb9fe8f7c60,~
code-source-info,0xb9fe8fa
tick,0x7ff6d8b6d107,881895,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8ec394,0x1b7d8db631f,0x7ff658f84361,0xb9fe8e8a09,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dea57,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7ff6d820e720,881946,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8f5927,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dea7f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7ff6d9398e20,881988,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8f5927,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dea7f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7ff6d938fab5,882028,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8f5927,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dea7f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Function,10,882089,0xb9fe8faf98,19,<instance_members_initializer> node:internal/fs/promises:130:1,0xb9fe8f9360,~
code-source-info,0xb9fe8faf98,420,3159,8048,C0O3159C9O4751C18O8048,,
code-creation,Eval,10,883105,0xb9fe8fdcf0,5, node:internal/fs/rimraf:1:1,0xb9fe8fd988,~
script-source,421,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      } else if (err.code === 'ENOENT') {\x0d\n        // The file is already gone.\x0d\n        return;\x0d\n      } else if (i === tries) {\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR') {\x0d\n      throw originalErr || err;\x0d\n    }\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          } else if (err.code === 'ENOENT') {\x0d\n            // The file is already gone.\x0d\n            return;\x0d\n          } else if (i === tries) {\x0d\n            throw err;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    throw originalErr || err;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0xb9fe8fdcf0,421,0,7763,C0O0C4O7763,,
code-creation,Function,10,884285,0xb9fe8fe2f0,409, node:internal/fs/rimraf:1:1,0xb9fe8fdc68,~
code-source-info,0xb9fe8fe2f0,421,0,7763,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7705C385O7724C391O7732C397O7748C403O7720C408O7762,,
new,MemoryChunk,0x13111200000,262144
code-creation,LazyCompile,10,884982,0xb9fe8ff1f8,188,from node:buffer:301:28,0x20182dafb58,~
script-source,30,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  if (len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (encoding) {\x0d\n    const ops = getEncodingOps(encoding);\x0d\n    if (ops) {\x0d\n      return ops.byteLength(string);\x0d\n    }\x0d\n  }\x0d\n  return byteLengthUtf8(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n\x0d\n  input = `${input}`;\x0d\n  let nonAsciiWhitespaceCharCount = 0;\x0d\n\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    const index = ArrayPrototypeIndexOf(\x0d\n      kForgivingBase64AllowedChars\x2C\x0d\n      StringPrototypeCharCodeAt(input\x2C n));\x0d\n\x0d\n    if (index > 4) {\x0d\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\x0d\n      // ASCII whitespace char codes.\x0d\n      nonAsciiWhitespaceCharCount++;\x0d\n    } else if (index === -1) {\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (nonAsciiWhitespaceCharCount % 4 === 1) {\x0d\n    throw lazyDOMException(\x0d\n      'The string to be decoded is not correctly encoded.'\x2C\x0d\n      'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xb9fe8ff1f8,30,8845,9828,C3O8884C9O8920C12O8927C17O8963C18O8969C28O9025C33O9029C39O9061C51O9068C56O9117C57O9147C63O9164C68O9164C73O9180C78O9220C95O9313C104O9320C109O9360C110O9385C113O9385C118O9409C120O9423C122O9432C123O9440C125O9457C127O9456C134O9519C136O9525C138O9524C145O9543C151O9562C155O9608C158O9615C163O9655C164O9682C182O9688C187O9682,,
code-creation,LazyCompile,10,891531,0x13111203b70,110,fromString node:buffer:437:20,0x20182dafec8,~
code-source-info,0x13111203b70,30,13032,13481,C0O13060C2O13068C8O13113C14O13120C19O13145C25O13152C30O13166C35O13173C40O13190C41O13196C46O13214C51O13225C56O13264C59O13270C64O13301C66O13331C73O13337C78O13331C79O13389C85O13396C90O13410C95O13417C100O13434C101O13443C104O13450C109O13478,,
code-creation,LazyCompile,10,891793,0x13111203d28,177,fromStringFast node:buffer:418:24,0x20182dafe28,~
code-source-info,0x13111203d28,30,12469,13009,C0O12507C5O12507C11O12532C14O12554C18O12563C21O12543C26O12576C31O12612C36O12583C41O12625C42O12631C44O12645C49O12656C51O12654C54O12642C59O12674C62O12674C65O12699C72O12714C77O12725C85O12699C91O12768C110O12768C116O12800C118O12811C123O12897C130O12916C135O12927C143O12901C149O12956C156O12970C162O12967C168O12981C171O12981C174O12997C176O13006,,
code-creation,LazyCompile,10,891963,0x13111203f18,36,FastBuffer node:internal/buffer:958:14,0x20182dbcce0,~
code-source-info,0x13111203f18,31,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,892057,0x13111204018,23,write node:buffer:598:12,0x20182db01e8,~
code-source-info,0x13111204018,30,17261,17325,C0O17295C17O17295C22O17325,,
code-creation,LazyCompile,10,892148,0x13111204108,42,alignPool node:buffer:163:19,0x20182daf8d8,~
code-source-info,0x13111204108,30,4280,4390,C0O4316C4O4331C9O4345C19O4356C25O4369C34O4379C41O4389,,
code-creation,LazyCompile,10,892411,0x131112044e8,251,promisify node:internal/util:324:19,0x29c5437a4e8,~
code-source-info,0x131112044e8,21,9196,10795,C0O9196C17O9260C25O9301C33O9325C38O9304C55O9363C68O9363C73O9408C80O9421C82O9420C87O9466C94O9475C96O9474C100O9509C110O9509C115O9563C126O9595C136O9661C143O9570C148O9728C149O9896C156O9905C158O9904C161O9896C163O10481C174O10506C180O10506C185O10481C190O10544C201O10569C211O10631C218O10544C223O10700C234O10745C240O10745C245O10707C250O10792,,
code-creation,LazyCompile,10,892781,0x13111204ac8,65,EventEmitterMixin node:internal/event_target:1015:27,0x31522b298e0,~
script-source,46,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kType = Symbol('type');\x0d\nconst kDetail = Symbol('detail');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  #cancelable = false;\x0d\n  #bubbles = false;\x0d\n  #composed = false;\x0d\n  #defaultPrevented = false;\x0d\n  #timestamp = now();\x0d\n  #propagationStopped = false;\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options');\x0d\n    const { bubbles\x2C cancelable\x2C composed } = options;\x0d\n    this.#cancelable = !!cancelable;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#composed = !!composed;\x0d\n\x0d\n    this[kType] = `${type}`;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this.#defaultPrevented\x2C\x0d\n      cancelable: this.#cancelable\x2C\x0d\n      timeStamp: this.#timestamp\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#defaultPrevented = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable && this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#timestamp;\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#bubbles;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#composed;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#propagationStopped;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#propagationStopped = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nfunction isCustomEvent(value) {\x0d\n  return isEvent(value) && (value?.[kDetail] !== undefined);\x0d\n}\x0d\n\x0d\nclass CustomEvent extends Event {\x0d\n  /**\x0d\n   * @constructor\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   *   detail?: any\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    super(type\x2C options);\x0d\n    this[kDetail] = options?.detail ?? null;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get detail() {\x0d\n    if (!isCustomEvent(this))\x0d\n      throw new ERR_INVALID_THIS('CustomEvent');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CustomEvent.prototype\x2C {\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CustomEvent'\x2C\x0d\n  }\x2C\x0d\n  detail: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = async (...args) => {\x0d\n        if (listener.handleEvent)\x0d\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\x0d\n      };\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the validateListener check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!validateEventListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!validateEventListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction validateEventListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  if (typeof listener === 'object') {\x0d\n    // Require `handleEvent` lazily.\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return kEmptyObject;\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  CustomEvent\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x13111204ac8,46,27509,27943,C0O27562C23O27753C30O27785C33O27798C38O27753C43O27813C47O27847C52O27888C57O27847C62O27915C64O27940,,
new,MemoryChunk,0x27c82700000,262144
code-creation,Eval,10,897493,0x13111207670,5, node:internal/modules/esm/translators:1:1,0x13111207208,~
script-source,422,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x13111207670,422,0,11113,C0O0C4O11113,,
code-creation,Function,10,898939,0x13111207e18,715, node:internal/modules/esm/translators:1:1,0x131112075e8,~
code-source-info,0x13111207e18,422,0,11113,C0O0C180O28C186O54C192O76C198O88C204O102C210O127C216O161C222O176C228O198C233O210C239O222C245O249C251O274C257O304C268O343C274O392C275O392C277O543C283O543C288O526C294O591C300O591C305O567C311O576C317O673C323O673C328O620C334O637C340O658C346O767C352O767C357O734C363O748C369O834C375O834C379O834C381O888C387O888C391O888C393O979C399O979C404O956C410O971C416O1008C422O1008C427O1041C440O1042C446O1008C448O1125C454O1125C459O1097C465O1233C471O1233C476O1259C481O1163C487O1194C493O1300C499O1300C504O1276C510O1369C513O1369C517O1369C519O1425C522O1410C528O1455C534O1455C538O1455C540O1524C546O1524C551O1504C557O1586C563O1586C568O1570C574O1623C575O1623C577O2069C579O2069C585O2085C587O2105C591O2121C593O2144C597O2179C598O2179C600O3217C613O3217C619O4497C626O4506C629O4489C631O4540C635O4540C637O4560C650O4560C656O7758C669O7758C675O8220C688O8220C694O10224C707O10224C714O11112,,
code-creation,Eval,10,899637,0x13111209328,5, node:internal/modules/esm/create_dynamic_module:1:1,0x13111209150,~
script-source,423,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x13111209328,423,0,1828,C0O0C4O1828,,
code-creation,Function,10,899986,0x13111209550,111, node:internal/modules/esm/create_dynamic_module:1:1,0x131112092a0,~
code-source-info,0x13111209550,423,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
tick,0x7fffad8ffab3,900173,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8fa81a,0x1b7d8db631f,0x7ff658f84361,0xb9fe8f5927,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dea7f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7ff6d88418eb,900233,0,0x0,3,0x7ff6d893c890,0xb9fe8fe463,0x1b7d8db631f,0x7ff658f84361,0xb9fe8fa81a,0x1b7d8db631f,0x7ff658f84361,0xb9fe8f5927,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dea7f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8dc949,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
tick,0x7ff6d89c9ac8,900797,1,0x7ff6d82c7c30,2,0x7ff6d8d6aa80,0x1b7d8db62fe,0x7ff658f84361,0xb9fe8dc97c,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d807f,0x1b7d8db631f,0x7ff658f84361,0xb9fe8d307e,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Eval,10,901280,0x1311120a488,5, node:internal/vm/module:1:1,0x13111209f10,~
script-source,424,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafePromiseAll\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  getConstructorOf\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINK_FAILURE\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = kEmptyObject) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = kEmptyObject) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await SafePromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x1311120a488,424,0,12831,C0O0C4O12831,,
code-creation,Function,10,903154,0x1311120b6f0,881, node:internal/vm/module:1:1,0x1311120a400,~
code-source-info,0x1311120b6f
code-creation,Function,10,903411,0x1311120bc40,23,<instance_members_initializer> node:internal/vm/module:258:1,0x1311120aa70,~
code-source-info,0x1311120bc40,424,7086,10672,C3O7138C17O7151C22O10672,,
code-creation,LazyCompile,10,903955,0x1311120d1a8,161,ESMLoader node:internal/modules/esm/loader:248:14,0xb9fe8de068,~
code-source-info,0x1311120d1a8,408,7405,8028,C5O7405C23O7415C33O7419C38O7458C44O7466C49O7480C59O7480C63O7539C73O7543C79O7602C89O7602C93O7658C105O7715C111O7715C118O7769C123O7796C128O7804C139O7804C145O7975C151O8009C160O8027,,
code-creation,LazyCompile,10,904140,0x1311120f020,27,ModuleMap node:internal/modules/esm/module_map:17:14,0xb9fe8e1170,~
code-source-info,0x1311120f020,409,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,904259,0x1311120f2c0,13,desc.value node:internal/per_context/primordials:340:32,0x29c543474d0,~
code-source-info,0x1311120f2c0,12,10212,10273,C0O10230C7O10237C12O10260,,
code-creation,LazyCompile,10,904337,0x1311120f3c0,13,SafeIterator node:internal/per_context/primordials:285:16,0x29c54346fe8,~
code-source-info,0x1311120f3c0,12,8422,8484,C0O8442C3O8459C7O8457C12O8483,,
code-creation,LazyCompile,10,904425,0x1311120f4f0,13,next node:internal/per_context/primordials:288:9,0x29c54347088,~
code-source-info,0x1311120f4f0,12,8494,8541,C0O8506C3O8523C8O8513C12O8534,,
code-creation,LazyCompile,10,904506,0x1311120f5e0,19,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x29c5434ce50,~
code-source-info,0x1311120f5e0,15,8028,8081,C0O8040C7O8068C12O8068C18O8076,,
code-creation,LazyCompile,10,905319,0x1311120f818,32, node:internal/modules/cjs/loader:192:41,0xb9fe8d64c0,~
code-source-info,0x1311120f818,405,6005,6031,C0O6013C9O6014C21O6026C31O6031,,
code-creation,LazyCompile,10,906567,0x131112122e8,19,getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34,0x29c5434cea0,~
code-source-info,0x131112122e8,15,8118,8171,C0O8128C11O8145C14O8135C18O8166,,
code-creation,LazyCompile,10,907467,0x13111212430,26, node:internal/modules/cjs/loader:194:49,0xb9fe8d6510,~
code-source-info,0x13111212430,405,6086,6133,C0O6111C5O6111C15O6123C20O6111C25O6133,,
code-creation,LazyCompile,10,908163,0x13111212b48,28,getEmbedderOptions node:internal/options:32:28,0x1b92a08a5b8,~
code-source-info,0x13111212b48,88,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,908482,0x13111212df0,315,Module._initPaths node:internal/modules/cjs/loader:1248:29,0xb9fe8d7020,~
code-source-info,0x13111212df
tick,0x7ff6d8e2212f,909074,0,0x0,0,0x7ff6d8e24073,0x7ff658f8424f,0xb9fe8d30ab,0x1b7d8db9bd8,0x1b7d8db52ef
code-creation,Eval,10,909249,0x131112134c0,5, node:internal/modules/run_main:1:1,0x13111213298,~
script-source,425,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  /**\x0d\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userLoaders = getOptionValue('--experimental-loader');\x0d\n  if (userLoaders.length > 0)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x131112134c0,425,0,2788,C0O0C4O2788,,
code-creation,Function,10,909606,0x131112137a8,178, node:internal/modules/run_main:1:1,0x13111213438,~
code-source-info,0x131112137a8,425,0,2788,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2716C160O2738C166O2764C172O2731C177O2787,,
code-creation,LazyCompile,10,910027,0x13111213dc0,163,initializeESMLoader node:internal/bootstrap/pre_execution:519:29,0x1b7d8db7b18,~
code-source-info,0x13111213dc0,389,16951,18066,C0O17035C6O17035C13O17084C16O17080C21O17078C25O17104C30O17108C34O17128C40O17157C41O17164C42O17269C48O17269C53O17183C58O17224C63O17316C69O17316C74O17520C79O17478C83O17591C88O17552C92O17761C100O17765C106O17884C112O17884C117O17832C122O17840C127O17858C132O17931C138O17931C143O17951C145O17961C149O17976C151O17996C155O18021C157O18040C162O18065,,
code-creation,LazyCompile,10,910265,0x13111213fd8,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0xb9fe8d6470,~
code-source-info,0x13111213fd8,405,2368,2408,C0O2373C4O2406,,
code-creation,LazyCompile,10,910409,0x131112140c0,53,loadPreloadModules node:internal/bootstrap/pre_execution:562:28,0x1b7d8db7c08,~
code-source-info,0x131112140c0,389,18558,18889,C0O18647C8O18647C13O18679C15O18716C21O18723C26O18804C32O18804C37O18804C42O18769C47O18849C52O18888,,
code-creation,LazyCompile,10,910587,0x131112142b8,166,Module._preloadModules node:internal/modules/cjs/loader:1278:34,0xb9fe8d70b0,~
code-source-info,0x131112142b8,405,41291,41886,C0O41307C5O41312C11O41341C12O41348C13O41354C17O41367C23O41567C33O41567C42O41619C45O41641C53O41666C58O41666C63O41641C68O41632C85O41696C88O41702C95O41707C100O41730C106O41743C114O41759C116O41759C119O41796C121O41812C125O41801C130O41837C137O41853C141O41837C146O41821C151O41783C154O41862C158O41875C165O41885,,
tick,0x7fffad96d1c4,910752,0,0x0,3,0x7ff6d893c890,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,910848,0x131112144d0,94,Module node:internal/modules/cjs/loader:172:16,0xb9fe8d5dd0,~
code-source-info,0x131112144d0,405,5458,5704,C14O5481C16O5489C20O5498C22O5510C25O5515C30O5515C35O5508C39O5531C40O5544C44O5553C49O5571C54O5571C60O5593C71O5593C76O5633C77O5647C81O5658C82O5670C86O5682C88O5696C93O5703,,
code-creation,LazyCompile,10,911190,0x131112146c8,449,dirname node:path:653:10,0x351f86ef928,~
code-source-info,0x131112146c
code-creation,LazyCompile,10,911630,0x13111214ad8,45,updateChildren node:internal/modules/cjs/loader:165:24,0xb9fe8d5d80,~
code-source-info,0x13111214ad8,405,5216,5393,C0O5260C7O5266C15O5281C19O5299C23O5307C26O5307C33O5354C38O5354C44O5392,,
code-creation,LazyCompile,10,911862,0x13111214cc8,251,Module._nodeModulePaths node:internal/modules/cjs/loader:594:37,0xb9fe8d68c0,~
code-source-info,0x13111214cc
code-creation,Function,11,912168,0x7ff658f84400,2016,Module._nodeModulePaths node:internal/modules/cjs/loader:594:37,0xb9fe8d68c0,^
code-source-info,0x7ff658f84400,405,18110,19661,,,
code-creation,Function,11,912272,0x7ff658f84c80,1228,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0x29c5434cfe0,^
code-source-info,0x7ff658f84c80,15,10306,10889,,,
code-creation,Function,11,912337,0x7ff658f85200,536,internalBinding node:internal/bootstrap/loaders:171:45,0x29c5434cb50,^
code-source-info,0x7ff658f85200,15,5433,5678,,,
code-creation,Function,11,912405,0x7ff658f854c0,1292,deprecate node:internal/util:96:19,0x29c54379e88,^
code-source-info,0x7ff658f854c0,21,2496,3713,,,
code-creation,Function,11,912456,0x7ff658f85a80,412,getCLIOptionsFromBinding node:internal/options:18:34,0x1b92a08a440,^
code-source-info,0x7ff658f85a80,88,514,620,,,
code-creation,Function,11,912510,0x7ff658f85cc0,240,SafeMap node:internal/per_context/primordials:366:16,0x29c54347578,^
code-source-info,0x7ff658f85cc0,12,10966,10983,,,
code-creation,Function,11,912584,0x7ff658f85e40,100,next node:internal/per_context/primordials:288:9,0x29c54347088,^
code-source-info,0x7ff658f85e40,12,8494,8541,,,
tick,0x7ff6d8d29a70,912687,0,0x0,0,0x7ff6d8934790,0x13111214dbd,0x131112142f7,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,Function,11,912738,0x7ff658f85f40,180,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x29c5434ce50,^
code-source-info,0x7ff658f85f40,15,8028,8081,,,
code-creation,Function,11,912813,0x7ff658f86080,184, node:internal/modules/cjs/loader:192:41,0xb9fe8d64c0,^
code-source-info,0x7ff658f86080,405,6005,6031,,,
code-creation,Function,11,912872,0x7ff658f861c0,272,validateString node:internal/validators:114:24,0x29c5437d180,^
code-source-info,0x7ff658f861c0,22,3341,3453,,,
code-creation,Function,11,912928,0x7ff658f86380,392,isWindowsDeviceRoot node:path:60:29,0x351f86ef658,^
code-source-info,0x7ff658f86380,71,1991,2136,,,
code-creation,LazyCompile,10,913164,0x131112154b8,127,Module.require node:internal/modules/cjs/loader:1014:36,0xb9fe8d6cb0,~
code-source-info,0x131112154b8,405,32679,32982,C0O32689C8O32689C13O32718C15O32725C20O32740C36O32746C41O32740C42O32858C51O32870C60O32888C63O32902C76O32902C93O32959C102O32971C126O32981,,
code-creation,LazyCompile,10,913599,0x131112157b0,636,Module._load node:internal/modules/cjs/loader:771:24,0xb9fe8d6b10,~
code-source-info,0x131112157b
code-creation,LazyCompile,10,914027,0x13111215c68,89,logger node:internal/util/debuglog:95:18,0x20182d9a918,~
code-source-info,0x13111215c68,28,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,914161,0x13111215da8,3, node:internal/per_context/primordials:291:21,0x29c54347128,~
code-source-info,0x13111215da8,12,8563,8594,C0O8575C2O8587,,
code-creation,LazyCompile,10,914365,0x13111215e80,140,debug node:internal/util/debuglog:76:15,0x20182d9a878,~
code-source-info,0x13111215e80,28,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
tick,0x7fffad96d1c4,914603,0,0x0,3,0x7ff6d893c890,0x13111215cbb,0x131112157c7,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,914639,0x13111216030,41,init node:internal/util/debuglog:72:16,0x20182d9a828,~
code-source-info,0x13111216030,28,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,914714,0x13111216128,2,testEnabled node:internal/util/debuglog:32:19,0x167f8a4a190,~
code-source-info,0x13111216128,28,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,914852,0x131112162c8,116,debuglogImpl node:internal/util/debuglog:49:22,0x20182d9a6d8,~
code-source-info,0x131112162c8,28,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,914966,0x13111216480,10, node:internal/modules/cjs/loader:283:66,0xb9fe8d67e0,~
code-source-info,0x13111216480,405,8325,8352,C0O8338C2O8344C9O8351,,
code-creation,LazyCompile,10,915063,0x13111216538,2,noop node:internal/util/debuglog:47:14,0x20182d9a688,~
code-source-info,0x13111216538,28,1465,1473,C1O1472,,
code-creation,LazyCompile,10,915467,0x13111216980,922,Module._resolveFilename node:internal/modules/cjs/loader:865:35,0xb9fe8d6b98,~
code-source-info,0x
code-creation,LazyCompile,10,915921,0x13111216fd8,28,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x29c5434ce00,~
code-source-info,0x13111216fd8,15,7748,7847,C0O7772C5O7785C10O7789C15O7789C21O7803C23O7821C27O7842,,
code-creation,LazyCompile,10,916116,0x13111217298,344,Module._resolveLookupPaths node:internal/modules/cjs/loader:678:38,0xb9fe8d69e0,~
code-source-info,0x
code-creation,LazyCompile,10,916346,0x131112175b8,76,trySelfParentPath node:internal/modules/cjs/loader:438:27,0xb9fe8d60f0,~
code-source-info,0x131112175b8,405,13041,13316,C0O13055C4O13068C5O13081C6O13098C12O13129C16O13138C17O13160C24O13163C29O13186C36O13189C44O13233C47O13248C52O13248C59O13256C62O13261C66O13254C69O13265C72O13288C73O13301C75O13315,,
tick,0x7ff6d8b564c4,916563,0,0x0,3,0x7ff6d893c890,0x13111216c21,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,916607,0x131112177f8,232,trySelf node:internal/modules/cjs/loader:452:17,0xb9fe8d6140,~
code-source-info,0x131112177f8,405,13336,14185,C0O13363C4O13380C5O13393C6O13436C9O13436C17O13413C22O13424C27O13475C31O13491C37O13514C38O13527C39O13546C47O13565C48O13578C49O13588C51O13622C55O13614C60O13635C65O13662C70O13708C82O13666C89O13725C94O13743C97O13777C102O13782C107O13743C112O13741C118O13808C119O13821C123O13843C128O13872C133O13902C138O13924C142O13902C149O13967C152O13967C159O13994C168O13872C180O13850C185O14031C197O14054C200O14060C207O14065C212O14100C219O14144C223O14106C228O14100C229O14169C231O14169,,
code-creation,LazyCompile,10,916876,0x13111217aa8,129,readPackageScope node:internal/modules/cjs/loader:332:26,0xb9fe8d5f10,~
code-source-info,0x13111217aa8,405,9584,10117,C0O9628C7O9662C10O9628C16O9675C18O9704C25O9759C28O9721C34O9770C47O9782C54O9839C61O9878C66O9882C70O9843C77O9908C78O9921C79O9941C84O9965C86O9963C90O9941C95O9976C97O9987C104O10009C110O10029C116O10047C117O10075C119O10075C124O9694C127O10101C128O10114,,
code-creation,LazyCompile,10,917163,0x13111217e10,234,readPackage node:internal/modules/cjs/loader:301:21,0xb9fe8d5ec0,~
code-source-info,0x13111217e10,405,8736,9555,C0O8772C5O8777C13O8777C20O8837C25O8854C30O8854C36O8872C38O8900C40O8916C41O8937C46O8955C51O8955C57O8994C63O9007C72O9033C77O9044C79O9075C84O9092C91O9092C97O9119C98O9132C102O9169C107O9169C112O9208C117O9230C125O9256C133O9285C141O9317C149O9346C160O9364C165O9381C170O9381C176O9411C178O9427C190O9450C195O9457C199O9474C207O9503C213O9514C220O9525C224O9521C227O9484C231O9539C233O9539,,
code-creation,LazyCompile,10,917502,0x13111218120,199,read node:internal/modules/package_json_reader:16:14,0xb9fe8dbd70,~
code-source-info,0x13111218120,406,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,917787,0x13111218540,232,toNamespacedPath node:path:618:19,0x351f86ef8d8,~
code-source-info,0x13111218540,71,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,918669,0x13111219128,438,Module._findPath node:internal/modules/cjs/loader:505:28,0xb9fe8d6830,~
code-source-info,0x
code-creation,LazyCompile,10,919150,0x131112194d8,109,isAbsolute node:path:402:13,0x351f86ef7e8,~
code-source-info,0x131112194d8,71,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,919544,0x13111219768,85,stat node:internal/modules/cjs/loader:151:14,0xb9fe8d5d30,~
code-source-info,0x13111219768,405,4780,5189,C0O4796C5O4812C10O4812C17O4843C23O4889C28O4899C33O4899C39O4919C41O4945C43O4959C44O4983C49O4983C54O5016C61O5049C66O5131C71O5141C76O5141C82O5172C84O5186,,
code-creation,LazyCompile,10,919888,0x131112198c0,44,tryExtensions node:internal/modules/cjs/loader:411:23,0xb9fe8d6050,~
code-source-info,0x131112198c0,405,12245,12438,C0O12281C2O12293C6O12286C11O12330C16O12346C19O12340C23O12330C29O12367C31O12390C33O12406C34O12302C39O12268C42O12422C43O12435,,
code-creation,LazyCompile,10,920119,0x131112199f0,50,tryFile node:internal/modules/cjs/loader:395:17,0xb9fe8d5fb0,~
code-source-info,0x131112199f0,405,11805,12006,C0O11843C3O11843C8O11865C9O11872C14O11879C15O11886C16O11890C24O11915C26O11930C31O11942C36O11942C41O11963C42O11972C45O11979C49O12003,,
code-creation,LazyCompile,10,920386,0x13111219b40,42,toRealPath node:internal/modules/cjs/loader:404:20,0xb9fe8d6000,~
code-source-info,0x13111219b40,405,12029,12145,C0O12048C5O12058C10O12071C17O12092C20O12103C28O12122C35O12058C41O12142,,
tick,0x7fffad96d1c4,920613,0,0x0,3,0x7ff6d893c890,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,921079,0x1311121a340,1079,realpathSync node:fs:2474:22,0x217777995f0,~
script-source,73,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  deprecate\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nconst showStringCoercionDeprecation = deprecate(\x0d\n  () => {}\x2C\x0d\n  'Implicit coercion of objects with own toString property is deprecated.'\x2C\x0d\n  'DEP0162'\x0d\n);\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || kEmptyObject;\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  if (typeof buffer !== 'string') {\x0d\n    showStringCoercionDeprecation();\x0d\n  }\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    if (typeof data !== 'string') {\x0d\n      showStringCoercionDeprecation();\x0d\n    }\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    if (typeof data !== 'string') {\x0d\n      showStringCoercionDeprecation();\x0d\n    }\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x1311121a
code-creation,LazyCompile,10,934018,0x13111220c30,135,getOptions node:internal/fs/utils:319:20,0x217777b6228,~
script-source,77,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isDate\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() on the absolute value\x0d\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\n// Refs: https://github.com/nodejs/node/pull/43714\x0d\nfunction dateFromMs(ms) {\x0d\n  // Coercing to number\x2C ms can be bigint\x0d\n  return new Date(MathRound(Number(ms)));\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigInt64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigInt64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePrimitiveStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x13111220c30,77,7609,8235,C9O7636C16O7655C27O7716C29O7738C30O7749C36O7789C41O7834C43O7858C47O7874C54O7910C60O7950C78O7956C83O7950C84O8046C91O8055C96O8074C99O8097C104O8074C108O8125C114O8154C119O8182C127O8154C132O8217C134O8232,,
tick,0x7ff6d8187110,937526,0,0x0,3,0x7ff6d893c890,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d88418f3,937572,0,0x0,3,0x7ff6d893c890,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d9114c73,937611,0,0x0,3,0x7ff6d893c890,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7fffad8ffab3,937666,0,0x0,3,0x7ff6d893c890,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d9398e62,937715,0,0x0,3,0x7ff6d893c890,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d9398e18,937766,0,0x0,3,0x7ff6d893c890,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d9398e20,937813,0,0x0,3,0x7ff6d893c890,0x1311121a346,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d9398e66,937865,0,0x0,3,0x7ff6d893c890,0x1311121a346,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,937918,0x13111222c40,48,assertEncoding node:internal/fs/utils:156:24,0x217777b5d00,~
code-source-info,0x13111222c40,77,3755,3937,C0O3771C6O3788C9O3795C14O3795C21O3839C24O3867C40O3873C45O3867C47O3936,,
code-creation,LazyCompile,10,938555,0x13111222d58,20,toPathIfFileURL node:internal/url:1565:25,0x217777a8878,~
script-source,74,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = {};\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n\x0d\n            // Two different key may result same after `toUSVString()`\x2C we only\x0d\n            // leave the later one. Refers to WPT.\x0d\n            if (visited[typedKey] !== undefined) {\x0d\n              this[searchParams][visited[typedKey]] = typedValue;\x0d\n            } else {\x0d\n              visited[typedKey] = ArrayPrototypePush(this[searchParams]\x2C\x0d\n                                                     typedKey\x2C\x0d\n                                                     typedValue) - 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nfunction isURLThis(self) {\x0d\n  return (self !== undefined && self !== null && self[context] !== undefined);\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    if (!isURLThis(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { __proto__: null\x2C configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x13111222d58,74,45441,45566,C0O45462C3O45467C9O45502C11O45523C12O45527C15O45534C19O45563,,
tick,0x7ff6d9398ed4,944402,0,0x0,3,0x7ff6d893c890,0x1311121a352,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,944513,0x131112260b0,17,isURLInstance node:internal/url:1561:23,0x217777a8828,~
code-source-info,0x131112260b0,74,45314,45413,C0O45335C3O45356C6O45381C12O45403C16O45410,,
tick,0x7fffad96d1c4,944645,0,0x0,3,0x7ff6d893c890,0x1311121a352,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d81b9b1d,944679,0,0x0,3,0x7ff6d893c890,0x13111222d5b,0x1311121a352,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,944745,0x13111226218,81, node:internal/fs/utils:674:38,0x217777b6c28,~
code-source-info,0x13111226218,77,18996,19276,C14O19030C22O19063C25O19063C31O19090C36O19121C49O19096C54O19090C55O19189C68O19189C74O19228C76O19258C78O19258C80O19275,,
code-creation,LazyCompile,10,944946,0x13111226430,110, node:internal/fs/utils:361:35,0x217777b62c8,~
code-source-info,0x13111226430,77,8985,9594,C16O9050C21O9104C26O9104C31O9201C37O9224C41O9253C45O9270C51O9270C60O9322C64O9343C69O9343C76O9389C77O9396C78O9419C94O9419C100O9538C104O9561C106O9561C107O9580C109O9591,,
code-creation,LazyCompile,10,945125,0x131112265a8,16,isUint8Array node:internal/util/types:13:22,0x29c5437e448,~
script-source,23,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x131112265a8,23,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,945771,0x13111226a20,23,splitRoot node:fs:2426:33,0x217777994c8,~
code-source-info,0x13111226a20,73,67095,67161,C0O67108C9O67135C12O67115C19O67152C22O67156,,
code-creation,LazyCompile,10,946158,0x13111226b28,63,handleErrorFromBinding node:internal/fs/utils:344:32,0x217777b6278,~
code-source-info,0x13111226b28,77,8329,8840,C0O8348C6O8412C11O8412C16O8435C24O8435C29O8493C31O8493C32O8520C38O8752C43O8779C51O8752C56O8826C60O8816C62O8839,,
code-creation,LazyCompile,10,946319,0x13111226c88,53,nextPart node:fs:2452:31,0x217777995a0,~
code-source-info,0x13111226c88,73,67852,68103,C0O67879C4O67875C9O67912C14O67912C20O67996C22O68007C24O68003C31O68037C33O68033C38O68066C40O68075C41O67889C47O67866C50O68088C52O68098,,
tick,0x7fffad90e120,946489,1,0x7ff6d830fe50,6,0x7ff6d8d6aa80,0x1311121a570,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,946650,0x13111226dd0,34,isFileType node:fs:218:20,0x217777979e8,~
code-source-info,0x13111226dd0,73,5841,6089,C0O5978C2O5983C6O5991C10O6026C15O6033C20O6050C22O6065C24O6063C30O6073C33O6086,,
code-creation,Function,11,947280,0x7ff658f865c0,6232,resolve node:path:158:10,0x351f86ef748,^
code-source-info,0x7ff658f865c0,71,4875,9786,,,
code-creation,Function,11,947382,0x7ff658f87ec0,552,nextPart node:fs:2452:31,0x217777995a0,^
code-source-info,0x7ff658f87ec0,73,67852,68103,,,
code-creation,LazyCompile,10,948349,0x13111227688,72,encodeRealpathResult node:fs:2439:30,0x21777799550,~
code-source-info,0x13111227688,73,67441,67707,C0O67464C4O67489C10O67509C17O67518C22O67535C24O67549C25O67570C30O67577C35O67577C41O67606C48O67615C53O67636C55O67652C56O67677C61O67694C66O67677C71O67704,,
tick,0x7ff6d9398e66,948488,0,0x0,3,0x7ff6d893c890,0x1311121a771,0x13111219b63,0x13111219a1d,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,948591,0x13111227878,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0xb9fe8d0908,~
code-source-info,0x13111227878,404,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,948872,0x131112281f8,246,Module.load node:internal/modules/cjs/loader:986:33,0xb9fe8d6c28,~
code-source-info,0x131112281f8,405,31712,32548,C0O31728C8O31774C16O31728C21O31784C26O31797C32O31784C36O31809C38O31823C42O31838C45O31858C52O31875C55O31880C60O31880C66O31858C71O31849C75O31923C78O31923C83O32002C91O32006C101O32059C106O32070C112O32085C124O32091C129O32085C130O32133C133O32140C140O32151C144O32162C150O32183C151O32195C155O32226C160O32235C165O32339C170O32376C175O32387C187O32428C192O32435C197O32435C204O32449C206O32447C211O32482C216O32491C221O32491C228O32517C233O32526C238O32526C245O32547,,
code-creation,LazyCompile,10,949250,0x131112284a8,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:424:40,0xb9fe8d60a0,~
code-source-info,0x131112284a8,405,12570,13011,C0O12599C5O12604C10O12604C16O12631C18O12656C20O12683C22O12752C36O12705C44O12752C49O12767C51O12786C55O12796C56O12806C61O12813C63O12861C68O12880C74O12920C77O12931C84O12942C89O12962C91O12986C92O12689C95O12995C97O13008,,
code-creation,LazyCompile,10,949594,0x13111228690,415,basename node:path:749:11,0x351f86ef978,~
code-source-info,0x
code-creation,LazyCompile,10,950067,0x13111228b90,485,Module._extensions..js node:internal/modules/cjs/loader:1129:37,0xb9fe8d6dc8,~
code-source-info,0x13111228b
tick,0x7ff6d8b52ed0,950497,0,0x0,3,0x7ff6d893c890,0x13111228bcc,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,950534,0x13111228fd8,376,readFileSync node:fs:464:22,0x21777797df8,~
code-source-info,0x13111228fd
code-creation,LazyCompile,10,950875,0x131112292f8,30,isEncoding node:buffer:535:40,0x20182db00f8,~
code-source-info,0x131112292f8,30,15447,15582,C0O15463C6O15511C12O15518C20O15537C23O15537C28O15565C29O15579,,
code-creation,LazyCompile,10,951014,0x13111229400,30,normalizeEncoding node:internal/util:160:27,0x29c5437a0b8,~
code-source-info,0x13111229400,21,4358,4466,C0O4369C7O4392C14O4410C19O4423C21O4437C22O4441C25O4448C29O4463,,
code-creation,LazyCompile,10,951162,0x131112294e8,9,isUint32 node:internal/validators:41:18,0x29c5437cff0,~
code-source-info,0x131112294e8,22,858,905,C0O871C2O895C5O884C8O902,,
code-creation,LazyCompile,10,951311,0x13111229648,113,openSync node:fs:590:18,0x21777797f88,~
code-source-info,0x13111229648,73,15451,15841,C0O15476C5O15483C11O15530C16O15530C21O15555C37O15562C44O15615C51O15617C58O15643C63O15651C70O15656C73O15667C78O15667C95O15651C101O15792C106O15792C110O15824C112O15838,,
code-creation,LazyCompile,10,951456,0x131112297d0,37, node:internal/fs/utils:686:42,0x217777b6c78,~
code-source-info,0x131112297d0,77,19323,19462,C14O19379C19O19379C24O19414C29O19414C34O19447C36O19459,,
code-creation,LazyCompile,10,951717,0x13111229ba8,515,stringToFlags node:internal/fs/utils:561:23,0x217777b6a98,~
code-source-info,0x13111229ba
code-creation,LazyCompile,10,952146,0x13111229f80,86,parseFileMode node:internal/validators:60:23,0x29c5437d040,~
code-source-info,0x13111229f80,22,1568,1868,C0O1592C11O1610C17O1648C24O1672C27O1652C34O1708C41O1753C52O1714C57O1708C58O1776C66O1784C73O1820C78O1820C83O1852C85O1865,,
code-creation,LazyCompile,10,952460,0x1311122a0f0,66,tryStatSync node:fs:418:21,0x21777797d08,~
code-source-info,0x1311122a0f0,73,11183,11401,C0O11215C2O11236C7O11244C22O11244C28O11289C36O11313C38O11330C43O11333C48O11333C53O11353C58O11359C62O11353C63O11385C65O11398,,
code-creation,LazyCompile,10,952694,0x1311122a270,96,tryCreateBuffer node:fs:428:25,0x21777797d58,~
code-source-info,0x1311122a270,73,11429,11729,C0O11467C2O11480C7O11502C9O11513C11O11511C16O11536C23O11542C28O11536C29O11587C34O11603C39O11603C45O11627C57O11633C58O11662C65O11676C67O11686C72O11689C77O11689C93O11712C95O11726,,
code-creation,LazyCompile,10,952843,0x1311122a3c8,17,allocUnsafe node:buffer:378:42,0x20182dafce8,~
code-source-info,0x1311122a3c8,30,11387,11445,C0O11399C5O11399C9O11420C12O11427C16O11442,,
code-creation,LazyCompile,10,952939,0x1311122a4d8,54, node:buffer:354:36,0x20182dafc48,~
code-source-info,0x1311122a4d8,30,10661,10821,C0O10676C8O10676C13O10709C14O10720C21O10736C23O10733C28O10756C33O10788C46O10762C51O10756C53O10820,,
code-creation,LazyCompile,10,953121,0x1311122a660,177,validateNumber node:internal/validators:119:24,0x29c5437d220,~
code-source-info,0x1311122a660,22,3480,3936,C19O3521C25O3557C41O3563C46O3557C47O3617C54O3643C66O3675C83O3725C86O3725C92O3753C110O3824C136O3856C151O3900C169O3759C174O3753C176O3935,,
code-creation,LazyCompile,10,953328,0x1311122a830,119,allocate node:buffer:403:18,0x20182dafdd8,~
code-source-info,0x1311122a830,30,12114,12442,C0O12126C1O12135C6O12148C11O12155C16O12172C17O12181C20O12200C24O12209C27O12190C32O12224C34O12236C39O12247C41O12245C44O12233C49O12267C52O12267C55O12296C62O12311C67O12322C75O12296C81O12346C88O12360C94O12357C100O12371C103O12371C106O12389C108O12398C109O12407C114O12414C118O12439,,
code-creation,LazyCompile,10,953514,0x1311122a9f0,86,tryReadSync node:fs:443:21,0x21777797da8,~
code-source-info,0x1311122a9f0,73,11753,11998,C0O11803C2O11816C7O11841C12O11856C29O11856C35O11893C47O11899C48O11928C55O11942C57O11952C62O11955C67O11955C83O11978C85O11995,,
code-creation,LazyCompile,10,953728,0x1311122abe0,251,readSync node:fs:704:18,0x21777798028,~
code-source-info,0x1311122abe0,73,18630,19659,C0O18630C2O18674C7O18679C13O18704C18O18704C22O18747C29O18754C34O18831C40O18841C43O18872C55O18891C61O18907C68O18918C73O18935C82O18981C87O19008C92O19037C105O19037C110O19085C117O19103C118O19114C123O19128C124O19137C125O19159C131O19170C136O19184C152O19190C157O19184C158O19316C163O19364C174O19316C179O19382C184O19409C188O19429C196O19429C201O19486C203O19508C208O19516C233O19516C239O19610C244O19610C248O19642C250O19656,,
code-creation,LazyCompile,10,953926,0x1311122ae48,52, node:internal/fs/utils:692:40,0x217777b6cc8,~
code-source-info,0x1311122ae48,77,19507,19636,C14O19537C22O19541C29O19566C30O19575C31O19586C44O19586C49O19623C51O19633,,
code-creation,LazyCompile,10,954068,0x1311122af90,155, node:internal/validators:85:3,0x29c5437d0e0,~
code-source-info,0x1311122af90,22,2354,2828,C36O2497C42O2537C58O2543C63O2537C64O2604C69O2609C75O2642C91O2648C96O2642C97O2709C99O2719C106O2734C111O2750C121O2789C134O2802C147O2756C152O2750C154O2827,,
code-creation,LazyCompile,10,954193,0x1311122b180,51, node:internal/validators:200:40,0x29c5437d450,~
code-source-info,0x1311122b180,22,6199,6435,C14O6233C19O6238C25O6272C30O6303C43O6278C48O6272C50O6434,,
code-creation,LazyCompile,10,954306,0x1311122b2d8,151, node:internal/validators:74:3,0x29c5437d090,~
code-source-info,0x1311122b2d8,22,1916,2304,C12O1936C25O1966C32O2000C38O2038C54O2044C59O2038C60O2098C65O2103C71O2134C87O2140C92O2134C93O2194C95O2204C102O2219C107O2233C117O2272C130O2285C143O2239C148O2233C150O2303,,
tick,0x7ff6d938bf14,954512,0,0x0,3,0x7ff6d893c890,0x1311122a4e0,0x1311122a3cd,0x1311122a297,0x13111229054,0x13111228bcc,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7fffad96d1c4,954563,0,0x0,3,0x7ff6d893c890,0x1311122ac49,0x1311122aa0d,0x13111229077,0x13111228bcc,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,954604,0x1311122b4c8,103, node:internal/fs/utils:642:3,0x217777b6b88,~
code-source-info,0x1311122b4c8,77,18081,18471,C0O18122C1O18133C6O18147C22O18153C27O18147C28O18213C29O18224C34O18238C50O18244C55O18238C56O18304C58O18315C64O18324C69O18349C82O18439C95O18355C100O18349C102O18470,,
code-creation,LazyCompile,10,954771,0x1311122b7d0,151, node:internal/fs/utils:907:42,0x217777b7038,~
code-source-info,0x1311122b7d0,77,25566,26138,C0O25591C6O25632C14O25632C21O25681C27O25722C32O25745C35O25740C37O25737C47O25771C53O25778C56O25765C61O25794C77O25878C80O25873C98O25898C104O25905C117O25800C122O25794C125O25982C143O25988C148O25982C150O26137,,
code-creation,LazyCompile,10,955610,0x1311122b988,47,closeSync node:fs:540:19,0x21777797ee8,~
code-source-info,0x1311122b988,73,14270,14398,C0O14280C5O14285C11O14322C13O14329C18O14337C31O14337C36O14367C41O14367C46O14397,,
code-creation,LazyCompile,10,956113,0x1311122bab8,162,toString node:buffer:789:46,0x20182db19b0,~
code-source-info,0x1311122bab8,30,24077,24669,C0O24077C2O24119C8O24126C13O24152C20O24170C25O24152C31O24178C32O24206C37O24219C38O24229C43O24240C48O24259C50O24269C55O24282C57O24292C58O24306C65O24323C71O24352C76O24364C83O24388C90O24403C92O24411C97O24426C99O24436C100O24442C104O24487C109O24487C115O24509C116O24527C119O24527C124O24556C126O24584C133O24590C138O24584C139O24642C156O24642C161O24666,,
code-creation,LazyCompile,10,956598,0x1311122bd80,499,getEncodingOps node:buffer:684:24,0x20182db1820,~
code-source-info,0x1311122bd
tick,0x7ff6d89e3412,957097,0,0x0,3,0x7ff6d893c890,0x1311122bb54,0x13111229147,0x13111228bcc,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,957137,0x1311122c168,12,slice node:buffer:599:12,0x20182db02c8,~
code-source-info,0x1311122c168,30,17339,17385,C0O17364C5O17364C11O17385,,
code-creation,LazyCompile,10,958178,0x1311122d7b8,499,Module._compile node:internal/modules/cjs/loader:1074:37,0xb9fe8d6d38,~
code-source-info,0x1311122d7b8,405,34431,36324,C0O34460C2O34478C4O34492C11O34502C20O34521C25O34533C30O34563C35O34582C40O34591C45O34591C51O34628C56O34635C61O34644C66O34644C72O34691C86O34691C91O34764C103O34764C109O34827C111O34836C119O34840C128O34883C135O34905C141O35001C144O35013C151O35017C159O35050C162O35072C170O35097C177O35101C185O35072C193O35063C203O35298C210O35305C215O35318C221O35318C226O35305C231O35298C237O35385C242O35398C248O35470C256O35491C262O35522C264O35518C269O35545C273O35560C279O35575C285O35594C290O35622C295O35675C300O35680C305O35680C311O35718C316O35718C322O35763C324O35795C329O35825C330O35852C333O35861C339O35878C344O35885C349O35897C357O35895C363O35915C367O35944C388O35953C396O36092C401O36131C410O36170C419O36179C428O36188C437O36196C446O36206C459O36101C465O36225C469O36251C475O36262C481O36279C486O36286C490O36296C496O36307C498O36321,,
code-creation,LazyCompile,10,958644,0x1311122dd30,274,maybeCacheSourceMap node:internal/source_map/source_map_cache:80:29,0xb9fe8cdbf8,~
code-source-info,0x1311122dd30,402,2568,3836,C0O2657C3O2657C7O2684C10O2698C15O2702C23O2722C25O2742C26O2749C30O2764C35O2775C44O2773C54O2911C64O2911C68O2928C69O2935C70O2958C80O2958C86O3065C88O3096C91O3124C96O3131C101O3096C107O3167C112O3187C117O3194C122O3217C126O3249C131O3267C136O3271C143O3301C150O3333C160O3364C166O3379C170O3267C178O3406C182O3438C187O3462C192O3466C200O3500C210O3531C216O3546C220O3462C228O3705C233O3723C238O3727C246O3761C256O3792C262O3807C266O3723C273O3835,,
code-creation,LazyCompile,10,958875,0x1311122e920,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:49:30,0xb9fe8cdb58,~
code-source-info,0x1311122e920,402,1716,1866,C0O1724C6O1768C11O1789C17O1789C22O1768C26O1838C30O1863,,
tick,0x7ff6d93ad9e3,958989,0,0x0,3,0x7ff6d893c890,0x1311122dd33,0x1311122d80e,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,959064,0x1311122ea98,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:56:30,0xb9fe8cdba8,~
code-source-info,0x1311122ea98,402,1899,2536,C0O1910C8O1910C13O2020C19O2020C24O1957C29O1984C34O2050C38O2080C42O2138C48O2138C53O2111C58O2195C64O2254C70O2417C76O2417C81O2389C86O2450C90O2509C92O2527C99O2535,,
code-creation,LazyCompile,10,959198,0x1311122ec10,30,validateBoolean node:internal/validators:143:25,0x29c5437d2c0,~
code-source-info,0x1311122ec10,22,4350,4464,C0O4369C6O4406C22O4412C27O4406C29O4463,,
code-creation,LazyCompile,10,959399,0x1311122f008,165,wrapSafe node:internal/modules/cjs/loader:1034:18,0xb9fe8d6320,~
code-source-info,0x1311122f008,405,33187,34217,C0O33187C9O33231C17O33267C22O33274C27O33274C33O33294C40O33304C45O33321C52O33339C56O33431C64O33304C70O33659C74O33679C81O33689C86O33705C98O33827C102O33844C113O33689C118O34086C130O34111C135O34123C142O34134C147O34164C157O34164C162O34199C164O34199,,
code-creation,LazyCompile,10,959839,0x1311122f7e8,475,compileFunction node:vm:316:25,0x351f86fd050,~
script-source,85,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = kEmptyObject) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\x0d\n      contextifiedObject\x2C\x0d\n      options\x2C\x0d\n    );\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [\x0d\n      contextifiedObject\x2C\x0d\n      timeout\x2C\x0d\n      displayErrors\x2C\x0d\n      breakOnSigint\x2C\x0d\n      breakFirstLine\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = kEmptyObject) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x1311122f7e8,85,9960,12303,C12O9985C19O10004C28O10004C33O10037C37O10070C46O10070C51O10108C56O10130C62O10108C67O10242C79O10262C87O10285C95O10306C103O10335C111O10367C119O10400C128O10429C133O10475C142O10475C147O10524C156O10524C161O10581C170O10581C175O10634C179O10669C188O10669C193O10722C202O10722C207O10790C211O10831C224O10923C230O10965C247O10971C252O10965C253O11101C262O11101C267O11167C272O11189C278O11167C283O11366C315O11366C321O11555C325O11592C330O11629C334O11620C338O11670C344O11696C349O11725C353O11716C357O11747C361O11775C371O11797C382O11797C387O11949C396O11949C401O11910C406O12009C415O12009C420O11993C425O12062C429O12062C431O12141C435O12134C437O12168C442O12179C454O12223C462O12168C470O12291C474O12300,,
tick,0x7ff6d9398e66,961632,0,0x0,3,0x7ff6d893c890,0x1311122f079,0x1311122d81f,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,961740,0x131112309f8,95, node:internal/validators:177:39,0x29c5437d3b0,~
code-source-info,0x131112309f8,22,5480,5766,C16O5517C21O5522C27O5550C43O5556C48O5550C49O5622C56O5629C61O5664C66O5687C71O5705C87O5711C92O5705C94O5765,,
code-creation,LazyCompile,10,961902,0x13111230b58,27, node:vm:321:27,0x1311122f4b0,~
code-source-info,0x13111230b58,85,10165,10216,C0O10179C10O10211C21O10179C26O10216,,
code-creation,Eval,10,962052,0x13111230dd8,5, C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x13111230c90,~
script-source,426,C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x13111230dd8,426,0,119,C0O0C4O119,,
code-creation,Function,10,962143,0x13111230ec0,29, C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x13111230d50,~
code-source-info,0x13111230ec0,426,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,962362,0x13111231130,19,importModuleDynamicallyWrap node:internal/vm/module:436:37,0x1311120a4b8,~
code-source-info,0x13111231130,424,12202,12660,C0O12202C13O12272C18O12657,,
code-creation,LazyCompile,10,962602,0x13111232310,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0xb9fe8d0958,~
code-source-info,0x13111232310,404,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,962799,0x13111232560,14,require node:internal/modules/cjs/helpers:101:31,0x131112321e0,~
code-source-info,0x13111232560,404,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,962961,0x131112326a0,10, node:internal/modules/cjs/helpers:29:66,0xb9fe8d0b28,~
code-source-info,0x131112326a0,404,838,865,C0O851C2O857C9O864,,
tick,0x7ff6d89a7980,963040,0,0x0,2,0x7ff6d893c890,0x13111215eb2,0x13111215c9f,0x131112278a3,0x131112158e0,0x13111215504,0x13111232568,0x13111230ec3,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,963120,0x13111232818,129,compileForPublicLoader node:internal/bootstrap/loaders:263:25,0x29c5434cef0,~
code-source-info,0x13111232818,15,8268,8956,C0O8288C6O8435C16O8478C33O8441C38O8435C39O8517C44O8517C48O8560C54O8752C61O8783C69O8752C75O8808C80O8826C90O8842C93O8858C98O8842C102O8824C106O8885C111O8885C115O8911C120O8911C124O8943C128O8951,,
code-creation,Eval,10,963307,0x13111232b88,5, node:cluster:1:1,0x13111232a40,~
script-source,427,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x13111232b88,427,0,1316,C0O0C4O1316,,
code-creation,Function,10,963563,0x13111232c30,39, node:cluster:1:1,0x13111232b00,~
code-source-info,0x13111232c30,427,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
code-creation,Eval,10,964469,0x13111233828,5, node:internal/cluster/primary:1:1,0x131112334a0,~
script-source,428,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeExec(debugArgRegex\x2C arg) !== null) ||\x0d\n      RegExpPrototypeExec(debugArgRegex\x2C nodeOptions) !== null) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n  const signal = signo || 'SIGTERM';\x0d\n\x0d\n  proc.kill(signal);\x0d\n};\x0d\n
code-source-info,0x13111233828,428,0,11078,C0O0C4O11078,,
code-creation,Function,10,966308,0x131112341f0,640, node:internal/cluster/primary:1:1,0x131112337a0,~
code-source-info,0x131112341f0,428,0,11078,C0O0C160O28C166O51C172O75C178O98C184O113C190O130C196O154C201O166C207O229C210O229C214O229C216O275C219O275C224O266C230O315C233O315C237O315C239O354C242O354C247O399C250O399C254O399C256O469C259O469C263O469C265O528C268O528C272O528C274O598C277O598C282O573C288O583C294O650C296O650C301O650C303O688C305O688C310O688C312O728C314O728C316O749C318O749C320O769C324O769C326O792C332O792C334O825C337O825C342O808C348O860C350O875C354O905C356O905C361O905C363O921C367O938C371O948C375O965C379O1022C383O1040C387O1049C392O1064C396O1075C400O1091C404O1098C408O1115C412O1122C417O1141C421O1194C426O1211C430O1277C431O1277C433O1303C435O1303C437O1325C438O1325C440O1431C443O1439C448O1443C452O1431C454O1471C459O1492C464O1505C466O1522C470O1540C475O1561C480O1576C482O1593C486O1613C489O1625C496O1634C501O1741C503O1758C507O1783C509O1800C511O1815C516O1840C520O1863C527O1884C531O3605C537O3635C541O3625C545O5586C552O5599C556O7341C563O7360C567O7782C574O7787C580O7797C586O7823C592O7837C598O7848C604O7782C606O10738C609O10745C618O10766C622O10936C625O10943C634O10961C639O11077,,
code-creation,Eval,10,967040,0x13111235848,5, node:internal/cluster/round_robin_handle:1:1,0x13111235630,~
script-source,429,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog\x2C readableAll\x2C writableAll }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init(ObjectCreate(null));\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd\x2C backlog });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n      backlog\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen({\x0d\n      path: address\x2C\x0d\n      backlog\x2C\x0d\n      readableAll\x2C\x0d\n      writableAll\x2C\x0d\n    });  // UNIX socket path.\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x13111235848,429,0,3517,C0O0C4O3517,,
code-creation,Function,10,967493,0x13111235c10,217, node:internal/cluster/round_robin_handle:1:1,0x131112357c0,~
code-source-info,0x13111235c10,429,0,3517,C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1401C172O1415C176O2093C185O2110C189O2513C198O2534C202O2901C211O2919C216O3516,,
code-creation,Eval,10,967903,0x13111236560,5, node:internal/cluster/utils:1:1,0x131112363e8,~
script-source,430,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x13111236560,430,0,1104,C0O0C4O1104,,
code-creation,Function,10,968095,0x13111236720,72, node:internal/cluster/utils:1:1,0x131112364d8,~
code-source-info,0x13111236720,430,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,968418,0x13111236d38,5, node:internal/cluster/shared_handle:1:1,0x13111236bb0,~
script-source,431,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x13111236d38,431,0,1147,C0O0C4O1147,,
code-creation,Function,10,968598,0x13111236f70,89, node:internal/cluster/shared_handle:1:1,0x13111236cb0,~
code-source-info,0x13111236f70,431,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,968906,0x13111237578,5, node:internal/cluster/worker:1:1,0x131112373f0,~
script-source,432,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = kEmptyObject;\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x13111237578,432,0,1434,C0O0C4O1434,,
code-creation,Function,10,969141,0x131112378f0,158, node:internal/cluster/worker:1:1,0x131112374f0,~
code-source-info,0x131112378f0,432,0,1434,C0O0C20O28C25O53C31O109C34O109C38O109C40O156C43O156C48O139C54O185C56O200C60O913C63O941C71O965C76O913C81O978C87O978C92O1025C95O1032C104O1047C108O1117C111O1124C120O1139C124O1229C127O1236C136O1253C140O1351C143O1358C152O1380C157O1433,,
code-creation,LazyCompile,10,969555,0x131112381f0,151,getESMFacade node:internal/bootstrap/loaders:281:15,0x29c5434cf40,~
code-source-info,0x131112381f0,15,8974,9620,C0O8974C8O8993C14O9013C18O9020C19O9049C29O9049C34O9034C39O9098C42O9111C51O9143C53O9143C55O9174C62O9199C67O9174C72O9217C82O9217C87O9266C89O9319C102O9280C107O9278C111O9531C116O9538C121O9538C125O9563C130O9570C140O9570C146O9608C150O9615,,
code-creation,LazyCompile,10,969757,0x131112385d0,40, node:internal/bootstrap/loaders:290:15,0x131112380e8,~
code-source-info,0x131112385d0,15,9347,9455,C0O9361C5O9374C10O9374C14O9403C24O9424C27O9437C32O9403C39O9454,,
code-creation,LazyCompile,10,969995,0x13111238720,89,syncExports node:internal/bootstrap/loaders:304:14,0x29c5434cf90,~
code-source-info,0x13111238720,15,9933,10276,C0O9962C5O9988C11O10018C13O10031C17O10023C22O10074C24O10079C28O10093C30O10108C35O10123C37O10147C42O10154C51O10207C54O10219C59O10245C67O10207C73O10154C79O10040C84O10005C88O10275,,
tick,0x7ff6d938c4c8,970095,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x7ff658f84ea6,0x7ff658f84361,0x131112342ea,0x7ff658f84f6b,0x7ff658f84361,0x13111232c4d,0x7ff658f84f6b,0x13111232844,0x131112278ad,0x131112158e0,0x13111215504,0x13111232568,0x13111230ec3,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d88d6800,970161,0,0x0,3,0x7ff6d893c890,0x7ff6d8355670,0x1311123827c,0x13111232887,0x131112278ad,0x131112158e0,0x13111215504,0x13111232568,0x13111230ec3,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,970207,0x13111238890,35,getOwn node:internal/bootstrap/loaders:187:16,0x29c5434cc28,~
code-source-info,0x13111238890,15,5832,5990,C0O5869C5O5876C14O5931C26O5931C34O5987,,
code-creation,RegExp,3,970683,0x7ff658f88180,1616,(?:^|\\/)\\.?\\.$
tick,0x7ff6d8e0ae21,970919,0,0x0,0,0x7ff658f87d25,0x1311121855e,0x13111219772,0x131112199f3,0x131112198d7,0x13111219280,0x13111216c7f,0x13111215882,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,RegExp,3,971181,0x7ff658f88880,1676,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,972030,0x7ff658f88fc0,3432,dirname node:path:653:10,0x351f86ef928,^
code-source-info,0x7ff658f88fc0,71,21280,23908,,,
code-creation,Function,11,972385,0x7ff658f89dc0,1900,toNamespacedPath node:path:618:19,0x351f86ef8d8,^
code-source-info,0x7ff658f89dc0,71,20086,21201,,,
code-creation,Function,11,972495,0x7ff658f8a5c0,308,isFileType node:fs:218:20,0x217777979e8,^
code-source-info,0x7ff658f8a5c0,73,5841,6089,,,
code-creation,Function,11,972552,0x7ff658f8a780,296,getOwn node:internal/bootstrap/loaders:187:16,0x29c5434cc28,^
code-source-info,0x7ff658f8a780,15,5832,5990,,,
code-creation,Function,11,972623,0x7ff658f8a940,668,syncExports node:internal/bootstrap/loaders:304:14,0x29c5434cf90,^
code-source-info,0x7ff658f8a940,15,9933,10276,,,
code-creation,Function,11,972676,0x7ff658f8ac80,240,SafeSet node:internal/per_context/primordials:379:16,0x29c543476b8,^
code-source-info,0x7ff658f8ac80,12,11306,11323,,,
code-creation,Eval,10,973764,0x13111239448,5, C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x131112392a0,~
script-source,433,C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x13111239448,433,0,494,C0O0C4O494,,
code-creation,Function,10,974428,0x131112396f0,157, C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x131112393c0,~
code-source-info,0x131112396f0,433,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,LazyCompile,10,974995,0x13111239bc0,37,get SocketAddress node:net:1924:20,0x167f8a5ec80,~
code-source-info,0x13111239bc0,395,53626,53734,C0O53636C14O53654C19O53687C26O53650C32O53708C36O53729,,
code-creation,Eval,10,975237,0x13111239f88,5, node:worker_threads:1:1,0x13111239e40,~
script-source,434,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x13111239f88,434,0,727,C0O0C4O727,,
code-creation,Function,10,975392,0x1311123a198,180, node:worker_threads:1:1,0x13111239f00,~
code-source-info,0x1311123a198,434,0,727,C0O149C3O149C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O303C46O303C51O191C56O207C61O226C66O255C71O280C76O375C79O375C84O348C89O406C96O428C102O445C108O461C114O480C120O505C126O534C132O559C138O578C144O591C150O605C156O658C162O679C168O702C174O421C179O726,,
code-creation,Eval,10,976439,0x1311123b138,5, node:internal/worker:1:1,0x1311123ab48,~
script-source,435,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validateArray } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\nif (isMainThread) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = kEmptyObject) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = ObjectCreate(null);\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true));\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot() {\x0d\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        const { HeapSnapshotStream } = require('internal/heap_utils');\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle = this[kHandle].loopIdleTime();\x0d\n\x0d\n  // Using performance.now() here is fine since it's always the time from\x0d\n  // the beginning of the process\x2C and is why it needs to be offset by the\x0d\n  // loopStart time (which is also calculated from the beginning of the\x0d\n  // process).\x0d\n  const active = now() - this[kLoopStartTime] - idle;\x0d\n\x0d\n  if (!util1) {\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle_delta = idle - util1.idle;\x0d\n  const active_delta = active - util1.active;\x0d\n  const utilization = active_delta / (idle_delta + active_delta);\x0d\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x1311123b138,435,0,15928,C0O0C4O15928,,
code-creation,Function,10,978160,0x1311123c498,1208, node:internal/worker:1:1,0x1311123b0b0,~
code-source-info,0x1311123c498,435,0,15928,C0O0C247O28C253O54C259O76C265O99C270O116C276O142C282O160C288O172C294O189C300O207C306O219C312O238C318O255C324O279C330O301C335O313C341O324C346O335C351O349C357O377C368O407C374O416C379O479C387O479C392O514C400O514C404O514C406O556C414O556C418O556C420O590C428O590C434O582C440O644C448O644C454O670C458O644C460O859C464O690C470O717C476O737C482O773C488O806C494O831C500O899C508O899C514O880C520O948C528O948C532O948C534O1207C538O991C544O1012C550O1031C556O1048C562O1058C568O1081C574O1101C580O1133C586O1158C592O1182C598O1247C606O1247C612O1226C618O1338C626O1338C632O1290C638O1305C644O1320C650O1389C658O1389C664O1372C670O1442C678O1442C684O1424C690O1726C694O1726C700O1488C705O1509C710O1542C715O1564C721O1585C727O1600C733O1630C739O1658C745O1679C751O1696C756O1772C760O1772C764O1772C766O1812C770O1812C774O1812C776O1853C780O1853C784O1853C786O1890C790O1890C794O1890C796O1929C800O1929C804O1929C806O1984C810O1984C814O1984C816O2044C820O2044C824O2044C826O2097C830O2097C834O2097C836O2149C840O2149C844O2149C846O2194C850O2194C854O2194C856O2236C860O2236C864O2236C866O2295C874O2295C880O2328C896O2329C902O2295C904O2385C905O2385C907O2424C909O2424C914O2424C916O2442C927O2465C933O2494C942O2478C947O2476C951O2546C957O2554C961O2546C963O2564C973O2578C979O3084C989O8301C999O8955C1009O9059C1019O9238C1029O10163C1115O13157C1117O13157C1122O13157C1124O15672C1132O15694C1138O15715C1144O15732C1153O15768C1159O15783C1172O15830C1178O15853C1184O15876C1190O15902C1196O15915C1202O15687C1207O15927,,
code-creation,Eval,10,979031,0x1311123e410,5, node:internal/error_serdes:1:1,0x1311123e148,~
script-source,436,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = ObjectCreate(null);\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: desc.value\x2C enumerable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError: {\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n    }\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x1311123e410,436,0,4376,C0O0C4O4376,,
code-creation,Function,10,979564,0x1311123e830,335, node:internal/error_serdes:1:1,0x1311123e388,~
code-source-info,0x1311123e830,436,0,4376,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O690C287O702C294O690C299O690C301O2197C302O2197C304O2402C305O2402C307O3434C308O3434C310O4320C317O4339C323O4355C329O4335C334O4375,,
code-creation,LazyCompile,10,980641,0x1311123fa48,914,Socket node:net:294:16,0x167f8a5ca30,~
code-source-info,0x1311123fa
code-creation,LazyCompile,10,981377,0x1b7d8dbff08,169,Duplex node:internal/streams/duplex:54:16,0x351f86c2688,~
script-source,57,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  const keys = ObjectKeys(Writable.prototype);\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const method = keys[i];\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n\x0d\n  if (options) {\x0d\n    this.allowHalfOpen = options.allowHalfOpen !== false;\x0d\n\x0d\n    if (options.readable === false) {\x0d\n      this._readableState.readable = false;\x0d\n      this._readableState.ended = true;\x0d\n      this._readableState.endEmitted = true;\x0d\n    }\x0d\n\x0d\n    if (options.writable === false) {\x0d\n      this._writableState.writable = false;\x0d\n      this._writableState.ending = true;\x0d\n      this._writableState.ended = true;\x0d\n      this._writableState.finished = true;\x0d\n    }\x0d\n  } else {\x0d\n    this.allowHalfOpen = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\x0d\n  writableHighWaterMark:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\x0d\n  writableObjectMode:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\x0d\n  writableBuffer:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\x0d\n  writableLength:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\x0d\n  writableFinished:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\x0d\n  writableCorked:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\x0d\n  writableEnded:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\x0d\n  writableNeedDrain:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nDuplex.fromWeb = function(pair\x2C options) {\x0d\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\x0d\n    pair\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nDuplex.toWeb = function(duplex) {\x0d\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\x0d\n};\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x1b7d8dbff08,57,2064,2741,C0O2079C2O2090C7O2115C12O2122C17O2142C18O2148C23O2157C28O2157C34O2181C39O2190C44O2190C50O2216C54O2265C60O2279C64O2255C68O2309C74O2318C79O2343C85O2367C89O2388C95O2409C99O2429C105O2455C109O2489C115O2498C120O2523C126O2547C130O2568C136O2590C140O2610C146O2631C150O2651C156O2675C162O2707C163O2726C168O2740,,
new,MemoryChunk,0x32a34b40000,262144
code-creation,LazyCompile,10,982610,0xb9fe8ffa60,220,Readable node:internal/streams/readable:186:18,0x351f86cdb10,~
script-source,58,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else if (state.destroyed || state.errored)\x0d\n        return false;\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n > MAX_HWM) {\x0d\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    try {\x0d\n      this._read(state.highWaterMark);\x0d\n    } catch (err) {\x0d\n      errorOrDestroy(this\x2C err);\x0d\n    }\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (dest.listenerCount('error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      src.listenerCount('data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stream.on('readable'\x2C next);\x0d\n\x0d\n  let error;\x0d\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\x0d\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\x0d\n    callback();\x0d\n    callback = nop;\x0d\n  });\x0d\n\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (error) {\x0d\n        throw error;\x0d\n      } else if (error === null) {\x0d\n        return;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    error = aggregateTwoErrors(error\x2C err);\x0d\n    throw error;\x0d\n  } finally {\x0d\n    if (\x0d\n      (error || options?.destroyOnReturn !== false) &&\x0d\n      (error === undefined || stream._readableState.autoDestroy)\x0d\n    ) {\x0d\n      destroyImpl.destroyer(stream\x2C null);\x0d\n    } else {\x0d\n      stream.off('readable'\x2C next);\x0d\n      cleanup();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.errored : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.closed : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errored && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nReadable.fromWeb = function(readableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamReadableFromReadableStream(\x0d\n    readableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.toWeb = function(streamReadable\x2C options) {\x0d\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\x0d\n    streamReadable\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0xb9fe8ffa60,58,6538,7440,C0O6538C9O6553C16O6564C21O6591C28O6598C33O6620C34O6779C41O6795C44O6802C48O6784C52O6815C71O6837C76O6835C80O6886C84O6925C92O6953C95O6974C99O6964C103O7006C111O7037C114O7061C118O7051C122O7096C130O7129C133O7155C137O7145C141O7185C149O7196C151O7213C158O7236C166O7213C171O7261C178O7268C186O7268C192O7294C199O7306C212O7306C219O7439,,
code-creation,LazyCompile,10,988073,0x32a34b43e98,18,Stream node:internal/streams/legacy:10:16,0x351f86d04d0,~
script-source,59,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x32a34b43e98,59,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,989425,0x32a34b446b0,354,ReadableState node:internal/streams/readable:83:23,0x351f86cdac0,~
code-source-info,0x32a34b446b
code-creation,LazyCompile,10,990139,0x32a34b44ac8,98,getHighWaterMark node:internal/streams/state:19:26,0x351f86d2f28,~
script-source,62,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x32a34b44ac8,62,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,990460,0x32a34b44d68,26,highWaterMarkFrom node:internal/streams/state:10:27,0x351f86d2df0,~
code-source-info,0x32a34b44d68,62,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,990554,0x32a34b44e48,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x351f86d2ed8,~
code-source-info,0x32a34b44e48,62,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,990669,0x32a34b44f20,17,BufferList node:internal/streams/buffer_list:14:14,0x351f86d2310,~
script-source,61,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x32a34b44f20,61,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,LazyCompile,10,991650,0x32a34b45658,98,construct node:internal/streams/destroy:219:19,0x31522b3fed0,~
script-source,56,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  kDestroyed\x2C\x0d\n  isDestroyed\x2C\x0d\n  isFinished\x2C\x0d\n  isServerRequest\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    self._destroy(err || null\x2C onDestroy);\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = r.readable === false;\x0d\n    r.endEmitted = r.readable === false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.ended = w.writable === false;\x0d\n    w.ending = w.writable === false;\x0d\n    w.finished = w.writable === false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    stream._construct(onConstruct);\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\nfunction emitCloseLegacy(stream) {\x0d\n  stream.emit('close');\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseLegacy(stream\x2C err) {\x0d\n  stream.emit('error'\x2C err);\x0d\n  process.nextTick(emitCloseLegacy\x2C stream);\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream || isDestroyed(stream)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (!err && !isFinished(stream)) {\x0d\n    err = new AbortError();\x0d\n  }\x0d\n\x0d\n  // TODO: Remove isRequest branches.\x0d\n  if (isServerRequest(stream)) {\x0d\n    stream.socket = null;\x0d\n    stream.destroy(err);\x0d\n  } else if (isRequest(stream)) {\x0d\n    stream.abort();\x0d\n  } else if (isRequest(stream.req)) {\x0d\n    stream.req.abort();\x0d\n  } else if (typeof stream.destroy === 'function') {\x0d\n    stream.destroy(err);\x0d\n  } else if (typeof stream.close === 'function') {\x0d\n    // TODO: Don't lose err?\x0d\n    stream.close();\x0d\n  } else if (err) {\x0d\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\x0d\n  } else {\x0d\n    process.nextTick(emitCloseLegacy\x2C stream);\x0d\n  }\x0d\n\x0d\n  if (!stream.destroyed) {\x0d\n    stream[kDestroyed] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x32a34b45658,56,4708,5119,C0O4744C8O4778C9O4785C10O4813C15O4849C20O4870C24O4884C25O4898C29O4915C33O4929C34O4943C38O4969C45O4974C48O4969C54O5007C61O5021C64O5007C72O5033C77O5060C78O5067C79O5078C82O5086C90O5086C97O5118,,
tick,0x7fffad8ffab3,992769,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x7ff658f84ea6,0x7ff658f84361,0x1311123a19b,0x7ff658f84f6b,0x13111232844,0x131112278ad,0x131112158e0,0x13111215504,0x13111232568,0x13111239700,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d8187110,992823,1,0x7ff6d82c7c30,3,0x7ff6d8d6aa80,0x7ff658f84ea6,0x7ff658f84361,0x1311123c6f6,0x7ff658f84f6b,0x7ff658f84361,0x1311123a19b,0x7ff658f84f6b,0x13111232844,0x131112278ad,0x131112158e0,0x13111215504,0x13111232568,0x13111239700,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d82095fc,992872,0,0x0,3,0x7ff6d892cc40,0x13111239731,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d9398ed0,992902,0,0x0,3,0x7ff6d892cc40,0x13111239731,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d938e5d9,992931,0,0x0,3,0x7ff6d892cc40,0x13111239731,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7fffad8ffab3,992966,0,0x0,3,0x7ff6d893c890,0xb9fe8ffb34,0x1b7d8dbff24,0x1311123fbb8,0x13111239731,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,993008,0x32a34b46388,266,Writable node:internal/streams/writable:220:18,0x351f86dc968,~
script-source,65,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](state.errored ?? new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          !state.destroyed &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    stream._final(onFinish);\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0) {\x0d\n      if (sync) {\x0d\n        state.pendingcb++;\x0d\n        process.nextTick((stream\x2C state) => {\x0d\n          if (needFinish(state)) {\x0d\n            finish(stream\x2C state);\x0d\n          } else {\x0d\n            state.pendingcb--;\x0d\n          }\x0d\n        }\x2C stream\x2C state);\x0d\n      } else if (needFinish(state)) {\x0d\n        state.pendingcb++;\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.closed : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.errored : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._writableState.writable !== false &&\x0d\n        (this._writableState.destroyed || this._writableState.errored) &&\x0d\n        !this._writableState.finished\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nWritable.fromWeb = function(writableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamWritableFromWritableStream(\x0d\n    writableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nWritable.toWeb = function(streamWritable) {\x0d\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\x0d\n};\x0d\n
code-source-info,0x32a34b46388,65,7637,9197,C0O7637C9O8222C16O8239C19O8246C23O8228C27O8260C33O8278C44O8278C51O8335C58O8342C63O8364C64O8370C83O8392C88O8390C92O8441C96O8480C104O8509C107O8531C111O8521C115O8564C123O8594C126O8617C130O8607C134O8651C142O8682C145O8706C149O8696C153O8741C161O8770C164O8792C168O8782C172O8825C180O8858C183O8884C187O8874C191O8914C197O8929C204O8952C212O8929C217O8977C224O8984C232O8984C238O9010C245O9022C258O9022C265O9196,,
tick,0x7ff6d9390192,996643,0,0x0,3,0x7ff6d893c890,0x1b7d8dbff34,0x1311123fbb8,0x13111239731,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
tick,0x7ff6d8b32f9d,996714,0,0x0,3,0x7ff6d893c890,0x1b7d8dbff34,0x1311123fbb8,0x13111239731,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,996882,0x32a34b48570,341,WritableState node:internal/streams/writable:77:23,0x351f86dc828,~
code-source-info,0x32a34b48570,65,2548,7172,C0O2888C6O2928C8O2957C11O2964C15O2946C20O3076C25O3097C27O3116C33O3092C37O3134C41O3176C52O3200C54O3219C60O3169C64O3433C69O3454C73O3469C88O3469C97O3543C102O3543C106O3452C110O3613C111O3630C115O3668C116O3683C120O3731C121O3743C125O3803C126O3814C130O3858C131O3872C135O3914C136O3929C140O4133C144O4155C150O4169C156O4184C158O4206C159O4203C163O4419C168O4443C170O4462C178O4440C182O4645C183O4657C187O4724C188O4737C192O4817C193O4829C197O5099C198O5109C202O5317C203O5339C207O5408C210O5431C217O5431C223O5421C227O5534C228O5547C232O5622C233O5636C237O5755C238O5779C242O5792C245O5792C249O5923C250O5938C254O6134C255O6151C259O6293C260O6310C264O6400C265O6418C269O6492C271O6510C277O6529C283O6539C287O6507C291O6629C293O6649C299O6668C305O6680C309O6646C313O6908C314O6921C318O6994C319O7006C323O7114C324O7132C328O7146C330O7151C335O7164C340O7171,,
code-creation,LazyCompile,10,997264,0x32a34b48980,23,resetBuffer node:internal/streams/writable:202:21,0x351f86dc878,~
code-source-info,0x32a34b48980,65,7196,7313,C0O7209C2O7224C6O7233C7O7253C11O7261C12O7278C16O7289C17O7303C22O7312,,
code-creation,LazyCompile,10,997470,0x32a34b48ae0,131,createHandle node:net:146:22,0x167f8a5c800,~
code-source-info,0x32a34b48ae0,395,3961,4337,C0O3982C13O3982C18O4026C23O4026C28O4050C30O4059C35O4078C42O4102C46O4114C49O4128C57O4137C60O4151C67O4085C72O4165C73O4176C75O4185C80O4203C87O4226C91O4238C94O4251C102O4260C105O4273C112O4210C117O4287C118O4298C125O4304C130O4298,,
code-creation,LazyCompile,10,997660,0x32a34b48c78,14,set node:net:1848:6,0x167f8a5e958,~
code-source-info,0x32a34b48c78,395,51644,51677,C0O51650C2O51662C7O51671C13O51675,,
code-creation,LazyCompile,10,997743,0x32a34b48d60,8,get node:net:1847:6,0x167f8a5e908,~
code-source-info,0x32a34b48d60,395,51608,51636,C0O51613C2O51625C4O51624C7O51634,,
tick,0x7ff6d8187a40,997884,0,0x0,0,0x7ff6d892db40,0x1311123fc31,0x13111239731,0x1311122d983,0x13111228d6d,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,LazyCompile,10,998011,0x32a34b48f08,196,Readable.on node:internal/streams/readable:886:33,0x351f86ce3f0,~
code-source-info,0x32a34b48f08,58,28898,29824,C0O28924C5O28931C10O28941C15O28944C29O28944C35O28986C40O29007C42O29014C47O29199C55O29199C62O29225C65O29192C69O29321C75O29329C80O29352C85O29352C91O29372C93O29379C98O29413C104O29434C110O29462C112O29507C118O29486C122O29522C123O29536C127O29552C128O29574C132O29590C140O29617C145O29631C150O29590C155O29658C161O29677C164O29677C170O29722C176O29742C179O29750C187O29750C193O29810C195O29821,,
code-creation,LazyCompile,10,998233,0x32a34b49180,135,initSocketHandle node:net:263:26,0x167f8a5c9e0,~
code-source-info,0x32a34b49180,395,6802,7402,C0O6819C5O6819C9O6836C10O6851C14O6940C20O6961C27O6969C32O6983C36O7001C43O7018C45O7016C49O7037C51O7042C57O7080C62O7061C66O7059C70O7111C72O7116C74O7115C78O7131C80O7168C82O7173C84O7172C88O7193C90O7235C94O7254C99O7259C105O7293C106O7300C107O7310C109O7315C114O7324C118O7356C123O7364C128O7364C134O7401,,
code-creation,LazyCompile,10,998477,0x32a34b493b8,160,undestroy node:internal/streams/destroy:154:19,0x31522b3fe30,~
code-source-info,0x32a34b493b8,56,3006,3707,C0O3029C5O3063C10O3084C14O3098C15O3112C19O3125C20O3134C24O3148C25O3163C29O3177C30O3189C34O3203C35O3213C39O3226C40O3241C44O3255C45O3265C49O3291C55O3300C58O3287C62O3333C68O3342C71O3329C75O3363C79O3377C80O3391C84O3404C85O3416C89O3430C90O3439C94O3453C95O3468C99O3482C100O3492C104O3505C105O3520C109O3534C110O3548C114O3562C115O3576C119O3602C125O3611C128O3598C132O3640C138O3649C141O3636C145O3680C151O3689C154O3676C159O3706,,
code-creation,LazyCompile,10,998698,0x32a34b495f8,32,getNewAsyncId node:net:165:23,0x167f8a5c850,~
code-source-info,0x32a34b495f8,395,4365,4484,C0O4379C4O4412C14O4446C17O4446C22O4468C27O4468C31O4481,,
code-creation,LazyCompile,10,998831,0x32a34b496f8,5,get node:internal/bootstrap/node:386:8,0x29c543510c8,~
code-source-info,0x32a34b496f8,16,12935,12970,C0O12947C4O12963,,
code-creation,LazyCompile,10,998934,0x32a34b497d0,5,get C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x13111239478,~
code-source-info,0x32a34b497d0,433,392,404,C0O398C4O404,,
tick,0x7fffad96d184,999843,1,0x7ff6d83136e0,6,0x7ff6d8d6aa80,0x1311122acc9,0x1311122aa0d,0x13111229077,0x13111228bcc,0x13111228288,0x1311121595a,0x13111215504,0x13111214345,0x131112140ef,0x1b7d8db9bfe,0x1b7d8db52ef
code-creation,Eval,10,1000109,0x32a34b49c38,5, C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x32a34b49af0,~
script-source,437,C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x32a34b49c38,437,0,85,C0O0C4O85,,
code-creation,Function,10,1000219,0x32a34b49cd8,56, C:\\Users\\Usuario\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x32a34b49bb0,~
code-source-info,0x32a34b49cd8,437,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,LazyCompile,10,1000555,0x32a34b4a3b8,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:554:36,0x1b7d8db7bb8,~
code-source-info,0x32a34b4a3b8,389,18299,18527,C0O18307C8O18311C14O18357C17O18365C28O18365C34O18479C40O18479C45O18516C49O18526,,
code-creation,LazyCompile,10,1000718,0x32a34b4a4e8,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x13111213630,~
code-source-info,0x32a34b4a4e8,425,2398,2712,C7O2414C14O2418C22O2449C25O2449C30O2496C33O2496C38O2533C40O2558C45O2569C50O2558C56O2673C61O2680C73O2680C79O2711,,
code-creation,LazyCompile,10,1000857,0x32a34b4a938,68,resolveMainPath node:internal/modules/run_main:15:25,0x131112134f0,~
code-source-info,0x32a34b4a938,425,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,Function,11,1001650,0x7ff658f8ae00,7788,realpathSync node:fs:2474:22,0x217777995f0,^
code-source-info,0x7ff658f8ae00,73,68410,72430,,,
code-creation,Function,11,1001728,0x7ff658f8cd00,200, node:vm:321:27,0x1311122f4b0,^
code-source-info,0x7ff658f8cd00,85,10165,10216,,,
code-creation,Function,11,1001779,0x7ff658f8ce80,44,noop node:internal/util/debuglog:47:14,0x20182d9a688,^
code-source-info,0x7ff658f8ce80,28,1465,1473,,,
tick,0x7fffad96d1c4,1001865,0,0x0,0,0x7ff6d8934790,0x1311121a751,0x13111219b63,0x13111219255,0x32a34b4a956,0x32a34b4a501,0x1b7d8db5313
code-creation,Function,11,1001898,0x7ff658f8cf40,960,debuglog node:internal/util/debuglog:71:18,0x20182d9a728,^
code-source-info,0x7ff658f8cf40,28,2302,3350,,,
code-creation,Function,11,1001957,0x7ff658f8d380,232,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x29c5434ce00,^
code-source-info,0x7ff658f8d380,15,7748,7847,,,
code-creation,Function,11,1002061,0x7ff658f8d500,1144,readPackageScope node:internal/modules/cjs/loader:332:26,0xb9fe8d5f10,^
code-source-info,0x7ff658f8d500,405,9584,10117,,,
code-creation,Function,11,1002113,0x7ff658f8da00,156,checkListener node:events:265:23,0x20182da3668,^
code-source-info,0x7ff658f8da00,29,7994,8052,,,
code-creation,Function,11,1002160,0x7ff658f8db40,128,addListener node:events:604:58,0x20182da3cf0,^
code-source-info,0x7ff658f8db40,29,18313,18387,,,
code-creation,LazyCompile,10,1002711,0x32a34b4b4d8,118,shouldUseESMLoader node:internal/modules/run_main:30:28,0x13111213540,~
code-source-info,0x32a34b4b4d8,425,870,1612,C0O1060C8O1060C13O1120C19O1127C24O1137C25O1149C26O1194C34O1194C39O1252C41O1284C46O1301C47O1313C48O1363C54O1379C60O1379C67O1427C68O1439C69O1443C75O1460C81O1460C88O1508C89O1521C90O1537C95O1537C100O1568C102O1586C107O1591C114O1596C117O1609,,
code-creation,LazyCompile,10,1002937,0x32a34b4b758,70,runMainESM node:internal/modules/run_main:51:20,0x13111213590,~
code-source-info,0x32a34b4b758,425,1635,1984,C0O1635C12O1671C20O1671C25O1659C30O1740C38O1740C43O1722C49O1770C54O1788C59O1788C64O1770C69O1983,,
code-creation,LazyCompile,10,1003090,0x32a34b4b998,216,loadESM node:internal/process/esm_loader:88:41,0xb9fe8dc7b8,~
code-source-info,0x32a34b4b998,407,2757,3084,C10O2757C21O2784C24O2790C35O2784C58O2815C60O2830C63O2821C75O2815C113O2866C120O2870C125O2918C130O2926C138O2926C143O2955C152O2962C153O2975C161O2975C166O3000C176O3001C193O3083,,
code-creation,LazyCompile,10,1003352,0x32a34b4bfc0,286,initializeLoader node:internal/process/esm_loader:54:32,0xb9fe8dc688,~
code-source-info,0x32a34b4bfc0,407,1734,2713,C10O1734C18O1742C24O1766C33O1773C34O1808C40O1808C45O1789C50O1862C53O1862C58O1926C64O1933C69O1940C78O1947C79O1957C84O1976C87O1990C92O1990C99O1996C106O1980C107O2021C110O2286C115O2286C121O2437C128O2470C131O2470C136O2488C143O2500C148O2500C159O2443C172O2413C198O2629C203O2645C208O2645C221O2629C244O2686C248O2703C263O2712,,
code-creation,LazyCompile,10,1003537,0x32a34b4c2b0,169,handleMainPromise node:internal/modules/run_main:62:33,0x131112135e0,~
code-source-info,0x32a34b4c2b0,425,2020,2177,C10O2020C18O2035C21O2043C31O2054C34O2043C43O2088C53O2095C90O2130C93O2138C103O2150C106O2138C146O2176,,
code-creation,LazyCompile,10,1003885,0x32a34b4c4f0,318,processTicksAndRejections node:internal/process/task_queues:67:35,0x31522b0c0f0,~
code-source-info,0x32a34b4c4f
code-creation,LazyCompile,10,1004189,0x32a34b4c7c0,43,shift node:internal/fixed_queue:108:8,0x31522b10fc8,~
code-source-info,0x32a34b4c7c0,40,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,1004328,0x32a34b4c900,54,shift node:internal/fixed_queue:80:8,0x31522b10e00,~
code-source-info,0x32a34b4c900,40,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,1004469,0x32a34b4ca38,42,emitBeforeScript node:internal/async_hooks:509:26,0x29c543743b0,~
code-source-info,0x32a34b4ca38,19,17331,17487,C0O17372C12O17372C17O17430C22O17443C25O17434C31O17458C36O17458C41O17486,,
code-creation,LazyCompile,10,1004674,0x32a34b4cb90,180,pushAsyncContext node:internal/async_hooks:539:26,0x29c543744f0,~
code-source-info,0x32a34b4cb90,19,18005,18560,C0O18061C7O18079C9O18078C13O18097C20O18131C24O18146C26O18157C32O18164C35O18175C40O18191C44O18161C49O18204C54O18211C59O18254C60O18258C65O18269C72O18292C78O18299C83O18315C85O18314C88O18297C92O18338C97O18349C104O18372C107O18376C113O18383C118O18399C120O18398C123O18381C127O18420C134O18438C142O18451C146O18458C153O18474C158O18493C162O18507C169O18523C174O18540C179O18559,,
tick,0x7ff6d820912d,1007439,0,0x0,3,0x7ff6d893c890,0x32a34b4ca44,0x32a34b4c51e
code-creation,LazyCompile,10,1007543,0x32a34b4cda8,125, node:internal/child_process:707:22,0xb9fe8c96a0,~
code-source-info,0x32a34b4cda8,394,20026,20403,C0O20041C3O20053C12O20072C20O20072C27O20107C28O20114C29O20141C32O20148C41O20156C43O20155C47O20190C52O20218C54O20231C55O20238C56O20261C58O20266C60O20266C65O20292C75O20312C85O20334C89O20292C94O20277C99O20248C102O20358C105O20365C114O20373C119O20391C124O20402,,
code-creation,LazyCompile,10,1007773,0x32a34b4cf60,31,listenerCount node:events:840:23,0x20182da4140,~
code-source-info,0x32a34b4cf60,29,24974,25256,C0O25006C5O25020C7O25072C9O25078C13O25093C17O25140C19O25149C20O25162C24O25219C28O25226C29O25244C30O25253,,
code-creation,LazyCompile,10,1007890,0x32a34b4d068,13,destroyHooksExist node:internal/async_hooks:486:27,0x29c543742c0,~
code-source-info,0x32a34b4d068,19,16757,16794,C0O16765C5O16781C8O16772C12O16791,,
code-creation,LazyCompile,10,1007975,0x32a34b4d158,32,emitAfterScript node:internal/async_hooks:517:25,0x29c54374400,~
code-source-info,0x32a34b4d158,19,17517,17618,C0O17532C5O17545C8O17536C14O17559C19O17559C23O17590C26O17590C31O17617,,
code-creation,LazyCompile,10,1008123,0x32a34b4d2c0,167,popAsyncContext node:internal/async_hooks:553:25,0x29c54374540,~
code-source-info,0x32a34b4d2c0,19,18653,19255,C0O18688C7O18706C9O18705C13O18724C14O18740C19O18747C20O18760C21O18766C24O18770C31O18793C36O18809C38O18808C44O18828C49O18912C54O18919C58O18945C59O18971C61O18983C65O18991C72O19007C77O19028C80O19039C87O19057C90O19054C93O19026C97O19071C104O19087C109O19106C112O19117C119O19135C122O19144C125O19132C128O19104C132O19153C137O19179C142O19179C146O19189C153O19207C158O19221C162O19234C163O19248C166O19252,,
code-creation,LazyCompile,10,1008274,0x32a34b4d4a0,13,enabledHooksExist node:internal/async_hooks:474:27,0x29c543741d0,~
code-source-info,0x32a34b4d4a0,19,16568,16603,C0O16576C5O16592C8O16583C12O16600,,
code-creation,LazyCompile,10,1008467,0x32a34b4d650,77, node:internal/modules/run_main:55:29,0x32a34b4b690,~
code-source-info,0x32a34b4d650,425,1796,1978,C0O1831C7O1836C15O1836C24O1866C30O1866C35O1889C44O1929C55O1953C60O1953C71O1935C76O1973,,
code-creation,LazyCompile,10,1008683,0x32a34b4d8d0,283,pathToFileURL node:internal/url:1524:23,0x217777a87d8,~
code-source-info,0x32a34b4d8d
tick,0x7ff6d93ad9b4,1008934,0,0x0,3,0x7ff6d893c890,0x32a34b4d66e,0x32a34b4b9d7,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,LazyCompile,10,1008983,0x32a34b4db98,136,URL node:internal/url:636:14,0x217777a7660,~
code-source-info,0x32a34b4db98,74,18253,18657,C13O18321C17O18350C19O18369C23O18402C30O18417C40O18431C42O18430C46O18453C50O18458C57O18473C60O18469C65O18467C69O18492C85O18545C93O18545C103O18602C117O18602C129O18492C135O18656,,
code-creation,LazyCompile,10,1009140,0x32a34b4dd70,51,URLContext node:internal/url:161:14,0x217777a6e40,~
code-source-info,0x32a34b4dd70,74,3883,4105,C0O3893C1O3904C5O3914C7O3926C11O3938C13O3952C17O3963C19O3977C23O3988C24O3998C28O4011C29O4021C33O4034C35O4044C39O4055C40O4066C44O4079C45O4093C50O4104,,
code-creation,LazyCompile,10,1009411,0x32a34b4dfb0,190,onParseComplete node:internal/url:544:25,0x217777a7340,~
code-source-info,0x32a34b4dfb0,74,15258,15944,C0O15374C2O15379C4O15378C8O15392C10O15402C14O15414C16O15425C20O15440C22O15464C24O15462C29O15488C43O15453C47O15514C49O15538C51O15536C56O15562C70O15527C74O15588C76O15597C80O15608C82O15628C84O15626C89O15648C101O15656C103O15617C107O15670C109O15680C113O15692C115O15705C119O15720C121O15729C125O15740C127O15750C129O15749C134O15804C136O15809C141O15829C144O15825C149O15823C153O15853C155O15858C157O15857C163O15872C168O15881C172O15897C177O15919C179O15918C183O15897C189O15943,,
code-creation,LazyCompile,10,1009930,0x32a34b4e428,934,URLSearchParams node:internal/url:183:14,0x217777a6ee0,~
code-source-info,0x32a34b4e428,74,4530,7457,C10O4556C16O4606C18O4611C24O4625C30O4643C42O4727C44O4732C46O4731C50O4756C52O4776C54O4775C57O4767C62O4977C64O4982C66O4981C71O5006C73O5011C77O5039C83O5039C87O5025C93O5062C101O5118C107O5165C119O5171C124O5165C125O5370C128O5402C156O5394C187O5394C190O5421C208O5544C210O5543C217O5591C233O5597C238O5591C239O5702C243O5739C271O5728C302O5728C305O5758C313O5792C317O5792C323O5758C331O5717C407O5826C413O5826C418O5383C492O5890C494O5895C500O5909C504O5943C532O5935C563O5935C566O5972C574O5979C579O6001C595O6007C600O6001C601O6090C609O6114C611O6113C617O6133C624O6142C629O6090C634O5924C707O6307C709O6320C711O6325C717O6339C721O6367C727O6367C732O6411C734O6423C738O6416C743O6461C745O6465C749O6494C755O6494C761O6549C763O6580C769O6624C775O6624C780O6674C788O6690C793O6674C798O6846C800O6857C805O6900C807O6905C809O6904C816O6926C823O6938C829O6989C831O7009C837O7033C839O7032C850O7009C855O7178C858O7007C862O6432C867O6398C872O7272C878O7279C883O7305C884O7313C891O7317C896O7338C906O7338C912O7355C916O7355C921O7431C923O7436C928O7445C933O7456,,
code-creation,LazyCompile,10,1010410,0x32a34b4ea50,35,initSearchParams node:internal/url:1082:26,0x217777a8378,~
code-source-info,0x32a34b4ea50,74,30479,30600,C0O30496C4O30514C6O30518C11O30532C15O30543C16O30550C17O30559C19O30563C25O30579C29O30577C34O30599,,
code-creation,LazyCompile,10,1010657,0x32a34b4ec00,199,encodePathChars node:internal/url:1509:25,0x217777a8788,~
code-source-info,0x32a34b4ec00,74,43293,43998,C0O43309C8O43313C15O43358C22O43402C31O43369C38O43484C46O43502C52O43502C59O43548C66O43592C75O43559C82O43619C90O43623C97O43669C104O43713C113O43680C120O43738C128O43742C135O43788C142O43832C151O43799C158O43864C166O43868C173O43914C180O43958C189O43925C196O43979C198O43995,,
tick,0x7ff6d8c1a725,1010841,0,0x0,0,0x7ff6d8ba8740,0x32a34b4d9e4,0x32a34b4d66e,0x32a34b4b9d7,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,LazyCompile,10,1010883,0x32a34b4ee38,99,set pathname node:internal/url:936:15,0x217777a7fa8,~
code-source-info,0x32a34b4ee38,74,26420,26698,C0O26434C5O26439C11O26463C23O26469C28O26463C29O26538C34O26561C38O26570C40O26569C45O26592C46O26599C47O26605C58O26617C67O26640C69O26639C78O26681C83O26681C92O26605C98O26697,,
code-creation,LazyCompile,10,1011071,0x32a34b4efa0,22,isURLThis node:internal/url:631:19,0x217777a7610,~
code-source-info,0x32a34b4efa0,74,18132,18223,C0O18144C3O18157C9O18179C14O18196C16O18195C20O18205C21O18220,,
code-creation,LazyCompile,10,1011183,0x32a34b4f0a8,31, node:internal/url:653:21,0x217777a7748,~
code-source-info,0x32a34b4f0a8,74,18770,18847,C0O18780C4O18793C6O18792C10O18802C19O18810C21O18808C26O18836C30O18842,,
code-creation,LazyCompile,10,1011337,0x32a34b4f1d0,108,onParsePathComplete node:internal/url:603:29,0x217777a7520,~
code-source-info,0x32a34b4f1d0,74,17276,17758,C0O17396C2O17401C4O17400C8O17414C10O17427C12O17425C17O17447C22O17461C24O17470C28O17483C35O17496C40O17493C46O17533C48O17542C52O17553C59O17567C61O17566C66O17563C70O17649C72O17662C74O17660C79O17682C84O17696C86O17705C90O17718C97O17731C102O17728C107O17757,,
code-creation,LazyCompile,10,1011480,0x32a34b4f378,47,get href node:internal/url:753:11,0x217777a78d8,~
code-source-info,0x32a34b4f378,74,21602,21711,C0O21612C5O21617C11O21641C23O21647C28O21641C29O21681C33O21693C35O21692C41O21701C46O21706,,
code-creation,LazyCompile,10,1011707,0x32a34b4f658,393, node:internal/url:699:12,0x217777a7838,~
code-source-info,0x32a34b4f
code-creation,LazyCompile,10,1012195,0x32a34b4fb00,371,import node:internal/modules/esm/loader:520:15,0xb9fe8de1f8,~
code-source-info,0x32a34b4fb00,408,15734,17130,C10O15734C18O16371C25O16371C30O16402C32O16417C41O16431C50O16478C55O16504C64O16504C70O16542C81O16737C90O16557C98O16547C100O16547C116O16585C124O16608C138O16585C145O16651C157O16652C164O16686C175O16687C180O16578C191O16529C206O16765C217O16786C222O16782C228O16771C240O16765C266O16819C270O16834C271O16851C282O16855C283O16911C285O16916C287O16916C292O16957C301O16957C306O16984C308O17010C311O16998C315O17022C317O17052C320O17040C324O17066C326O17080C330O16926C335O16898C338O17107C348O17125,,
code-creation,LazyCompile,10,1012516,0x32a34b4fed8,247,getModuleJob node:internal/modules/esm/loader:425:21,0xb9fe8de1a8,~
code-source-info,0x32a34b4fed8,408,12490,13439,C10O12490C18O12542C20O12654C22O12663C26O12672C33O12679C38O12846C49O12898C54O12898C59O12875C65O13011C82O13011C95O13000C118O12977C123O12985C128O13092C133O13102C138O13128C143O13102C150O13203C154O13248C159O13258C166O13284C176O13258C181O13306C185O13338C187O13349C208O13365C214O13423C224O13434,,
tick,0x7ff6d937ddc2,1012979,0,0x0,2,0x7ff6d893c890,0x32a34b4ff2a,0x32a34b4fb8a,0x32a34b4d697,0x32a34b4b9d7,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,LazyCompile,10,1013058,0x32a34b505d8,560,resolve node:internal/modules/esm/loader:799:16,0xb9fe8de338,~
code-source-info,0x32a34b505d
code-creation,LazyCompile,10,1013559,0x32a34b50de0,278,nextHookFactory node:internal/modules/esm/loader:117:25,0xb9fe8ddf98,~
code-source-info,0x32a34b50de0,408,3503,5884,C0O3503C25O3519C31O3533C59O3610C64O3597C70O3673C80O3684C84O3678C88O3636C94O3652C100O3745C107O3758C114O3793C118O3758C127O3805C136O3805C141O3798C148O3745C150O4034C155O4039C159O4034C161O4057C162O4057C164O4074C169O4083C175O4093C180O4236C191O4250C195O4261C210O4299C219O4307C227O4321C231O4276C236O4274C240O4409C244O4422C246O4607C268O5860C272O4614C277O5881,,
code-creation,LazyCompile,10,1013879,0x32a34b51208,445,ObjectDefineProperty.__proto__ node:internal/modules/esm/loader:151:5,0x32a34b50c18,~
code-source-info,0x32a34b51208,408,4641,5814,C4O4641C52O4750C61O4778C73O4795C85O4773C89O4817C100O4833C103O4838C117O4866C130O4817C135O4928C144O4937C146O4936C150O4957C164O4965C179O4985C192O5086C198O5109C203O5118C211O5137C215O5255C236O5339C247O5364C250O5369C255O5339C260O5390C262O5476C273O5489C276O5494C283O5507C287O5476C292O5524C294O5549C303O5574C306O5549C311O5611C320O5630C328O5617C341O5611C367O5663C374O5663C379O5717C386O5727C395O5742C400O5754C408O5774C412O5791C422O5805,,
code-creation,LazyCompile,10,1014101,0x32a34b51538,66,validateArgs node:internal/modules/esm/loader:832:26,0x32a34b50230,~
code-source-info,0x32a34b51538,408,25277,25563,C3O25302C9O25324C16O25343C25O25399C33O25343C38O25495C42O25504C51O25527C59O25504C65O25562,,
code-creation,LazyCompile,10,1014620,0x32a34b519e0,912,defaultResolve node:internal/modules/esm/resolve:1083:30,0xb9fe8e7f58,~
code-source-info,0x32a34b519e
tick,0x7ff6d9398e2f,1015057,0,0x0,3,0x7ff6d893c890,0x32a34b51350,0x32a34b506c9,0x32a34b4ff2a,0x32a34b4fb8a,0x32a34b4d697,0x32a34b4b9d7,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,LazyCompile,10,1015129,0x32a34b546b8,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:930:49,0xb9fe8e7d78,~
code-source-info,0x32a34b546b8,412,31047,31186,C0O31064C2O31078C7O31086C8O31099C9O31103C10O31116C16O31120C21O31129C22O31141C23O31145C26O31152C30O31183,,
code-creation,LazyCompile,10,1015297,0x32a34b547d0,81,isRelativeSpecifier node:internal/modules/esm/resolve:920:29,0xb9fe8e7d28,~
code-source-info,0x32a34b547d0,412,30744,30995,C0O30761C1O30774C7O30778C12O30808C19O30815C26O30833C32O30837C37O30846C38O30858C39O30864C41O30877C47O30881C52O30913C59O30920C66O30938C72O30942C77O30951C78O30963C79O30979C80O30992,,
code-creation,LazyCompile,10,1015525,0x32a34b54970,44,get protocol node:internal/url:795:15,0x217777a7a18,~
code-source-info,0x32a34b54970,74,22729,22841,C0O22739C5O22744C11O22768C23O22774C28O22768C29O22808C33O22820C35O22819C39O22829C43O22836,,
code-creation,LazyCompile,10,1015724,0x32a34b54b98,183,checkIfDisallowedImport node:internal/modules/esm/resolve:1015:33,0xb9fe8e7e68,~
code-source-info,0x32a34b54b98,412,33948,35144,C0O33990C4O34046C11O34055C16O34093C23O34102C28O34131C31O34135C37O34294C41O34326C48O34335C53O34369C60O34378C65O34414C81O34420C86O34414C87O34612C92O34633C102O34640C103O34657C108O34674C113O34674C122O34720C125O34733C130O34733C137O34783C153O34789C158O34783C159O34969C175O34975C180O34969C182O35143,,
code-creation,LazyCompile,10,1015997,0x32a34b54df8,104,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:1062:37,0xb9fe8e7f08,~
code-source-info,0x32a34b54df8,412,35391,35862,C0O35433C4O35465C11O35474C16O35501C23O35510C30O35540C32O35595C39O35604C44O35636C51O35645C56O35685C63O35734C77O35793C88O35734C96O35691C101O35685C103O35861,,
code-creation,LazyCompile,10,1016309,0x32a34b54fb0,64,getConditionsSet node:internal/modules/esm/resolve:145:26,0xb9fe8e75a8,~
code-source-info,0x32a34b54fb0,412,4616,4952,C0O4634C6O4681C8O4677C13O4708C18O4713C24O4748C40O4754C45O4748C46O4879C53O4886C58O4910C59O4919C63O4949,,
code-creation,LazyCompile,10,1016521,0x32a34b55128,166,moduleResolve node:internal/modules/esm/resolve:943:23,0xb9fe8e7dc8,~
code-source-info,0x32a34b55128,412,31410,32202,C0O31485C7O31494C12O31519C19O31528C23O31651C25O31664C28O31668C34O31727C47O31738C55O31774C60O31800C66O31804C71O31820C83O31831C94O31913C101O31924C110O31922C111O31966C115O31992C127O32003C133O32085C140O32094C145O32114C147O32130C148O32139C160O32146C165O32199,,
tick,0x7ff6d8b53690,1016902,0,0x0,3,0x7ff6d893c890,0x32a34b551c8,0x32a34b51c36,0x32a34b51350,0x32a34b506c9,0x32a34b4ff2a,0x32a34b4fb8a,0x32a34b4d697,0x32a34b4b9d7,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,LazyCompile,10,1016953,0x32a34b55418,454,finalizeResolution node:internal/modules/esm/resolve:371:28,0xb9fe8e7828,~
code-source-info,0x32a34b
code-creation,LazyCompile,10,1017292,0x32a34b55810,107,get pathname node:internal/url:925:15,0x217777a7f38,~
code-source-info,0x32a34b55810,74,26133,26402,C0O26143C5O26148C11O26172C23O26178C28O26172C29O26224C33O26229C35O26228C39O26244C43O26253C45O26252C50O26286C56O26290C59O26294C60O26308C65O26313C71O26320C76O26334C78O26344C79O26350C86O26361C89O26384C97O26361C106O26397,,
code-creation,LazyCompile,10,1017565,0x32a34b55ad0,106,fileURLToPath node:internal/url:1482:23,0x217777a8738,~
code-source-info,0x32a34b55ad0,74,42157,42490,C0O42169C6O42204C13O42211C22O42234C25O42239C31O42265C49O42271C54O42265C55O42342C62O42351C67O42369C77O42375C82O42369C83O42414C92O42433C101O42461C105O42487,,
code-creation,LazyCompile,10,1017774,0x32a34b55d10,179,get origin node:internal/url:770:13,0x217777a79a8,~
code-source-info,0x32a34b55d10,74,22062,22711,C0O22072C5O22077C11O22101C23O22107C28O22101C29O22215C33O22220C35O22219C39O22247C88O22295C93O22300C99O22307C107O22344C112O22364C118O22368C124O22352C130O22374C134O22381C139O22479C145O22500C146O22612C151O22644C156O22656C161O22666C166O22619C171O22672C172O22685C178O22706,,
code-creation,LazyCompile,10,1018031,0x32a34b56010,261,getPathFromURLWin32 node:internal/url:1429:29,0x217777a8698,~
code-source-info,0x32a34b
code-creation,LazyCompile,10,1018231,0x32a34b562c0,48,get hostname node:internal/url:883:15,0x217777a7d88,~
code-source-info,0x32a34b562c0,74,25033,25149,C0O25043C5O25048C11O25072C23O25078C28O25072C29O25112C33O25124C35O25123C39O25133C47O25144,,
code-creation,LazyCompile,10,1018465,0x32a34b56660,30,tryStatSync node:internal/modules/esm/resolve:164:3,0xb9fe8e7fa8,~
code-source-info,0x32a34b56660,412,5165,5231,C0O5220C5O5184C10O5175C21O5224C24O5220C29O5231,,
code-creation,LazyCompile,10,1018629,0x32a34b56818,123,statSync node:fs:1588:18,0x21777798a78,~
code-source-info,0x32a34b56818,73,42200,42614,C7O42200C16O42263C21O42270C26O42309C33O42311C40O42336C45O42344C52O42349C55O42360C60O42360C66O42422C76O42344C82O42462C88O42477C96O42490C102O42519C103O42536C104O42545C109O42545C113O42577C118O42584C122O42611,,
tick,0x7ff6d8edd3d4,1018823,0,0x0,0,0x13111226218,0x131112297ed,0x32a34b5682d,0x32a34b5666a,0x32a34b55508,0x32a34b551c8,0x32a34b51c36,0x32a34b51350,0x32a34b506c9,0x32a34b4ff2a,0x32a34b4fb8a,0x32a34b4d697,0x32a34b4b9d7,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,LazyCompile,10,1019004,0x32a34b56a28,64,hasNoEntryError node:fs:1525:25,0x21777798988,~
code-source-info,0x32a34b56a28,73,40574,40776,C0O40593C6O40621C11O40637C16O40621C21O40650C27O40664C36O40668C39O40681C40O40700C46O40725C51O40731C58O40736C61O40749C62O40760C63O40773,,
code-creation,LazyCompile,10,1019260,0x32a34b56b60,576,getStatsFromBinding node:internal/fs/utils:536:29,0x217777b6a48,~
code-source-info,0x32a34b56b
code-creation,LazyCompile,10,1019675,0x32a34b56f90,16,isBigInt64Array node:internal/util/types:49:25,0x29c5437e718,~
code-source-info,0x32a34b56f90,23,1304,1394,C0O1317C5O1324C12O1371C15O1391,,
code-creation,LazyCompile,10,1019907,0x32a34b570b0,19,msFromTimeSpec node:internal/fs/utils:450:24,0x217777b6798,~
code-source-info,0x32a34b570b0,77,11517,11578,C0O11534C2O11547C4O11545C10O11566C12O11564C15O11557C18O11575,,
code-creation,LazyCompile,10,1020173,0x32a34b572e8,116,Stats node:internal/fs/utils:501:15,0x217777b6968,~
code-source-info,0x32a34b572e8,77,13411,13952,C0O13551C41O13551C46O13681C48O13694C52O13708C54O13721C58O13735C60O13748C64O13762C66O13779C70O13797C73O13810C77O13808C81O13834C84O13847C88O13845C92O13871C95O13884C99O13882C103O13908C106O13925C110O13923C115O13951,,
code-creation,LazyCompile,10,1020342,0x32a34b574b8,62,StatsBase node:internal/fs/utils:404:19,0x217777b6368,~
code-source-info,0x32a34b574b8,77,10378,10679,C0O10466C2O10475C6O10485C8O10495C12O10506C14O10517C18O10529C20O10538C24O10548C26O10557C30O10567C32O10577C36O10588C38O10601C42O10615C44O10624C48O10634C50O10644C54O10655C56O10667C61O10678,,
code-creation,LazyCompile,10,1020542,0x32a34b576a0,33,dateFromMs node:internal/fs/utils:465:20,0x217777b6838,~
code-source-info,0x32a34b576a0,77,12097,12192,C0O12150C7O12166C12O12176C15O12176C20O12166C27O12157C32O12189,,
code-creation,LazyCompile,10,1020679,0x32a34b577b0,16,StatsBase.isDirectory node:internal/fs/utils:418:43,0x217777b63b8,~
code-source-info,0x32a34b577b0,77,10725,10776,C0O10745C7O10764C10O10745C15O10773,,
code-creation,LazyCompile,10,1020797,0x32a34b578c0,54,Stats._checkModeProperty node:internal/fs/utils:523:46,0x217777b69b8,~
code-source-info,0x32a34b578c0,77,14310,14538,C0O14326C8O14357C10O14353C17O14381C19O14377C26O14410C28O14406C33O14428C34O14441C35O14507C42O14514C44O14512C50O14522C53O14535,,
code-creation,LazyCompile,10,1020904,0x32a34b579f0,16,StatsBase.isFile node:internal/fs/utils:422:38,0x217777b6448,~
code-source-info,0x32a34b579f0,77,10818,10869,C0O10838C7O10857C10O10838C15O10866,,
code-creation,LazyCompile,10,1022754,0x32a34b57c30,66,get search node:internal/url:947:13,0x217777a8018,~
code-source-info,0x32a34b57c30,74,26714,26914,C0O26724C5O26729C11O26753C23O26759C28O26753C29O26811C33O26816C35O26815C39O26801C44O26831C48O26859C53O26874C55O26884C56O26890C61O26901C65O26909,,
code-creation,LazyCompile,10,1022973,0x32a34b57da8,66,get hash node:internal/url:983:11,0x217777a8168,~
code-source-info,0x32a34b57da8,74,27683,27895,C0O27693C5O27698C11O27722C23O27728C28O27722C29O27783C33O27788C35O27787C39O27770C44O27803C48O27837C53O27852C55O27862C56O27868C61O27879C65O27890,,
code-creation,LazyCompile,10,1023288,0x32a34b57f68,210,set search node:internal/url:956:13,0x217777a8088,~
code-source-info,0x32a34b57f68,74,26930,27522,C0O26946C5O26951C11O26975C23O26981C28O26975C29O27027C33O27032C35O27031C39O27047C46O27056C52O27082C54O27093C59O27110C60O27120C64O27135C73O27149C75O27148C80O27145C86O27191C87O27201C93O27205C98O27214C108O27223C115O27263C117O27273C121O27286C130O27299C135O27296C139O27327C143O27350C154O27364C163O27398C171O27398C183O27350C188O27472C197O27494C199O27493C203O27472C209O27521,,
code-creation,LazyCompile,10,1023765,0x32a34b58190,41,toUSVString node:internal/util:59:21,0x29c54379990,~
code-source-info,0x32a34b58190,21,1402,1702,C0O1425C4O1579C11O1599C14O1579C20O1629C22O1646C24O1657C25O1661C30O1692C35O1668C40O1699,,
code-creation,LazyCompile,10,1023986,0x32a34b58318,173,set hash node:internal/url:992:11,0x217777a81d0,~
code-source-info,0x32a34b58318,74,27909,28425,C0O27923C5O27928C11O27952C23O27958C28O27952C29O28004C33O28009C35O28008C39O28059C44O28082C46O28102C47O28115C51O28130C60O28144C62O28143C67O28140C71O28175C72O28182C73O28195C74O28203C80O28207C85O28216C95O28223C102O28259C104O28272C108O28283C117O28296C122O28293C126O28325C137O28337C146O28370C154O28370C166O28325C172O28424,,
code-creation,LazyCompile,10,1024145,0x32a34b58510,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1055:39,0xb9fe8e7eb8,~
code-source-info,0x32a34b58510,412,35186,35351,C0O35205C7O35214C12O35233C19O35242C24O35268C31O35277C36O35297C43O35303C48O35297C50O35350,,
code-creation,LazyCompile,10,1024338,0x32a34b586f8,64,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:107:39,0xb9fe8ebf88,~
code-source-info,0x32a34b586f8,413,3611,3822,C0O3646C7O3646C13O3663C20O3698C23O3723C28O3668C35O3739C36O3751C37O3755C42O3786C46O3778C58O3795C63O3819,,
code-creation,LazyCompile,10,1024460,0x32a34b58c60,47,toString node:internal/url:747:11,0x217777a7888,~
code-source-info,0x32a34b58c60,74,21479,21588,C0O21489C5O21494C11O21518C23O21524C28O21518C29O21558C33O21570C35O21569C41O21578C46O21583,,
code-creation,LazyCompile,10,1024710,0x32a34b59038,280,getFileProtocolModuleFormat node:internal/modules/esm/get_format:55:37,0xb9fe8ebee8,~
code-source-info,0x32a34b59038,413,1651,2985,C0O1702C5O1702C10O1737C15O1737C20O1759C22O1767C27O1785C32O1792C39O1812C50O1849C51O1875C58O1893C62O1903C64O1915C66O1929C67O1935C74O1971C79O2070C83O2088C84O2105C85O2128C88O2137C93O2141C100O2161C107O2181C112O2213C117O2213C122O2269C127O2269C132O2317C139O2338C142O2354C147O2338C156O2317C162O2387C167O2458C171O2554C182O2533C191O2631C201O2608C207O2684C216O2810C229O2828C239O2771C243O2862C259O2868C264O2862C265O2937C270O2944C279O2982,,
code-creation,LazyCompile,10,1025046,0x32a34b593c0,275,extname node:path:836:10,0x351f86ef9c8,~
code-source-info,0x32a34b593c
code-creation,LazyCompile,10,1025257,0x32a34b59650,13,getPackageType node:internal/modules/esm/resolve:804:24,0xb9fe8e7be8,~
code-source-info,0x32a34b59650,412,26872,26965,C0O26905C3O26905C8O26957C12O26962,,
code-creation,LazyCompile,10,1025411,0x32a34b598a8,173,getPackageScopeConfig node:internal/modules/esm/resolve:228:31,0xb9fe8e7648,~
code-source-info,0x32a34b598a8,412,6869,7968,C0O6906C13O6906C19O7005C24O7020C32O7024C39O7102C41O7136C46O7153C49O7153C54O7136C60O7262C66O7270C68O7291C69O7326C72O7347C85O7364C91O7573C96O7605C100O7582C105O7615C107O6946C110O7654C115O7654C120O7710C127O7728C132O7776C137O7798C142O7842C147O7867C154O7887C159O7904C164O7904C170O7944C172O7965,,
code-creation,LazyCompile,10,1025861,0x32a34b59d48,331,getPackageConfig node:internal/modules/esm/resolve:172:26,0xb9fe8e75f8,~
code-source-info,0x32a34b59d48,412,5398,6761,C0O5444C5O5461C10O5461C16O5475C18O5510C20O5526C21O5550C26O5568C31O5568C37O5578C42O5590C44O5645C51O5665C56O5706C61O5730C66O5778C71O5805C78O5829C83O5846C88O5846C94O5877C96O5898C97O5913C102O5940C107O5954C115O5952C125O5999C137O6058C144O6069C163O6096C168O6110C174O6096C178O6094C185O6143C192O6005C197O5999C198O6175C203O6184C208O6190C213O6196C218O6229C223O6257C233O6310C235O6334C241O6364C243O6385C249O6415C251O6490C253O6499C260O6520C265O6536C268O6578C275O6596C281O6626C287O6637C293O6648C299O6659C305O6673C312O6691C317O6708C322O6708C328O6737C330O6758,,
code-creation,LazyCompile,10,1026213,0x32a34b5a120,36,validateOutput node:internal/modules/esm/loader:840:28,0x32a34b50280,~
code-source-info,0x32a34b5a120,408,25593,25838,C0O25633C10O25702C28O25708C33O25702C35O25837,,
code-creation,LazyCompile,10,1026340,0x32a34b5a248,80,has node:internal/modules/esm/module_map:37:6,0xb9fe8e1260,~
code-source-info,0x32a34b5a248,409,1295,1453,C11O1308C18O1336C28O1336C33O1369C43O1369C48O1404C50O1417C61O1417C71O1427C78O1434C79O1448,,
tick,0x7fffad96d1c4,1026460,0,0x0,3,0x7ff6d893c890,0x7ff6d8e4f871,0x32a34b555d1,0x32a34b551c8,0x32a34b51c36,0x32a34b51350,0x32a34b506c9,0x32a34b4ff2a,0x32a34b4fb8a,0x32a34b4d697,0x32a34b4b9d7,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,Function,11,1026514,0x7ff658f8dc40,332,URLContext node:internal/url:161:14,0x217777a6e40,^
code-source-info,0x7ff658f8dc40,74,3883,4105,,,
code-creation,Function,11,1026581,0x7ff658f8de40,136,hasHooks node:internal/async_hooks:470:18,0x29c54374180,^
code-source-info,0x7ff658f8de40,19,16490,16538,,,
code-creation,Function,11,1026677,0x7ff658f8df80,104,isEmpty node:internal/fixed_queue:67:10,0x31522b10d10,^
code-source-info,0x7ff658f8df80,40,3150,3197,,,
code-creation,Function,11,1026747,0x7ff658f8e080,320,isURLThis node:internal/url:631:19,0x217777a7610,^
code-source-info,0x7ff658f8e080,74,18132,18223,,,
code-creation,Function,11,1026838,0x7ff658f8e240,1844,getPathFromURLWin32 node:internal/url:1429:29,0x217777a8698,^
code-source-info,0x7ff658f8e240,74,40209,41607,,,
code-creation,Function,11,1026889,0x7ff658f8ea00,152,isUint8Array node:internal/util/types:13:22,0x29c5437e448,^
code-source-info,0x7ff658f8ea00,23,269,356,,,
code-creation,Function,11,1026942,0x7ff658f8eb40,196,isURLInstance node:internal/url:1561:23,0x217777a8828,^
code-source-info,0x7ff658f8eb40,74,45314,45413,,,
code-creation,Function,11,1027029,0x7ff658f8ecc0,548,handleErrorFromBinding node:internal/fs/utils:344:32,0x217777b6278,^
code-source-info,0x7ff658f8ecc0,77,8329,8840,,,
code-creation,Function,11,1027089,0x7ff658f8ef80,260,getOwnPropertyValueOrDefault node:internal/validators:148:38,0x29c5437d310,^
code-source-info,0x7ff658f8ef80,22,4505,4653,,,
code-creation,Function,11,1027143,0x7ff658f8f140,268, node:internal/url:653:21,0x217777a7748,^
code-source-info,0x7ff658f8f140,74,18770,18847,,,
code-creation,Function,11,1027204,0x7ff658f8f300,844, node:internal/validators:164:3,0x29c5437d360,^
code-source-info,0x7ff658f8f300,22,4877,5436,,,
code-creation,LazyCompile,10,1027409,0x32a34b5a910,78,get node:internal/modules/esm/module_map:18:6,0xb9fe8e11c0,~
code-source-info,0x32a34b5a910,409,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,1027606,0x32a34b5ab00,111,#createModuleJob node:internal/modules/esm/loader:466:19,0xb9fe8de018,~
code-source-info,0x32a34b5ab00,408,14106,14995,C0O14106C17O14179C22O14664C31O14707C37O14707C42O14766C70O14766C76O14919C79O14924C84O14934C92O14960C103O14934C108O14979C110O14990,,
code-creation,LazyCompile,10,1027991,0x32a34b5ae20,196,ModuleJob node:internal/modules/esm/module_job:53:14,0xb9fe8e20c0,~
code-source-info,0x32a34b5ae20,410,1308,3117,C0O1308C27O1341C32O1341C50O1419C55O1431C59O1446C64O1468C68O1493C73O1505C77O1520C82O1536C86O1557C90O1569C94O1707C101O1728C104O1757C113O1766C122O1771C135O1728C140O1726C144O1878C149O2793C152O2807C155O2805C159O2917C169O2944C178O2952C181O2917C186O3082C190O3100C195O3116,,
code-creation,LazyCompile,10,1028346,0x32a34b5b878,194,moduleProvider node:internal/modules/esm/loader:467:28,0x32a34b5aa28,~
code-source-info,0x32a34b5b878,408,14179,14636,C10O14179C18O14299C21O14310C26O14315C33O14331C39O14348C43O14310C57O14299C80O14236C85O14258C90O14280C95O14405C102O14417C107O14417C113O14444C115O14472C130O14478C135O14472C136O14553C158O14560C171O14629,,
code-creation,LazyCompile,10,1028838,0x32a34b5be98,592,load node:internal/modules/esm/loader:567:13,0xb9fe8de248,~
code-source-info,0x32a34b5be
tick,0x7fffad8fb6c3,1029080,0,0x0,3,0x7ff6d892cc40,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,LazyCompile,10,1029230,0x32a34b5c340,153,validateArgs node:internal/modules/esm/loader:578:26,0x32a34b5bb70,~
code-source-info,0x32a34b5c340,408,17920,18708,C3O17945C9O17957C16O17976C22O18133C31O18179C47O18139C52O18133C53O18352C56O18362C61O18372C66O18372C76O18414C85O18414C94O18462C103O18511C119O18468C124O18462C125O18640C129O18649C138O18672C146O18649C152O18707,,
code-creation,LazyCompile,10,1029579,0x32a34b5c6e0,234,defaultLoad node:internal/modules/esm/load:72:27,0xb9fe8f56b0,~
code-source-info,0x32a34b5c6e0,419,2270,2805,C10O2270C18O2308C21O2324C26O2368C31O2381C36O2410C41O2437C46O2452C59O2446C87O2494C101O2494C106O2550C108O2567C115O2596C120O2623C124O2648C129O2675C132O2708C145O2702C168O2678C173O2691C178O2744C185O2758C191O2771C197O2789C211O2802,,
tick,0x7fffaba961f0,1029811,0,0x0,3,0x7ff6d893c890,0x32a34b5c745,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,LazyCompile,10,1029861,0x32a34b5cc68,150,validateAssertions node:internal/modules/esm/assert:55:28,0xb9fe8e4148,~
code-source-info,0x32a34b5cc68,411,1835,2993,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2979C143O2939C149O2992,,
code-creation,LazyCompile,10,1030159,0x32a34b5d018,446,getSource node:internal/modules/esm/load:32:25,0xb9fe8f5660,~
code-source-info,0x32a34b5d018,419,1031,2123,C10O1031C18O1066C25O1066C31O1101C34O1113C36O1135C43O1144C48O1164C53O1179C65O1173C95O1223C102O1232C107O1266C114O1286C117O1311C122O1266C128O1327C130O1348C137O1354C142O1348C143O1403C150O1414C157O1435C164O1455C167O1455C174O1481C183O1444C191O1520C197O1568C204O1577C209O1605C216O1614C221O1651C226O1657C239O1651C265O1711C277O1701C303O1740C310O1796C315O1819C321O1860C335O1860C340O1927C353O1933C358O1927C359O2003C366O2013C375O2032C380O2039C385O2048C390O2048C396O2089C403O2098C409O2111C423O2120,,
code-creation,LazyCompile,10,1030554,0x32a34b5d410,188,readFile node:internal/fs/promises:863:24,0xb9fe8f8b28,~
code-source-info,0x32a34b5d410,420,24766,25098,C10O24766C18O24787C23O24808C28O24797C35O24857C44O24875C46O24895C48O24884C53O24912C56O24919C69O24949C70O24955C73O24976C78O24955C82O25001C96O25007C109O25001C135O25035C141O25056C147O25088C152O25042C165O25095,,
code-creation,LazyCompile,10,1030720,0x32a34b5f2c0,56,checkAborted node:internal/fs/promises:377:22,0xb9fe8f7e58,~
code-source-info,0x32a34b5f2c0,420,8939,9041,C0O8953C7O8963C16O8979C23O9000C35O9026C48O8985C53O8979C55O9040,,
code-creation,LazyCompile,10,1030865,0x32a34b5f488,178,open node:internal/fs/promises:507:20,0xb9fe8f8038,~
code-source-info,0x32a34b5f488,420,13258,13571,C10O13258C18O13283C23O13290C29O13337C34O13337C39O13362C55O13369C62O13408C69O13442C72O13450C79O13465C82O13476C87O13476C95O13553C104O13450C117O13436C142O13415C155O13568,,
tick,0x7fffad96d144,1031776,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1033763,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1036135,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1037754,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1041114,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1042735,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1044731,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1046726,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1048721,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1050747,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1053551,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1057982,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1058492,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1059687,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1061694,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1063732,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1066086,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1067683,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1069690,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1081063,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1081249,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1082907,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1084622,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1087765,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1090401,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1091647,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1093642,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1095609,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1097645,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1099613,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1101595,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1103576,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1106079,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1111109,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1111167,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1111555,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1113645,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1115789,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1117555,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1119539,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1123382,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1127880,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1130341,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1131581,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1133608,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
tick,0x7fffad96d144,1135505,1,0x7ff6d8312c40,6,0x7ff6d8d6aa80,0x32a34b5f4f0,0x32a34b5d470,0x32a34b5d04d,0x32a34b5c764,0x32a34b51350,0x32a34b5bf32,0x32a34b5b8a3,0x32a34b5aea7,0x32a34b5ab46,0x32a34b4ffa8,0x7ff6d8e073b3,0x7ff6d828c750,0x32a34b4c5f5
code-creation,LazyCompile,10,1135861,0x32a34b5f808,229,link node:internal/modules/esm/module_job:66:18,0x32a34b5aca0,~
code-source-info,0x32a34b5f808,410,1878,2734,C4O1878C26O1899C36O1924C48O1913C73O1911C77O1946C89O1958C98O1976C100O1965C104O1946C108O2298C110O2298C112O2326C117O2331C122O2338C132O2338C138O2611C140O2648C147O2654C159O2648C184O2689C194O2696C206O2727,,
code-creation,LazyCompile,10,1136082,0x32a34b5fa68,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:412:37,0x29c54347938,~
code-source-info,0x32a34b5fa68,12,12258,12346,C0O12290C13O12290C18O12346,,
code-creation,LazyCompile,10,1136344,0x32a34b5fc38,216,set node:internal/modules/esm/module_map:23:6,0xb9fe8e1210,~
code-source-info,0x32a34b5fc38,409,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,1136583,0x32a34b5fe40,10, node:internal/modules/esm/module_map:9:63,0xb9fe8e1120,~
code-source-info,0x32a34b5fe40,409,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,1136690,0x32a34b5ff10,10, node:internal/modules/esm/loader:537:15,0x32a34b4f950,~
code-source-info,0x32a34b5ff10,408,16657,16675,C0O16670C5O16670C9O16675,,
code-creation,LazyCompile,10,1136937,0x32a34b60340,431,run node:internal/modules/esm/module_job:188:12,0xb9fe8e21b0,~
code-source-info,0x32a34b60340,410,6984,8197,C10O6984C18O7005C23O7005C35O6994C58O7041C61O7072C66O7108C71O7115C76O7115C90O7097C128O7175C133O7180C143O7187C152O7222C158O7260C163O7222C169O7281C182O7291C186O7328C196O7360C204O7332C211O7395C224O7405C228O7495C235O7526C240O7533C248O7495C259O7565C267O7615C272O7622C277O7565C283O7627C294O7652C299O7707C304O7735C309O7742C314O7708C320O7775C327O7780C332O7807C346O7956C360O7898C366O7979C372O8059C378O7817C382O8140C384O8140C385O8161C390O8183C408O8192,,
code-creation,LazyCompile,10,1137198,0x32a34b60670,24,instantiate node:internal/modules/esm/module_job:98:14,0xb9fe8e2110,~
code-source-info,0x32a34b60670,410,3134,3273,C0O3153C6O3215C11O3215C15O3208C19O3255C23O3268,,
code-creation,LazyCompile,10,1137704,0x32a34b60cc8,929,_instantiate node:internal/modules/esm/module_job:105:21,0xb9fe8e2160,~
code-source-info,0x32a34b60cc8,410,3297,6969,C4O3297C29O3327C37O3327C42O3327C44O3380C48O3380C50O3644C54O3650C67O3644C97O3702C105O3730C111O3753C118O3768C126O3805C136O3805C142O3833C147O3881C153O3888C159O3906C165O3864C172O3945C178O3952C184O3952C203O4002C215O4002C219O4347C227O4352C236O4389C244O4415C254O4389C261O4527C273O4550C283O4527C289O4595C304O4666C313O4595C319O4745C337O4847C343O4745C350O4717C358O4736C366O4907C372O4914C378O4914C393O4896C418O4879C423O4990C428O5300C434O5307C440O5307C454O5289C479O5265C490O5413C492O5424C497O5477C499O5487C503O5812C517O5812C523O5901C529O5937C546O5937C552O6018C562O6047C581O6107C592O6087C599O6169C606O6247C617O6365C632O6402C640O6454C659O6326C662O6028C666O6525C678O6548C688O6525C694O6573C706O6605C714O6585C718O6627C726O6637C734O6637C739O6635C743O6700C745O6700C746O6751C778O6734C809O6734C812O6912C816O6941C818O6939C822O6723C903O6968,,
code-creation,LazyCompile,10,1139057,0x32a34b61328,146,addJobsToDependencyGraph node:internal/modules/esm/module_job:107:38,0x32a34b60a08,~
code-source-info,0x32a34b61328,410,3380,3637,C10O3380C18O3410C23O3426C28O3426C35O3453C44O3460C45O3477C50O3489C55O3489C60O3551C72O3535C98O3566C107O3604C110O3573C123O3630,,
code-creation,LazyCompile,10,1140684,0x32a34b61690,627,processPromiseRejections node:internal/process/promises:220:34,0x31522b0f778,~
script-source,39,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst multipleResolvesDeprecate = deprecate(\x0d\n  () => {}\x2C\x0d\n  'The multipleResolves event has been deprecated.'\x2C\x0d\n  'DEP0160'\x0d\n);\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    if (process.emit('multipleResolves'\x2C type\x2C promise\x2C reason)) {\x0d\n      multipleResolvesDeprecate();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x32a34b
code-creation,LazyCompile,10,1142298,0x32a34b62638,25,setHasRejectionToWarn node:internal/process/promises:77:31,0x31522b0f160,~
code-source-info,0x32a34b62638,39,2220,2282,C0O2233C7O2242C12O2265C19O2263C24O2281,,
code-creation,LazyCompile,10,1142584,0x32a34b62830,383,channel.onread node:internal/child_process:600:28,0x167f8a7ab30,~
code-source-info,0x32a34b
code-creation,LazyCompile,10,1143030,0x32a34b62b88,277,parseChannelMessages node:internal/child_process/serialization:137:24,0x167f8a7e728,~
code-source-info,0x32a34b62b88,401,4520,5302,C10O4520C15O4520C35O4520C39O4560C45O4567C50O4574C51O4581C52O4589C54O4601C56O4600C61O4639C63O4647C68O4669C76O4665C81O4663C85O4719C92O4748C94O4747C98O4764C103O4764C112O4719C118O4826C122O4833C126O4918C128O4924C132O4950C133O4972C138O4988C140O4996C149O5012C152O5009C158O5050C162O5070C164O5069C169O5091C172O5083C175O5060C179O5116C181O5121C183O5121C188O5156C195O5178C199O5162C210O5156C230O5156C234O5143C239O5103C242O5191C244O5199C249O5212C253O5243C255O5271C257O5270C261O5284C267O5291C271O5261C276O5301,,
code-creation,LazyCompile,10,1143372,0x32a34b62e38,71,StringDecoder node:string_decoder:84:23,0x351f86d4850,~
script-source,63,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  kIncompleteCharactersStart\x2C\x0d\n  kIncompleteCharactersEnd\x2C\x0d\n  kMissingBytes\x2C\x0d\n  kBufferedBytes\x2C\x0d\n  kEncodingField\x2C\x0d\n  kSize\x2C\x0d\n  decode\x2C\x0d\n  flush\x2C\x0d\n  encodings\x0d\n} = internalBinding('string_decoder');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\nconst isEncoding = Buffer[internalUtil.kIsEncodingSymbol];\x0d\n\x0d\nconst kNativeDecoder = Symbol('kNativeDecoder');\x0d\n\x0d\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\x0d\n// modules monkey-patch it to support additional encodings\x0d\n/**\x0d\n * Normalize encoding notation\x0d\n *\x0d\n * @param {string} enc\x0d\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\x0d\n *           | "base64" | "latin1" | "base64url"}\x0d\n * @throws {TypeError} Throws an error when encoding is invalid\x0d\n */\x0d\nfunction normalizeEncoding(enc) {\x0d\n  const nenc = internalUtil.normalizeEncoding(enc);\x0d\n  if (nenc === undefined) {\x0d\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\x0d\n      throw new ERR_UNKNOWN_ENCODING(enc);\x0d\n    return enc;\x0d\n  }\x0d\n  return nenc;\x0d\n}\x0d\n\x0d\nconst encodingsMap = {};\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\n/**\x0d\n * StringDecoder provides an interface for efficiently splitting a series of\x0d\n * buffers into a series of JS strings without breaking apart multi-byte\x0d\n * characters.\x0d\n *\x0d\n * @param {string} [encoding=utf-8]\x0d\n */\x0d\nfunction StringDecoder(encoding) {\x0d\n  this.encoding = normalizeEncoding(encoding);\x0d\n  this[kNativeDecoder] = Buffer.alloc(kSize);\x0d\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\x0d\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @returns {string}\x0d\n * @throws {TypeError} Throws when buf is not in one of supported types\x0d\n */\x0d\nStringDecoder.prototype.write = function write(buf) {\x0d\n  if (typeof buf === 'string')\x0d\n    return buf;\x0d\n  if (!ArrayBufferIsView(buf))\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buf);\x0d\n  if (!this[kNativeDecoder]) {\x0d\n    throw new ERR_INVALID_THIS('StringDecoder');\x0d\n  }\x0d\n  return decode(this[kNativeDecoder]\x2C buf);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns any remaining input stored in the internal buffer as a string.\x0d\n * After end() is called\x2C the stringDecoder object can be reused for new\x0d\n * input.\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} [buf]\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.end = function end(buf) {\x0d\n  let ret = '';\x0d\n  if (buf !== undefined)\x0d\n    ret = this.write(buf);\x0d\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\x0d\n    ret += flush(this[kNativeDecoder]);\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n/* Everything below this line is undocumented legacy stuff. */\x0d\n/**\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @param {number} offset\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.text = function text(buf\x2C offset) {\x0d\n  this[kNativeDecoder][kMissingBytes] = 0;\x0d\n  this[kNativeDecoder][kBufferedBytes] = 0;\x0d\n  return this.write(buf.slice(offset));\x0d\n};\x0d\n\x0d\nObjectDefineProperties(StringDecoder.prototype\x2C {\x0d\n  lastChar: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\x0d\n                                         kIncompleteCharactersStart\x2C\x0d\n                                         kIncompleteCharactersEnd);\x0d\n    }\x0d\n  }\x2C\x0d\n  lastNeed: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kMissingBytes];\x0d\n    }\x0d\n  }\x2C\x0d\n  lastTotal: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kBufferedBytes] +\x0d\n             this[kNativeDecoder][kMissingBytes];\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nexports.StringDecoder = StringDecoder;\x0d\n
code-source-info,0x32a34b62e38,63,2814,2995,C0O2830C3O2846C7O2844C11O2878C13O2883C18O2901C21O2908C28O2914C31O2908C36O2899C40O2925C42O2930C44O2929C50O2946C55O2964C58O2982C62O2976C65O2962C70O2994,,
code-creation,LazyCompile,10,1144086,0x32a34b63528,73,normalizeEncoding node:string_decoder:63:27,0x351f86d4688,~
code-source-info,0x32a34b63528,63,2218,2462,C0O2242C5O2255C10O2255C16O2282C18O2313C23O2324C30O2339C32O2335C39O2354C42O2361C47O2361C54O2385C61O2391C66O2385C67O2427C69O2438C70O2447C72O2459,,
tick,0x7ff6d937ca27,1144237,0,0x0,3
code-creation,LazyCompile,10,1144265,0x32a34b636c8,73,alloc node:buffer:365:30,0x20182dafc98,~
code-source-info,0x32a34b636c8,30,10944,11182,C0O10972C5O10972C9O10993C14O11024C20O11038C25O11062C30O11062C35O11093C40O11124C54O11100C59O11142C60O11151C67O11158C72O11179,,
code-creation,LazyCompile,10,1144441,0x32a34b63880,88,write node:string_decoder:98:47,0x351f86d48a0,~
code-source-info,0x32a34b63880,63,3345,3727,C0O3356C6O3390C8O3401C9O3405C14O3410C20O3439C38O3445C43O3439C44O3596C46O3606C48O3605C53O3630C63O3636C68O3630C69O3683C76O3702C78O3701C82O3690C87O3724,,
code-creation,LazyCompile,10,1144596,0x32a34b639f0,80,isInternal node:internal/child_process:961:20,0x167f8a55c98,~
code-source-info,0x32a34b639f0,394,27825,28123,C0O27840C3O27856C12O27936C20O27975C25O27979C32O27988C35O28004C39O27986C46O28025C49O28054C58O28062C61O28078C66O28025C74O28103C76O28086C79O28120,,
code-creation,LazyCompile,10,1144848,0x32a34b63b50,51,handleMessage node:internal/child_process:947:25,0x167f8a7aa40,~
code-source-info,0x32a34b63b50,394,27517,27720,C0O27552C3O27564C9O27580C10O27587C11O27613C22O27664C27O27672C44O27672C50O27719,,
code-creation,LazyCompile,10,1145045,0x32a34b63ce8,115,emit node:internal/child_process:935:16,0x167f8a7a9f0,~
code-source-info,0x32a34b63ce8,394,27209,27489,C0O27241C5O27263C13O27283C21O27283C28O27318C31O27325C45O27325C50O27362C51O27369C52O27384C62O27418C71O27426C73O27425C86O27453C95O27460C104O27469C108O27384C114O27488,,
code-creation,LazyCompile,10,1145249,0x32a34b63e88,112,FileHandle node:internal/fs/promises:134:14,0xb9fe8f8b78,~
code-source-info,0x32a34b63e88,420,3315,3488,C3O3335C11O3335C40O3349C45O3354C50O3363C54O3382C59O3387C67O3394C69O3418C77O3392C81O3434C86O3439C91O3446C95O3456C100O3461C104O3476C111O3487,,
code-creation,LazyCompile,10,1145376,0x32a34b64000,63,MixedEventEmitter node:internal/event_target:1017:16,0x131112048c0,~
code-source-info,0x32a34b64000,46,27591,27725,C0O27591C8O27610C15O27617C21O27653C25O27662C29O27653C41O27676C48O27698C54O27676C62O27724,,
code-creation,LazyCompile,10,1145831,0x32a34b642e8,595,readFileHandle node:internal/fs/promises:417:30,0xb9fe8f7ef8,~
code-source-info,0x32a34b642e
tick,0x7fffad96d1c4,1146102,0,0x0,3,0x7ff6d893c890,0x32a34b628d4
code-creation,LazyCompile,10,1146151,0x32a34b64728,8,get fd node:internal/fs/promises:147:9,0xb9fe8f8c30,~
code-source-info,0x32a34b64728,420,3565,3597,C0O3575C2O3587C4O3586C7O3592,,
code-creation,LazyCompile,10,1146371,0x32a34b64930,79,handleFdClose node:internal/fs/promises:344:29,0xb9fe8f7db8,~
code-source-info,0x32a34b64930,420,8080,8432,C0O8080C23O8112C30O8146C43O8119C56O8429,,
code-creation,LazyCompile,10,1146645,0x32a34b64ab8,19,allocUnsafeSlow node:buffer:388:50,0x20182dafd38,~
code-source-info,0x32a34b64ab8,30,11717,11785,C0O11729C5O11729C9O11750C14O11757C18O11782,,
code-creation,LazyCompile,10,1146777,0x32a34b64be0,71,createUnsafeBuffer node:internal/buffer:1059:28,0x20182dbcec0,~
code-source-info,0x32a34b64be0,31,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,1147077,0x32a34b64d78,36, node:internal/fs/promises:347:5,0x32a34b64800,~
code-source-info,0x32a34b64d78,420,8166,8225,C0O8166C9O8178C21O8199C30O8178C35O8225,,
code-creation,LazyCompile,10,1147291,0x32a34b65070,248,close node:internal/fs/promises:207:11,0xb9fe8faee8,~
code-source-info,0x32a34b65070,420,4751,5572,C0O4764C7O4773C9O4772C15O4778C20O4795C27O4802C30O4819C31O4834C38O4843C40O4842C45O4868C52O4880C54O4879C57O4895C58O4910C65O4915C73O4921C77O4930C84O4939C86O4938C91O4946C96O4962C103O4967C108O4972C112O4985C119O4990C126O5007C136O5050C138O5049C142O5059C147O5059C157O5007C162O5005C168O5151C175O5156C182O5173C189O5215C199O5211C210O5173C215O5171C219O5515C222O5520C230O5520C235O5540C242O5552C244O5551C247O5567,,
code-creation,LazyCompile,10,1147549,0x32a34b65438,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:424:43,0x29c543479c8,~
code-source-info,0x32a34b65438,12,12854,13134,C0O12854C13O12990C27O12990C32O13134,,
code-creation,LazyCompile,10,1147703,0x32a34b655d0,46, node:internal/per_context/primordials:427:15,0x32a34b65388,~
code-source-info,0x32a34b655d0,12,13002,13129,C0O13119C14O13017C20O13092C28O13099C34O13118C39O13119C45O13129,,
code-creation,LazyCompile,10,1147870,0x32a34b65710,27,SafePromise node:internal/per_context/primordials:408:16,0x29c543478e8,~
code-source-info,0x32a34b65710,12,12178,12209,C3O12191C7O12197C11O12191C26O12208,,
code-creation,LazyCompile,10,1147959,0x32a34b65808,22, node:internal/per_context/primordials:428:21,0x32a34b65518,~
code-source-info,0x32a34b65808,12,13033,13082,C0O13043C16O13043C21O13082,,
tick,0x7ff6d86529c1,1148096,0,0x0,3
code-creation,LazyCompile,10,1148205,0x32a34b658f8,17, node:internal/fs/promises:221:9,0x32a34b64e58,~
code-source-info,0x32a34b658f8,420,5077,5119,C0O5085C7O5090C11O5105C16O5118,,
code-creation,LazyCompile,10,1148298,0x32a34b659d0,3, node:internal/fs/promises:347:51,0x32a34b64cc8,~
code-source-info,0x32a34b659d0,420,8212,8224,C0O8218C2O8224,,
code-creation,LazyCompile,10,1148525,0x32a34b65d08,36,validateOutput node:internal/modules/esm/loader:604:28,0x32a34b5bbc0,~
code-source-info,0x32a34b65d08,408,18738,18983,C0O18778C10O18847C28O18853C33O18847C35O18982,,
code-creation,LazyCompile,10,1148940,0x32a34b66068,196,moduleStrategy node:internal/modules/esm/translators:114:56,0x13111207970,~
code-source-info,0x32a34b66068,422,3260,3690,C0O3260C27O3287C40O3287C45O3332C50O3341C56O3363C66O3363C71O3400C83O3436C88O3400C92O3462C113O3462C119O3511C126O3522C131O3534C136O3538C141O3575C153O3638C157O3534C163O3673C173O3687,,
code-creation,LazyCompile,10,1149167,0x32a34b66de8,83,assertBufferSource node:internal/modules/esm/translators:78:28,0x13111207740,~
code-source-info,0x32a34b66de8,422,2213,2620,C0O2248C10O2300C11O2307C12O2364C15O2364C19O2324C24O2343C29O2384C35O2411C41O2442C42O2449C43O2458C50O2511C77O2464C82O2458,,
code-creation,LazyCompile,10,1149296,0x32a34b66f40,31,lazyTypes node:internal/modules/esm/translators:22:19,0x131112076a0,~
code-source-info,0x32a34b66f40,422,417,514,C0O425C6O446C10O460C11O464C17O480C24O478C30O511,,
code-creation,LazyCompile,10,1149433,0x32a34b67058,72,stringify node:internal/modules/esm/translators:94:19,0x13111207790,~
code-source-info,0x32a34b67058,422,2642,2847,C0O2654C6O2684C8O2696C9O2700C20O2700C25O2755C33O2788C36O2784C45O2804C50O2763C56O2816C61O2831C66O2831C71O2844,,
code-creation,LazyCompile,10,1149675,0x32a34b67248,211,TextDecoder node:internal/encoding:383:16,0x31522b05bf8,~
script-source,33,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': kEnumerableProperty\x2C\x0d\n    'encodeInto': kEnumerableProperty\x2C\x0d\n    'encoding': kEnumerableProperty\x2C\x0d\n    [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = kEmptyObject) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = kEmptyObject) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nconst sharedProperties = ObjectGetOwnPropertyDescriptors({\x0d\n  get encoding() {\x0d\n    validateDecoder(this);\x0d\n    return this[kEncoding];\x0d\n  }\x2C\x0d\n\x0d\n  get fatal() {\x0d\n    validateDecoder(this);\x0d\n    return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n  }\x2C\x0d\n\x0d\n  get ignoreBOM() {\x0d\n    validateDecoder(this);\x0d\n    return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n  }\x2C\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateDecoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const constructor = getConstructorOf(this) || TextDecoder;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n    obj.encoding = this.encoding;\x0d\n    obj.fatal = this.fatal;\x0d\n    obj.ignoreBOM = this.ignoreBOM;\x0d\n    if (opts.showHidden) {\x0d\n      obj[kFlags] = this[kFlags];\x0d\n      obj[kHandle] = this[kHandle];\x0d\n    }\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return `${constructor.name} ${inspect(obj)}`;\x0d\n  }\x0d\n});\x0d\nconst propertiesValues = ObjectValues(sharedProperties);\x0d\nfor (let i = 0; i < propertiesValues.length; i++) {\x0d\n  // We want to use null-prototype objects to not rely on globally mutable\x0d\n  // %Object.prototype%.\x0d\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n}\x0d\nsharedProperties[inspect].enumerable = false;\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: kEnumerableProperty\x2C\x0d\n  ...sharedProperties\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x32a34b67248,33,10775,11595,C19O10806C26O10829C30O10862C40O10877C48O10862C53O11013C58O11013C63O11052C65O11084C74O11090C79O11084C80O11153C82O11163C86O11213C99O11221C108O11274C121O11286C130O11351C135O11351C141O11384C143O11419C152O11425C157O11419C158O11476C162O11481C166O11491C170O11506C174O11511C179O11520C183O11537C187O11542C192O11550C196O11566C200O11571C205O11582C210O11594,,
code-creation,LazyCompile,10,1152501,0x32a34b68718,55,getEncodingFromLabel node:internal/encoding:317:30,0x31522b05960,~
code-source-info,0x32a34b68718,33,9041,9195,C0O9066C5O9076C10O9076C16O9091C18O9114C20O9125C21O9129C26O9146C34O9176C39O9176C44O9150C49O9146C54O9192,,
code-creation,LazyCompile,10,1152832,0x32a34b68a28,232,decode node:internal/encoding:412:11,0x31522b05cb8,~
code-source-info,0x32a34b68a28,33,11611,12467,C8O11620C23O11637C30O11660C35O11660C39O11690C46O11694C52O11730C57O11738C61O11750C66O11751C74O11778C81O11783C87O11820C107O11826C112O11820C113O12000C123O12015C131O12000C136O12151C138O12161C142O12209C158O12222C164O12266C173O12279C175O12278C185O12266C191O12311C195O12351C202O12400C212O12357C217O12351C218O12443C226O12443C231O12460,,
code-creation,LazyCompile,10,1153056,0x32a34b68c50,37,validateDecoder node:internal/encoding:68:25,0x31522b058c0,~
code-source-info,0x32a34b68c50,33,1416,1520,C0O1427C7O1450C9O1449C14O1460C19O1475C29O1481C34O1475C36O1519,,
code-creation,LazyCompile,10,1153246,0x32a34b68da0,12,slice node:buffer:608:12,0x20182db0568,~
code-source-info,0x32a34b68da0,30,17717,17763,C0O17742C5O17742C11O17763,,
code-creation,LazyCompile,10,1153392,0x32a34b68e88,10, node:internal/modules/esm/translators:42:63,0x13111207920,~
code-source-info,0x32a34b68e88,422,1058,1085,C0O1071C2O1077C9O1084,,
code-creation,Script,10,1153591,0x32a34b691e8,72, file:///C:/Users/Usuario/Desktop/CoderHouse/BackEnd/EntregasBackEnd/random.js:1:1,0x32a34b68ff0,~
script-source,438,file:///C:/Users/Usuario/Desktop/CoderHouse/BackEnd/EntregasBackEnd/random.js,function randomNumbers(cant) {\x0d\n    console.log(`rcant = ${cant}`)\x0d\n    const generatedNumbers = [];\x0d\n    const min = 1;\x0d\n    const max = 1000;\x0d\n    for (let i = 0; i < cant; i++) {\x0d\n        const numeros = {numeros: Math.floor(Math.random() * (max -min) + min)};\x0d\n        generatedNumbers.push(numeros);\x0d\n    }\x0d\n    console.log(generatedNumbers)\x0d\n    return generatedNumbers\x0d\n}\x0d\n\x0d\nprocess.on('message'\x2C (passCant) => {\x0d\n    console.log(passCant);\x0d\n    if (passCant.length > 0 ) {\x0d\n        process.send(randomNumbers(passCant));\x0d\n        console.log(randomNumbers(passCant))\x0d\n    }\x0d\n});
code-source-info,0x32a34b691e8,438,0,586,C10O0C23O0C43O0C47O382C51O390C64O390C71O586,,
code-creation,LazyCompile,10,1153939,0x32a34b694e8,33,primordials.SafePromiseAll node:internal/per_context/primordials:452:30,0x29c54347aa8,~
code-source-info,0x32a34b694e8,12,13753,13985,C0O13753C13O13882C27O13882C32O13985,,
code-creation,LazyCompile,10,1154056,0x32a34b69630,49, node:internal/per_context/primordials:455:15,0x32a34b69438,~
code-source-info,0x32a34b69630,12,13894,13980,C0O13970C7O13921C16O13925C25O13925C31O13921C37O13969C42O13970C48O13980,,
code-creation,LazyCompile,10,1154181,0x32a34b697c0,45,arrayToSafePromiseIterable node:internal/per_context/primordials:438:36,0x29c54347a58,~
code-source-info,0x32a34b697c0,12,13334,13576,C0O13334C9O13358C14O13374C23O13398C26O13424C31O13398C39O13358C44O13576,,
code-creation,LazyCompile,10,1154461,0x32a34b69b08,44,refCounted node:internal/child_process:537:13,0x167f8a56438,~
code-source-info,0x32a34b69b08,394,14612,14714,C0O14622C3O14632C9O14633C15O14639C22O14654C27O14682C29O14687C33O14696C38O14696C43O14713,,
code-creation,LazyCompile,10,1154666,0x32a34b69e18,15, node:internal/modules/esm/loader:538:15,0x32a34b4f9a0,~
code-source-info,0x32a34b69e18,408,16692,16729,C0O16695C5O16715C10O16715C14O16729,,
code-creation,LazyCompile,10,1155446,0x32a34b69f80,307,removeListener node:events:675:28,0x20182da3f20,~
code-source-info,0x32a34b69f
code-creation,LazyCompile,10,1155929,0x32a34b6a268,64,stopListeningIfSignal node:internal/process/signal:43:31,0x2c7d080ad98,~
code-source-info,0x32a34b6a268,129,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,1156057,0x32a34b6a3b0,30,onRemoveListener node:child_process:177:57,0x167f8a7a5f0,~
code-source-info,0x32a34b6a3b0,393,5416,5507,C0O5430C2O5439C9O5461C14O5479C19O5487C24O5487C29O5506,,
code-creation,LazyCompile,10,1156236,0x32a34b6a4d0,71, file:///C:/Users/Usuario/Desktop/CoderHouse/BackEnd/EntregasBackEnd/random.js:14:23,0x32a34b69110,~
code-source-info,0x32a34b6a4d0,438,404,584,C0O425C4O433C9O433C14O466C20O473C25O490C29O498C37O503C42O498C47O538C51O546C59O550C64O546C70O583,,
code-creation,LazyCompile,10,1156430,0x32a34b6a620,38,log node:internal/console/constructor:375:6,0x1b92a0bc560,~
code-source-info,0x32a34b6a620,107,11904,11990,C0O11904C3O11921C5O11926C7O11925C13O11943C18O11960C20O11959C24O11977C30O11942C37O11989,,
code-creation,LazyCompile,10,1156583,0x32a34b6a750,50,value node:internal/console/constructor:336:20,0x1b92a0bc400,~
code-source-info,0x32a34b6a750,107,10411,10587,C0O10440C2O10445C4O10444C8O10470C13O10464C19O10487C24O10487C29O10529C36O10549C44O10536C49O10580,,
code-creation,LazyCompile,10,1156710,0x32a34b6a870,27,get node:internal/console/constructor:208:14,0x30dafbdcd8,~
code-source-info,0x32a34b6a870,107,6133,6228,C0O6151C6O6164C9O6180C16O6171C22O6201C26O6215,,
code-creation,LazyCompile,10,1156960,0x32a34b6a9c8,96,value node:internal/console/constructor:314:20,0x1b92a0bc378,~
code-source-info,0x32a34b6a9c8,107,9807,10306,C0O9837C2O9842C4O9841C8O9862C10O9872C15O9910C21O9946C29O9997C34O9997C41O10013C48O10060C53O10071C58O10071C64O10089C66O10125C72O10160C74O10175C78O10204C80O10219C81O10238C87O10253C93O10276C95O10299,,
code-creation,LazyCompile,10,1157464,0x32a34b6ab88,38,formatWithOptions node:internal/util/inspect:2101:27,0x20182d98dc0,~
script-source,26,node:internal/util/inspect,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  BigIntPrototypeValueOf\x2C\x0d\n  BooleanPrototypeValueOf\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  DatePrototypeToISOString\x2C\x0d\n  DatePrototypeToString\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  FunctionPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGetSize\x2C\x0d\n  MapPrototypeEntries\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  MathSqrt\x2C\x0d\n  MathTrunc\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseFloat\x2C\x0d\n  NumberParseInt\x2C\x0d\n  NumberPrototypeValueOf\x2C\x0d\n  Object\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectPrototypePropertyIsEnumerable\x2C\x0d\n  ObjectSeal\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeToString\x2C\x0d\n  SafeStringIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SetPrototypeGetSize\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeNormalize\x2C\x0d\n  StringPrototypePadEnd\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  StringPrototypeValueOf\x2C\x0d\n  SymbolPrototypeToString\x2C\x0d\n  SymbolPrototypeValueOf\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n  Uint8Array\x2C\x0d\n  globalThis\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  getPromiseDetails\x2C\x0d\n  getProxyDetails\x2C\x0d\n  kPending\x2C\x0d\n  kRejected\x2C\x0d\n  previewEntries\x2C\x0d\n  getConstructorName: internalGetConstructorName\x2C\x0d\n  getExternalValue\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x0d\n} = internalBinding('util');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isError\x2C\x0d\n  join\x2C\x0d\n  removeColors\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isStackOverflowError\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isGeneratorFunction\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBuffer\x2C\x0d\n  isArgumentsObject\x2C\x0d\n  isBoxedPrimitive\x2C\x0d\n  isDataView\x2C\x0d\n  isExternal\x2C\x0d\n  isMap\x2C\x0d\n  isMapIterator\x2C\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isNativeError\x2C\x0d\n  isPromise\x2C\x0d\n  isSet\x2C\x0d\n  isSetIterator\x2C\x0d\n  isWeakMap\x2C\x0d\n  isWeakSet\x2C\x0d\n  isRegExp\x2C\x0d\n  isDate\x2C\x0d\n  isTypedArray\x2C\x0d\n  isStringObject\x2C\x0d\n  isNumberObject\x2C\x0d\n  isBooleanObject\x2C\x0d\n  isBigIntObject\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet hexSlice;\x0d\nlet internalUrl;\x0d\n\x0d\nfunction pathToFileUrlHref(filepath) {\x0d\n  internalUrl ??= require('internal/url');\x0d\n  return internalUrl.pathToFileURL(filepath).href;\x0d\n}\x0d\n\x0d\nconst builtInObjects = new SafeSet(\x0d\n  ArrayPrototypeFilter(\x0d\n    ObjectGetOwnPropertyNames(globalThis)\x2C\x0d\n    (e) => RegExpPrototypeExec(/^[A-Z][a-zA-Z0-9]+$/\x2C e) !== null\x0d\n  )\x0d\n);\x0d\n\x0d\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\x0d\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\x0d\n\x0d\n// These options must stay in sync with `getUserOptions`. So if any option will\x0d\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\x0d\nconst inspectDefaultOptions = ObjectSeal({\x0d\n  showHidden: false\x2C\x0d\n  depth: 2\x2C\x0d\n  colors: false\x2C\x0d\n  customInspect: true\x2C\x0d\n  showProxy: false\x2C\x0d\n  maxArrayLength: 100\x2C\x0d\n  maxStringLength: 10000\x2C\x0d\n  breakLength: 80\x2C\x0d\n  compact: 3\x2C\x0d\n  sorted: false\x2C\x0d\n  getters: false\x2C\x0d\n  numericSeparator: false\x2C\x0d\n});\x0d\n\x0d\nconst kObjectType = 0;\x0d\nconst kArrayType = 1;\x0d\nconst kArrayExtrasType = 2;\x0d\n\x0d\n/* eslint-disable no-control-regex */\x0d\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\n/* eslint-enable no-control-regex */\x0d\n\x0d\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\x0d\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\x0d\n\x0d\nconst coreModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\x0d\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\x0d\n\x0d\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\x0d\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\x0d\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\x0d\n\x0d\nconst kMinLineLength = 16;\x0d\n\x0d\n// Constants to map the iterator state.\x0d\nconst kWeak = 0;\x0d\nconst kIterator = 1;\x0d\nconst kMapEntries = 2;\x0d\n\x0d\n// Escaped control characters (plus the single quote and the backslash). Use\x0d\n// empty strings to fill up unused entries.\x0d\nconst meta = [\x0d\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\x0d\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\x0d\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\x0d\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\x0d\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\x0d\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\x0d\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\x0d\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\x0d\n];\x0d\n\x0d\n// Regex used for ansi escape code splitting\x0d\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\x0d\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\x0d\n// Matches all ansi escape code sequences in a string\x0d\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\x0d\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\x0d\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\x0d\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\x0d\nconst ansi = new RegExp(ansiPattern\x2C 'g');\x0d\n\x0d\nlet getStringWidth;\x0d\n\x0d\nfunction getUserOptions(ctx\x2C isCrossContext) {\x0d\n  const ret = {\x0d\n    stylize: ctx.stylize\x2C\x0d\n    showHidden: ctx.showHidden\x2C\x0d\n    depth: ctx.depth\x2C\x0d\n    colors: ctx.colors\x2C\x0d\n    customInspect: ctx.customInspect\x2C\x0d\n    showProxy: ctx.showProxy\x2C\x0d\n    maxArrayLength: ctx.maxArrayLength\x2C\x0d\n    maxStringLength: ctx.maxStringLength\x2C\x0d\n    breakLength: ctx.breakLength\x2C\x0d\n    compact: ctx.compact\x2C\x0d\n    sorted: ctx.sorted\x2C\x0d\n    getters: ctx.getters\x2C\x0d\n    numericSeparator: ctx.numericSeparator\x2C\x0d\n    ...ctx.userOptions\x0d\n  };\x0d\n\x0d\n  // Typically\x2C the target value will be an instance of `Object`. If that is\x0d\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\x0d\n  // to avoid passing it objects from this Context in that case\x2C so we remove\x0d\n  // the prototype from the returned object itself + the `stylize()` function\x2C\x0d\n  // and remove all other non-primitives\x2C including non-primitive user options.\x0d\n  if (isCrossContext) {\x0d\n    ObjectSetPrototypeOf(ret\x2C null);\x0d\n    for (const key of ObjectKeys(ret)) {\x0d\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\x0d\n          ret[key] !== null) {\x0d\n        delete ret[key];\x0d\n      }\x0d\n    }\x0d\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\x0d\n      let stylized;\x0d\n      try {\x0d\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      if (typeof stylized !== 'string') return value;\x0d\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\x0d\n      return stylized;\x0d\n    }\x2C null);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Echos the value of any input. Tries to print the value out\x0d\n * in the best way possible given the different types.\x0d\n *\x0d\n * @param {any} value The value to print out.\x0d\n * @param {object} opts Optional options object that alters the output.\x0d\n */\x0d\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\x0d\nfunction inspect(value\x2C opts) {\x0d\n  // Default options\x0d\n  const ctx = {\x0d\n    budget: {}\x2C\x0d\n    indentationLvl: 0\x2C\x0d\n    seen: []\x2C\x0d\n    currentDepth: 0\x2C\x0d\n    stylize: stylizeNoColor\x2C\x0d\n    showHidden: inspectDefaultOptions.showHidden\x2C\x0d\n    depth: inspectDefaultOptions.depth\x2C\x0d\n    colors: inspectDefaultOptions.colors\x2C\x0d\n    customInspect: inspectDefaultOptions.customInspect\x2C\x0d\n    showProxy: inspectDefaultOptions.showProxy\x2C\x0d\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\x0d\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\x0d\n    breakLength: inspectDefaultOptions.breakLength\x2C\x0d\n    compact: inspectDefaultOptions.compact\x2C\x0d\n    sorted: inspectDefaultOptions.sorted\x2C\x0d\n    getters: inspectDefaultOptions.getters\x2C\x0d\n    numericSeparator: inspectDefaultOptions.numericSeparator\x2C\x0d\n  };\x0d\n  if (arguments.length > 1) {\x0d\n    // Legacy...\x0d\n    if (arguments.length > 2) {\x0d\n      if (arguments[2] !== undefined) {\x0d\n        ctx.depth = arguments[2];\x0d\n      }\x0d\n      if (arguments.length > 3 && arguments[3] !== undefined) {\x0d\n        ctx.colors = arguments[3];\x0d\n      }\x0d\n    }\x0d\n    // Set user-specified options\x0d\n    if (typeof opts === 'boolean') {\x0d\n      ctx.showHidden = opts;\x0d\n    } else if (opts) {\x0d\n      const optKeys = ObjectKeys(opts);\x0d\n      for (let i = 0; i < optKeys.length; ++i) {\x0d\n        const key = optKeys[i];\x0d\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\x0d\n        // this function public or add a new API with a similar or better\x0d\n        // functionality.\x0d\n        if (\x0d\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\x0d\n          key === 'stylize') {\x0d\n          ctx[key] = opts[key];\x0d\n        } else if (ctx.userOptions === undefined) {\x0d\n          // This is required to pass through the actual user input.\x0d\n          ctx.userOptions = opts;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\x0d\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\x0d\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\x0d\n  return formatValue(ctx\x2C value\x2C 0);\x0d\n}\x0d\ninspect.custom = customInspectSymbol;\x0d\n\x0d\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return inspectDefaultOptions;\x0d\n  }\x2C\x0d\n  set(options) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    return ObjectAssign(inspectDefaultOptions\x2C options);\x0d\n  }\x0d\n});\x0d\n\x0d\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\x0d\n// Each color consists of an array with the color code as first entry and the\x0d\n// reset code as second entry.\x0d\nconst defaultFG = 39;\x0d\nconst defaultBG = 49;\x0d\ninspect.colors = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  reset: [0\x2C 0]\x2C\x0d\n  bold: [1\x2C 22]\x2C\x0d\n  dim: [2\x2C 22]\x2C // Alias: faint\x0d\n  italic: [3\x2C 23]\x2C\x0d\n  underline: [4\x2C 24]\x2C\x0d\n  blink: [5\x2C 25]\x2C\x0d\n  // Swap foreground and background colors\x0d\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\x0d\n  hidden: [8\x2C 28]\x2C // Alias: conceal\x0d\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\x0d\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\x0d\n  black: [30\x2C defaultFG]\x2C\x0d\n  red: [31\x2C defaultFG]\x2C\x0d\n  green: [32\x2C defaultFG]\x2C\x0d\n  yellow: [33\x2C defaultFG]\x2C\x0d\n  blue: [34\x2C defaultFG]\x2C\x0d\n  magenta: [35\x2C defaultFG]\x2C\x0d\n  cyan: [36\x2C defaultFG]\x2C\x0d\n  white: [37\x2C defaultFG]\x2C\x0d\n  bgBlack: [40\x2C defaultBG]\x2C\x0d\n  bgRed: [41\x2C defaultBG]\x2C\x0d\n  bgGreen: [42\x2C defaultBG]\x2C\x0d\n  bgYellow: [43\x2C defaultBG]\x2C\x0d\n  bgBlue: [44\x2C defaultBG]\x2C\x0d\n  bgMagenta: [45\x2C defaultBG]\x2C\x0d\n  bgCyan: [46\x2C defaultBG]\x2C\x0d\n  bgWhite: [47\x2C defaultBG]\x2C\x0d\n  framed: [51\x2C 54]\x2C\x0d\n  overlined: [53\x2C 55]\x2C\x0d\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\x0d\n  redBright: [91\x2C defaultFG]\x2C\x0d\n  greenBright: [92\x2C defaultFG]\x2C\x0d\n  yellowBright: [93\x2C defaultFG]\x2C\x0d\n  blueBright: [94\x2C defaultFG]\x2C\x0d\n  magentaBright: [95\x2C defaultFG]\x2C\x0d\n  cyanBright: [96\x2C defaultFG]\x2C\x0d\n  whiteBright: [97\x2C defaultFG]\x2C\x0d\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\x0d\n  bgRedBright: [101\x2C defaultBG]\x2C\x0d\n  bgGreenBright: [102\x2C defaultBG]\x2C\x0d\n  bgYellowBright: [103\x2C defaultBG]\x2C\x0d\n  bgBlueBright: [104\x2C defaultBG]\x2C\x0d\n  bgMagentaBright: [105\x2C defaultBG]\x2C\x0d\n  bgCyanBright: [106\x2C defaultBG]\x2C\x0d\n  bgWhiteBright: [107\x2C defaultBG]\x2C\x0d\n});\x0d\n\x0d\nfunction defineColorAlias(target\x2C alias) {\x0d\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[target];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[target] = value;\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineColorAlias('gray'\x2C 'grey');\x0d\ndefineColorAlias('gray'\x2C 'blackBright');\x0d\ndefineColorAlias('bgGray'\x2C 'bgGrey');\x0d\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\x0d\ndefineColorAlias('dim'\x2C 'faint');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedout');\x0d\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\x0d\ndefineColorAlias('hidden'\x2C 'conceal');\x0d\ndefineColorAlias('inverse'\x2C 'swapColors');\x0d\ndefineColorAlias('inverse'\x2C 'swapcolors');\x0d\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\x0d\n\x0d\n// TODO(BridgeAR): Add function style support for more complex styles.\x0d\n// Don't use 'blue' not visible on cmd.exe\x0d\ninspect.styles = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  special: 'cyan'\x2C\x0d\n  number: 'yellow'\x2C\x0d\n  bigint: 'yellow'\x2C\x0d\n  boolean: 'yellow'\x2C\x0d\n  undefined: 'grey'\x2C\x0d\n  null: 'bold'\x2C\x0d\n  string: 'green'\x2C\x0d\n  symbol: 'green'\x2C\x0d\n  date: 'magenta'\x2C\x0d\n  // "name": intentionally not styling\x0d\n  // TODO(BridgeAR): Highlight regular expressions properly.\x0d\n  regexp: 'red'\x2C\x0d\n  module: 'underline'\x0d\n});\x0d\n\x0d\nfunction addQuotes(str\x2C quotes) {\x0d\n  if (quotes === -1) {\x0d\n    return `"${str}"`;\x0d\n  }\x0d\n  if (quotes === -2) {\x0d\n    return `\\`${str}\\``;\x0d\n  }\x0d\n  return `'${str}'`;\x0d\n}\x0d\n\x0d\nfunction escapeFn(str) {\x0d\n  const charCode = StringPrototypeCharCodeAt(str);\x0d\n  return meta.length > charCode ? meta[charCode] : `\\\\u${charCode.toString(16)}`;\x0d\n}\x0d\n\x0d\n// Escape control characters\x2C single quotes and the backslash.\x0d\n// This is similar to JSON stringify escaping.\x0d\nfunction strEscape(str) {\x0d\n  let escapeTest = strEscapeSequencesRegExp;\x0d\n  let escapeReplace = strEscapeSequencesReplacer;\x0d\n  let singleQuote = 39;\x0d\n\x0d\n  // Check for double quotes. If not present\x2C do not escape single quotes and\x0d\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\x0d\n  // backticks. If they do not exist\x2C use those as fallback instead of the\x0d\n  // double quotes.\x0d\n  if (StringPrototypeIncludes(str\x2C "'")) {\x0d\n    // This invalidates the charCode and therefore can not be matched for\x0d\n    // anymore.\x0d\n    if (!StringPrototypeIncludes(str\x2C '"')) {\x0d\n      singleQuote = -1;\x0d\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\x0d\n               !StringPrototypeIncludes(str\x2C '${')) {\x0d\n      singleQuote = -2;\x0d\n    }\x0d\n    if (singleQuote !== 39) {\x0d\n      escapeTest = strEscapeSequencesRegExpSingle;\x0d\n      escapeReplace = strEscapeSequencesReplacerSingle;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\x0d\n  if (str.length < 5000 && RegExpPrototypeExec(escapeTest\x2C str) === null)\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  if (str.length > 100) {\x0d\n    str = RegExpPrototypeSymbolReplace(escapeReplace\x2C str\x2C escapeFn);\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  }\x0d\n\x0d\n  let result = '';\x0d\n  let last = 0;\x0d\n  for (let i = 0; i < str.length; i++) {\x0d\n    const point = StringPrototypeCharCodeAt(str\x2C i);\x0d\n    if (point === singleQuote ||\x0d\n        point === 92 ||\x0d\n        point < 32 ||\x0d\n        (point > 126 && point < 160)) {\x0d\n      if (last === i) {\x0d\n        result += meta[point];\x0d\n      } else {\x0d\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\x0d\n      }\x0d\n      last = i + 1;\x0d\n    } else if (point >= 0xd800 && point <= 0xdfff) {\x0d\n      if (point <= 0xdbff && i + 1 < str.length) {\x0d\n        const point = StringPrototypeCharCodeAt(str\x2C i + 1);\x0d\n        if (point >= 0xdc00 && point <= 0xdfff) {\x0d\n          i++;\x0d\n          continue;\x0d\n        }\x0d\n      }\x0d\n      result += `${StringPrototypeSlice(str\x2C last\x2C i)}\\\\u${point.toString(16)}`;\x0d\n      last = i + 1;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (last !== str.length) {\x0d\n    result += StringPrototypeSlice(str\x2C last);\x0d\n  }\x0d\n  return addQuotes(result\x2C singleQuote);\x0d\n}\x0d\n\x0d\nfunction stylizeWithColor(str\x2C styleType) {\x0d\n  const style = inspect.styles[styleType];\x0d\n  if (style !== undefined) {\x0d\n    const color = inspect.colors[style];\x0d\n    if (color !== undefined)\x0d\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction stylizeNoColor(str) {\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// Return a new empty array to push in the results of the default formatter.\x0d\nfunction getEmptyFormatArray() {\x0d\n  return [];\x0d\n}\x0d\n\x0d\nfunction isInstanceof(object\x2C proto) {\x0d\n  try {\x0d\n    return object instanceof proto;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\x0d\n  let firstProto;\x0d\n  const tmp = obj;\x0d\n  while (obj || isUndetectableObject(obj)) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '' &&\x0d\n        isInstanceof(tmp\x2C descriptor.value)) {\x0d\n      if (protoProps !== undefined &&\x0d\n         (firstProto !== obj ||\x0d\n         !builtInObjects.has(descriptor.value.name))) {\x0d\n        addPrototypeProperties(\x0d\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\x0d\n      }\x0d\n      return String(descriptor.value.name);\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n    if (firstProto === undefined) {\x0d\n      firstProto = obj;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (firstProto === null) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  const res = internalGetConstructorName(tmp);\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return `${res} <Complex prototype>`;\x0d\n  }\x0d\n\x0d\n  const protoConstr = getConstructorName(\x0d\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\x0d\n\x0d\n  if (protoConstr === null) {\x0d\n    return `${res} <${inspect(firstProto\x2C {\x0d\n      ...ctx\x2C\x0d\n      customInspect: false\x2C\x0d\n      depth: -1\x0d\n    })}>`;\x0d\n  }\x0d\n\x0d\n  return `${res} <${protoConstr}>`;\x0d\n}\x0d\n\x0d\n// This function has the side effect of adding prototype properties to the\x0d\n// `output` argument (which is an array). This is intended to highlight user\x0d\n// defined prototype properties.\x0d\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\x0d\n  let depth = 0;\x0d\n  let keys;\x0d\n  let keySet;\x0d\n  do {\x0d\n    if (depth !== 0 || main === obj) {\x0d\n      obj = ObjectGetPrototypeOf(obj);\x0d\n      // Stop as soon as a null prototype is encountered.\x0d\n      if (obj === null) {\x0d\n        return;\x0d\n      }\x0d\n      // Stop as soon as a built-in object type is detected.\x0d\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n      if (descriptor !== undefined &&\x0d\n          typeof descriptor.value === 'function' &&\x0d\n          builtInObjects.has(descriptor.value.name)) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (depth === 0) {\x0d\n      keySet = new SafeSet();\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\x0d\n    }\x0d\n    // Get all own property names and symbols.\x0d\n    keys = ReflectOwnKeys(obj);\x0d\n    ArrayPrototypePush(ctx.seen\x2C main);\x0d\n    for (const key of keys) {\x0d\n      // Ignore the `constructor` property and keys that exist on layers above.\x0d\n      if (key === 'constructor' ||\x0d\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\x0d\n          (depth !== 0 && keySet.has(key))) {\x0d\n        continue;\x0d\n      }\x0d\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n      if (typeof desc.value === 'function') {\x0d\n        continue;\x0d\n      }\x0d\n      const value = formatProperty(\x0d\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\x0d\n      if (ctx.colors) {\x0d\n        // Faint!\x0d\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\x0d\n      } else {\x0d\n        ArrayPrototypePush(output\x2C value);\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePop(ctx.seen);\x0d\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\x0d\n  // is not a good choice here\x2C because it's as if the properties are declared\x0d\n  // on the current object from the users perspective.\x0d\n  } while (++depth !== 3);\x0d\n}\x0d\n\x0d\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\x0d\n  if (constructor === null) {\x0d\n    if (tag !== '' && fallback !== tag) {\x0d\n      return `[${fallback}${size}: null prototype] [${tag}] `;\x0d\n    }\x0d\n    return `[${fallback}${size}: null prototype] `;\x0d\n  }\x0d\n\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    return `${constructor}${size} [${tag}] `;\x0d\n  }\x0d\n  return `${constructor}${size} `;\x0d\n}\x0d\n\x0d\n// Look up the keys of the object.\x0d\nfunction getKeys(value\x2C showHidden) {\x0d\n  let keys;\x0d\n  const symbols = ObjectGetOwnPropertySymbols(value);\x0d\n  if (showHidden) {\x0d\n    keys = ObjectGetOwnPropertyNames(value);\x0d\n    if (symbols.length !== 0)\x0d\n      ArrayPrototypePushApply(keys\x2C symbols);\x0d\n  } else {\x0d\n    // This might throw if `value` is a Module Namespace Object from an\x0d\n    // unevaluated module\x2C but we don't want to perform the actual type\x0d\n    // check because it's expensive.\x0d\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\x0d\n    // and modify this logic as needed.\x0d\n    try {\x0d\n      keys = ObjectKeys(value);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\x0d\n             isModuleNamespaceObject(value));\x0d\n      keys = ObjectGetOwnPropertyNames(value);\x0d\n    }\x0d\n    if (symbols.length !== 0) {\x0d\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\x0d\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\x0d\n    }\x0d\n  }\x0d\n  return keys;\x0d\n}\x0d\n\x0d\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\x0d\n  let fallback = '';\x0d\n  if (constructor === null) {\x0d\n    fallback = internalGetConstructorName(value);\x0d\n    if (fallback === tag) {\x0d\n      fallback = 'Object';\x0d\n    }\x0d\n  }\x0d\n  return getPrefix(constructor\x2C tag\x2C fallback);\x0d\n}\x0d\n\x0d\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n  ctx.indentationLvl += 2;\x0d\n  const res = [\x0d\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\x0d\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\x0d\n  ];\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return reduceToSingleString(\x0d\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n}\x0d\n\x0d\n// Note: using `formatValue` directly requires the indentation level to be\x0d\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\x0d\n// value afterwards again.\x0d\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  // Primitive types cannot have properties.\x0d\n  if (typeof value !== 'object' &&\x0d\n      typeof value !== 'function' &&\x0d\n      !isUndetectableObject(value)) {\x0d\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\x0d\n  }\x0d\n  if (value === null) {\x0d\n    return ctx.stylize('null'\x2C 'null');\x0d\n  }\x0d\n\x0d\n  // Memorize the context for custom inspection on proxies.\x0d\n  const context = value;\x0d\n  // Always check for proxies to prevent side effects and to prevent triggering\x0d\n  // any proxy handlers.\x0d\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\x0d\n  if (proxy !== undefined) {\x0d\n    if (proxy === null || proxy[0] === null) {\x0d\n      return ctx.stylize('<Revoked Proxy>'\x2C 'special');\x0d\n    }\x0d\n    if (ctx.showProxy) {\x0d\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\x0d\n    }\x0d\n    value = proxy;\x0d\n  }\x0d\n\x0d\n  // Provide a hook for user-specified inspect functions.\x0d\n  // Check that value is an object with an inspect function on it.\x0d\n  if (ctx.customInspect) {\x0d\n    const maybeCustom = value[customInspectSymbol];\x0d\n    if (typeof maybeCustom === 'function' &&\x0d\n        // Filter out the util module\x2C its inspect function is special.\x0d\n        maybeCustom !== inspect &&\x0d\n        // Also filter out any prototype objects using the circular check.\x0d\n        !(value.constructor && value.constructor.prototype === value)) {\x0d\n      // This makes sure the recurseTimes are reported as before while using\x0d\n      // a counter internally.\x0d\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\x0d\n      const isCrossContext =\x0d\n        proxy !== undefined || !(context instanceof Object);\x0d\n      const ret = FunctionPrototypeCall(\x0d\n        maybeCustom\x2C\x0d\n        context\x2C\x0d\n        depth\x2C\x0d\n        getUserOptions(ctx\x2C isCrossContext)\x2C\x0d\n        inspect\x0d\n      );\x0d\n      // If the custom inspection method returned `this`\x2C don't go into\x0d\n      // infinite recursion.\x0d\n      if (ret !== context) {\x0d\n        if (typeof ret !== 'string') {\x0d\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\x0d\n        }\x0d\n        return ret.replace(/\\n/g\x2C `\\n${' '.repeat(ctx.indentationLvl)}`);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Using an array here is actually better for the average case than using\x0d\n  // a Set. `seen` will only check for the depth and will never grow too large.\x0d\n  if (ctx.seen.includes(value)) {\x0d\n    let index = 1;\x0d\n    if (ctx.circular === undefined) {\x0d\n      ctx.circular = new SafeMap();\x0d\n      ctx.circular.set(value\x2C index);\x0d\n    } else {\x0d\n      index = ctx.circular.get(value);\x0d\n      if (index === undefined) {\x0d\n        index = ctx.circular.size + 1;\x0d\n        ctx.circular.set(value\x2C index);\x0d\n      }\x0d\n    }\x0d\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\x0d\n  }\x0d\n\x0d\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\x0d\n}\x0d\n\x0d\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  let keys;\x0d\n  let protoProps;\x0d\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\x0d\n    protoProps = [];\x0d\n  }\x0d\n\x0d\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\x0d\n  // Reset the variable to check for this later on.\x0d\n  if (protoProps !== undefined && protoProps.length === 0) {\x0d\n    protoProps = undefined;\x0d\n  }\x0d\n\x0d\n  let tag = value[SymbolToStringTag];\x0d\n  // Only list the tag in case it's non-enumerable / not an own property.\x0d\n  // Otherwise we'd print this twice.\x0d\n  if (typeof tag !== 'string' ||\x0d\n      (tag !== '' &&\x0d\n      (ctx.showHidden ?\x0d\n        ObjectPrototypeHasOwnProperty :\x0d\n        ObjectPrototypePropertyIsEnumerable)(\x0d\n        value\x2C SymbolToStringTag\x0d\n      ))) {\x0d\n    tag = '';\x0d\n  }\x0d\n  let base = '';\x0d\n  let formatter = getEmptyFormatArray;\x0d\n  let braces;\x0d\n  let noIterator = true;\x0d\n  let i = 0;\x0d\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n\x0d\n  let extrasType = kObjectType;\x0d\n\x0d\n  // Iterators and the rest are split to reduce checks.\x0d\n  // We have to check all values in case the constructor is set to null.\x0d\n  // Otherwise it would not possible to identify all types properly.\x0d\n  if (SymbolIterator in value || constructor === null) {\x0d\n    noIterator = false;\x0d\n    if (ArrayIsArray(value)) {\x0d\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\x0d\n      const prefix = (constructor !== 'Array' || tag !== '') ?\x0d\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\x0d\n        '';\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${braces[0]}]`;\x0d\n      extrasType = kArrayExtrasType;\x0d\n      formatter = formatArray;\x0d\n    } else if (isSet(value)) {\x0d\n      const size = SetPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        formatSet.bind(null\x2C value) :\x0d\n        formatSet.bind(null\x2C SetPrototypeValues(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isMap(value)) {\x0d\n      const size = MapPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        formatMap.bind(null\x2C value) :\x0d\n        formatMap.bind(null\x2C MapPrototypeEntries(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isTypedArray(value)) {\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      let bound = value;\x0d\n      let fallback = '';\x0d\n      if (constructor === null) {\x0d\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\x0d\n        // Reconstruct the array information.\x0d\n        bound = new primordials[fallback](value);\x0d\n      }\x0d\n      const size = TypedArrayPrototypeGetLength(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\x0d\n        return `${braces[0]}]`;\x0d\n      // Special handle the value. The original value is required below. The\x0d\n      // bound function is required to reconstruct missing information.\x0d\n      formatter = formatTypedArray.bind(null\x2C bound\x2C size);\x0d\n      extrasType = kArrayExtrasType;\x0d\n    } else if (isMapIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Map'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = formatIterator.bind(null\x2C braces);\x0d\n    } else if (isSetIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Set'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = formatIterator.bind(null\x2C braces);\x0d\n    } else {\x0d\n      noIterator = true;\x0d\n    }\x0d\n  }\x0d\n  if (noIterator) {\x0d\n    keys = getKeys(value\x2C ctx.showHidden);\x0d\n    braces = ['{'\x2C '}'];\x0d\n    if (constructor === 'Object') {\x0d\n      if (isArgumentsObject(value)) {\x0d\n        braces[0] = '[Arguments] {';\x0d\n      } else if (tag !== '') {\x0d\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\x0d\n      }\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return `${braces[0]}}`;\x0d\n      }\x0d\n    } else if (typeof value === 'function') {\x0d\n      base = getFunctionBase(value\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return ctx.stylize(base\x2C 'special');\x0d\n    } else if (isRegExp(value)) {\x0d\n      // Make RegExps say that they are RegExps\x0d\n      base = RegExpPrototypeToString(\x0d\n        constructor !== null ? value : new RegExp(value)\x0d\n      );\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\x0d\n      if (prefix !== 'RegExp ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if ((keys.length === 0 && protoProps === undefined) ||\x0d\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\x0d\n        return ctx.stylize(base\x2C 'regexp');\x0d\n      }\x0d\n    } else if (isDate(value)) {\x0d\n      // Make dates with properties first say the date\x0d\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\x0d\n        DatePrototypeToString(value) :\x0d\n        DatePrototypeToISOString(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\x0d\n      if (prefix !== 'Date ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return ctx.stylize(base\x2C 'date');\x0d\n      }\x0d\n    } else if (isError(value)) {\x0d\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return base;\x0d\n    } else if (isAnyArrayBuffer(value)) {\x0d\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\x0d\n      // Can't do the same for DataView because it has a non-primitive\x0d\n      // .buffer property that we need to recurse for.\x0d\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\x0d\n        'SharedArrayBuffer';\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\x0d\n      if (typedArray === undefined) {\x0d\n        formatter = formatArrayBuffer;\x0d\n      } else if (keys.length === 0 && protoProps === undefined) {\x0d\n        return prefix +\x0d\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength\x2C false)} }`;\x0d\n      }\x0d\n      braces[0] = `${prefix}{`;\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\x0d\n    } else if (isDataView(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\x0d\n      // .buffer goes last\x2C it's not a primitive like the others.\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\x0d\n    } else if (isPromise(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\x0d\n      formatter = formatPromise;\x0d\n    } else if (isWeakSet(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\x0d\n    } else if (isWeakMap(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\x0d\n    } else if (isModuleNamespaceObject(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\x0d\n      // Special handle keys for namespace objects.\x0d\n      formatter = formatNamespaceObject.bind(null\x2C keys);\x0d\n    } else if (isBoxedPrimitive(value)) {\x0d\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return base;\x0d\n      }\x0d\n    } else {\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        if (isExternal(value)) {\x0d\n          const address = getExternalValue(value).toString(16);\x0d\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\x0d\n        }\x0d\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\x0d\n      }\x0d\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    let constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\x0d\n    if (constructor !== null)\x0d\n      constructorName = `[${constructorName}]`;\x0d\n    return ctx.stylize(constructorName\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n\x0d\n  ctx.seen.push(value);\x0d\n  ctx.currentDepth = recurseTimes;\x0d\n  let output;\x0d\n  const indentationLvl = ctx.indentationLvl;\x0d\n  try {\x0d\n    output = formatter(ctx\x2C value\x2C recurseTimes);\x0d\n    for (i = 0; i < keys.length; i++) {\x0d\n      output.push(\x0d\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType));\x0d\n    }\x0d\n    if (protoProps !== undefined) {\x0d\n      output.push(...protoProps);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    const constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\x0d\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\x0d\n  }\x0d\n  if (ctx.circular !== undefined) {\x0d\n    const index = ctx.circular.get(value);\x0d\n    if (index !== undefined) {\x0d\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\x0d\n      // Add reference always to the very beginning of the output.\x0d\n      if (ctx.compact !== true) {\x0d\n        base = base === '' ? reference : `${reference} ${base}`;\x0d\n      } else {\x0d\n        braces[0] = `${reference} ${braces[0]}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  ctx.seen.pop();\x0d\n\x0d\n  if (ctx.sorted) {\x0d\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\x0d\n    if (extrasType === kObjectType) {\x0d\n      output = output.sort(comparator);\x0d\n    } else if (keys.length > 1) {\x0d\n      const sorted = output.slice(output.length - keys.length).sort(comparator);\x0d\n      output.splice(output.length - keys.length\x2C keys.length\x2C ...sorted);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const res = reduceToSingleString(\x0d\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\x0d\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\x0d\n  const newLength = budget + res.length;\x0d\n  ctx.budget[ctx.indentationLvl] = newLength;\x0d\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\x0d\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\x0d\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\x0d\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\x0d\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\x0d\n  // This limit also makes sure that huge objects don't block the event loop\x0d\n  // significantly.\x0d\n  if (newLength > 2 ** 27) {\x0d\n    ctx.depth = -1;\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction getIteratorBraces(type\x2C tag) {\x0d\n  if (tag !== `${type} Iterator`) {\x0d\n    if (tag !== '')\x0d\n      tag += '] [';\x0d\n    tag += `${type} Iterator`;\x0d\n  }\x0d\n  return [`[${tag}] {`\x2C '}'];\x0d\n}\x0d\n\x0d\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\x0d\n  let fn;\x0d\n  let type;\x0d\n  if (isNumberObject(value)) {\x0d\n    fn = NumberPrototypeValueOf;\x0d\n    type = 'Number';\x0d\n  } else if (isStringObject(value)) {\x0d\n    fn = StringPrototypeValueOf;\x0d\n    type = 'String';\x0d\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\x0d\n    // since they just noisy up the output and are redundant\x0d\n    // Make boxed primitive Strings look like such\x0d\n    keys.splice(0\x2C value.length);\x0d\n  } else if (isBooleanObject(value)) {\x0d\n    fn = BooleanPrototypeValueOf;\x0d\n    type = 'Boolean';\x0d\n  } else if (isBigIntObject(value)) {\x0d\n    fn = BigIntPrototypeValueOf;\x0d\n    type = 'BigInt';\x0d\n  } else {\x0d\n    fn = SymbolPrototypeValueOf;\x0d\n    type = 'Symbol';\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (type !== constructor) {\x0d\n    if (constructor === null) {\x0d\n      base += ' (null prototype)';\x0d\n    } else {\x0d\n      base += ` (${constructor})`;\x0d\n    }\x0d\n  }\x0d\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\x0d\n  if (tag !== '' && tag !== constructor) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\x0d\n    return base;\x0d\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\x0d\n}\x0d\n\x0d\nfunction getClassBase(value\x2C constructor\x2C tag) {\x0d\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\x0d\n  const name = (hasName && value.name) || '(anonymous)';\x0d\n  let base = `class ${name}`;\x0d\n  if (constructor !== 'Function' && constructor !== null) {\x0d\n    base += ` [${constructor}]`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (constructor !== null) {\x0d\n    const superName = ObjectGetPrototypeOf(value).name;\x0d\n    if (superName) {\x0d\n      base += ` extends ${superName}`;\x0d\n    }\x0d\n  } else {\x0d\n    base += ' extends [null prototype]';\x0d\n  }\x0d\n  return `[${base}]`;\x0d\n}\x0d\n\x0d\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\x0d\n  const stringified = FunctionPrototypeToString(value);\x0d\n  if (stringified.startsWith('class') && stringified.endsWith('}')) {\x0d\n    const slice = stringified.slice(5\x2C -1);\x0d\n    const bracketIndex = slice.indexOf('{');\x0d\n    if (bracketIndex !== -1 &&\x0d\n        (!slice.slice(0\x2C bracketIndex).includes('(') ||\x0d\n          // Slow path to guarantee that it's indeed a class.\x0d\n          classRegExp.test(slice.replace(stripCommentsRegExp)))) {\x0d\n      return getClassBase(value\x2C constructor\x2C tag);\x0d\n    }\x0d\n  }\x0d\n  let type = 'Function';\x0d\n  if (isGeneratorFunction(value)) {\x0d\n    type = `Generator${type}`;\x0d\n  }\x0d\n  if (isAsyncFunction(value)) {\x0d\n    type = `Async${type}`;\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (constructor === null) {\x0d\n    base += ' (null prototype)';\x0d\n  }\x0d\n  if (value.name === '') {\x0d\n    base += ' (anonymous)';\x0d\n  } else {\x0d\n    base += `: ${value.name}`;\x0d\n  }\x0d\n  base += ']';\x0d\n  if (constructor !== type && constructor !== null) {\x0d\n    base += ` ${constructor}`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  return base;\x0d\n}\x0d\n\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = b.indexOf(a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return { len\x2C offset: i };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { len: 0\x2C offset: 0 };\x0d\n}\x0d\n\x0d\nfunction getStackString(error) {\x0d\n  return error.stack ? String(error.stack) : ErrorPrototypeToString(error);\x0d\n}\x0d\n\x0d\nfunction getStackFrames(ctx\x2C err\x2C stack) {\x0d\n  const frames = stack.split('\\n');\x0d\n\x0d\n  // Remove stack frames identical to frames in cause.\x0d\n  if (err.cause && isError(err.cause)) {\x0d\n    const causeStack = getStackString(err.cause);\x0d\n    const causeStackStart = causeStack.indexOf('\\n    at');\x0d\n    if (causeStackStart !== -1) {\x0d\n      const causeFrames = causeStack.slice(causeStackStart + 1).split('\\n');\x0d\n      const { len\x2C offset } = identicalSequenceRange(frames\x2C causeFrames);\x0d\n      if (len > 0) {\x0d\n        const skipped = len - 2;\x0d\n        const msg = `    ... ${skipped} lines matching cause stack trace ...`;\x0d\n        frames.splice(offset + 1\x2C skipped\x2C ctx.stylize(msg\x2C 'undefined'));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return frames;\x0d\n}\x0d\n\x0d\nfunction improveStack(stack\x2C constructor\x2C name\x2C tag) {\x0d\n  // A stack trace may contain arbitrary data. Only manipulate the output\x0d\n  // for "regular errors" (errors that "look normal") for now.\x0d\n  let len = name.length;\x0d\n\x0d\n  if (constructor === null ||\x0d\n      (name.endsWith('Error') &&\x0d\n      stack.startsWith(name) &&\x0d\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\x0d\n    let fallback = 'Error';\x0d\n    if (constructor === null) {\x0d\n      const start = stack.match(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/) ||\x0d\n        stack.match(/^([a-z_A-Z0-9-]*Error)$/);\x0d\n      fallback = (start && start[1]) || '';\x0d\n      len = fallback.length;\x0d\n      fallback = fallback || 'Error';\x0d\n    }\x0d\n    const prefix = getPrefix(constructor\x2C tag\x2C fallback).slice(0\x2C -1);\x0d\n    if (name !== prefix) {\x0d\n      if (prefix.includes(name)) {\x0d\n        if (len === 0) {\x0d\n          stack = `${prefix}: ${stack}`;\x0d\n        } else {\x0d\n          stack = `${prefix}${stack.slice(len)}`;\x0d\n        }\x0d\n      } else {\x0d\n        stack = `${prefix} [${name}]${stack.slice(len)}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack) {\x0d\n  if (!ctx.showHidden && keys.length !== 0) {\x0d\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\x0d\n      const index = keys.indexOf(name);\x0d\n      // Only hide the property in case it's part of the original stack\x0d\n      if (index !== -1 && stack.includes(err[name])) {\x0d\n        keys.splice(index\x2C 1);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markNodeModules(ctx\x2C line) {\x0d\n  let tempLine = '';\x0d\n  let nodeModule;\x0d\n  let pos = 0;\x0d\n  while ((nodeModule = nodeModulesRegExp.exec(line)) !== null) {\x0d\n    // '/node_modules/'.length === 14\x0d\n    tempLine += line.slice(pos\x2C nodeModule.index + 14);\x0d\n    tempLine += ctx.stylize(nodeModule[1]\x2C 'module');\x0d\n    pos = nodeModule.index + nodeModule[0].length;\x0d\n  }\x0d\n  if (pos !== 0) {\x0d\n    line = tempLine + line.slice(pos);\x0d\n  }\x0d\n  return line;\x0d\n}\x0d\n\x0d\nfunction markCwd(ctx\x2C line\x2C workingDirectory) {\x0d\n  let cwdStartPos = line.indexOf(workingDirectory);\x0d\n  let tempLine = '';\x0d\n  let cwdLength = workingDirectory.length;\x0d\n  if (cwdStartPos !== -1) {\x0d\n    if (line.slice(cwdStartPos - 7\x2C cwdStartPos) === 'file://') {\x0d\n      cwdLength += 7;\x0d\n      cwdStartPos -= 7;\x0d\n    }\x0d\n    const start = line[cwdStartPos - 1] === '(' ? cwdStartPos - 1 : cwdStartPos;\x0d\n    const end = start !== cwdStartPos && line.endsWith(')') ? -1 : line.length;\x0d\n    const workingDirectoryEndPos = cwdStartPos + cwdLength + 1;\x0d\n    const cwdSlice = line.slice(start\x2C workingDirectoryEndPos);\x0d\n\x0d\n    tempLine += line.slice(0\x2C start);\x0d\n    tempLine += ctx.stylize(cwdSlice\x2C 'undefined');\x0d\n    tempLine += line.slice(workingDirectoryEndPos\x2C end);\x0d\n    if (end === -1) {\x0d\n      tempLine += ctx.stylize(')'\x2C 'undefined');\x0d\n    }\x0d\n  } else {\x0d\n    tempLine += line;\x0d\n  }\x0d\n  return tempLine;\x0d\n}\x0d\n\x0d\nfunction safeGetCWD() {\x0d\n  let workingDirectory;\x0d\n  try {\x0d\n    workingDirectory = process.cwd();\x0d\n  } catch {\x0d\n    return;\x0d\n  }\x0d\n  return workingDirectory;\x0d\n}\x0d\n\x0d\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\x0d\n  const name = err.name != null ? String(err.name) : 'Error';\x0d\n  let stack = getStackString(err);\x0d\n\x0d\n  removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack);\x0d\n\x0d\n  if ('cause' in err &&\x0d\n      (keys.length === 0 || !keys.includes('cause'))) {\x0d\n    keys.push('cause');\x0d\n  }\x0d\n\x0d\n  // Print errors aggregated into AggregateError\x0d\n  if (ArrayIsArray(err.errors) &&\x0d\n      (keys.length === 0 || !keys.includes('errors'))) {\x0d\n    keys.push('errors');\x0d\n  }\x0d\n\x0d\n  stack = improveStack(stack\x2C constructor\x2C name\x2C tag);\x0d\n\x0d\n  // Ignore the error message if it's contained in the stack.\x0d\n  let pos = (err.message && stack.indexOf(err.message)) || -1;\x0d\n  if (pos !== -1)\x0d\n    pos += err.message.length;\x0d\n  // Wrap the error in brackets in case it has no stack trace.\x0d\n  const stackStart = stack.indexOf('\\n    at'\x2C pos);\x0d\n  if (stackStart === -1) {\x0d\n    stack = `[${stack}]`;\x0d\n  } else {\x0d\n    let newStack = stack.slice(0\x2C stackStart);\x0d\n    const stackFramePart = stack.slice(stackStart + 1);\x0d\n    const lines = getStackFrames(ctx\x2C err\x2C stackFramePart);\x0d\n    if (ctx.colors) {\x0d\n      // Highlight userland code and node modules.\x0d\n      const workingDirectory = safeGetCWD();\x0d\n      let esmWorkingDirectory;\x0d\n      for (let line of lines) {\x0d\n        const core = line.match(coreModuleRegExp);\x0d\n        if (core !== null && NativeModule.exists(core[1])) {\x0d\n          newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\x0d\n        } else {\x0d\n          newStack += '\\n';\x0d\n\x0d\n          line = markNodeModules(ctx\x2C line);\x0d\n          if (workingDirectory !== undefined) {\x0d\n            let newLine = markCwd(ctx\x2C line\x2C workingDirectory);\x0d\n            if (newLine === line) {\x0d\n              esmWorkingDirectory ??= pathToFileUrlHref(workingDirectory);\x0d\n              newLine = markCwd(ctx\x2C line\x2C esmWorkingDirectory);\x0d\n            }\x0d\n            line = newLine;\x0d\n          }\x0d\n\x0d\n          newStack += line;\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      newStack += `\\n${lines.join('\\n')}`;\x0d\n    }\x0d\n    stack = newStack;\x0d\n  }\x0d\n  // The message and the stack have to be indented as well!\x0d\n  if (ctx.indentationLvl !== 0) {\x0d\n    const indentation = ' '.repeat(ctx.indentationLvl);\x0d\n    stack = stack.replace(/\\n/g\x2C `\\n${indentation}`);\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction groupArrayElements(ctx\x2C output\x2C value) {\x0d\n  let totalLength = 0;\x0d\n  let maxLength = 0;\x0d\n  let i = 0;\x0d\n  let outputLength = output.length;\x0d\n  if (ctx.maxArrayLength < output.length) {\x0d\n    // This makes sure the "... n more items" part is not taken into account.\x0d\n    outputLength--;\x0d\n  }\x0d\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\x0d\n  const dataLen = new Array(outputLength);\x0d\n  // Calculate the total length of all output entries and the individual max\x0d\n  // entries length of all output entries. We have to remove colors first\x2C\x0d\n  // otherwise the length would not be calculated properly.\x0d\n  for (; i < outputLength; i++) {\x0d\n    const len = getStringWidth(output[i]\x2C ctx.colors);\x0d\n    dataLen[i] = len;\x0d\n    totalLength += len + separatorSpace;\x0d\n    if (maxLength < len)\x0d\n      maxLength = len;\x0d\n  }\x0d\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\x0d\n  // in-between two entries.\x0d\n  const actualMax = maxLength + separatorSpace;\x0d\n  // Check if at least three entries fit next to each other and prevent grouping\x0d\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\x0d\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\x0d\n  // space in-between small entries would be enormous.\x0d\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\x0d\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\x0d\n\x0d\n    const approxCharHeights = 2.5;\x0d\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\x0d\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\x0d\n    // Dynamically check how many columns seem possible.\x0d\n    const columns = MathMin(\x0d\n      // Ideally a square should be drawn. We expect a character to be about 2.5\x0d\n      // times as high as wide. This is the area formula to calculate a square\x0d\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\x0d\n      // Divide that by `actualMax` to receive the correct number of columns.\x0d\n      // The added bias increases the columns for short entries.\x0d\n      MathRound(\x0d\n        MathSqrt(\x0d\n          approxCharHeights * biasedMax * outputLength\x0d\n        ) / biasedMax\x0d\n      )\x2C\x0d\n      // Do not exceed the breakLength.\x0d\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\x0d\n      // Limit array grouping for small `compact` modes as the user requested\x0d\n      // minimal grouping.\x0d\n      ctx.compact * 4\x2C\x0d\n      // Limit the columns to a maximum of fifteen.\x0d\n      15\x0d\n    );\x0d\n    // Return with the original output if no grouping should happen.\x0d\n    if (columns <= 1) {\x0d\n      return output;\x0d\n    }\x0d\n    const tmp = [];\x0d\n    const maxLineLength = [];\x0d\n    for (let i = 0; i < columns; i++) {\x0d\n      let lineMaxLength = 0;\x0d\n      for (let j = i; j < output.length; j += columns) {\x0d\n        if (dataLen[j] > lineMaxLength)\x0d\n          lineMaxLength = dataLen[j];\x0d\n      }\x0d\n      lineMaxLength += separatorSpace;\x0d\n      maxLineLength[i] = lineMaxLength;\x0d\n    }\x0d\n    let order = StringPrototypePadStart;\x0d\n    if (value !== undefined) {\x0d\n      for (let i = 0; i < output.length; i++) {\x0d\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\x0d\n          order = StringPrototypePadEnd;\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Each iteration creates a single line of grouped entries.\x0d\n    for (let i = 0; i < outputLength; i += columns) {\x0d\n      // The last lines may contain less entries than columns.\x0d\n      const max = MathMin(i + columns\x2C outputLength);\x0d\n      let str = '';\x0d\n      let j = i;\x0d\n      for (; j < max - 1; j++) {\x0d\n        // Calculate extra color padding in case it's active. This has to be\x0d\n        // done line by line as some lines might contain more colors than\x0d\n        // others.\x0d\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\x0d\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\x0d\n      }\x0d\n      if (order === StringPrototypePadStart) {\x0d\n        const padding = maxLineLength[j - i] +\x0d\n                        output[j].length -\x0d\n                        dataLen[j] -\x0d\n                        separatorSpace;\x0d\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\x0d\n      } else {\x0d\n        str += output[j];\x0d\n      }\x0d\n      ArrayPrototypePush(tmp\x2C str);\x0d\n    }\x0d\n    if (ctx.maxArrayLength < output.length) {\x0d\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\x0d\n    }\x0d\n    output = tmp;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\x0d\n  if (isStackOverflowError(err)) {\x0d\n    ctx.seen.pop();\x0d\n    ctx.indentationLvl = indentationLvl;\x0d\n    return ctx.stylize(\x0d\n      `[${constructorName}: Inspection interrupted ` +\x0d\n        'prematurely. Maximum call stack size exceeded.]'\x2C\x0d\n      'special'\x0d\n    );\x0d\n  }\x0d\n  /* c8 ignore next */\x0d\n  assert.fail(err.stack);\x0d\n}\x0d\n\x0d\nfunction addNumericSeparator(integerString) {\x0d\n  let result = '';\x0d\n  let i = integerString.length;\x0d\n  const start = integerString.startsWith('-') ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    result = `_${integerString.slice(i - 3\x2C i)}${result}`;\x0d\n  }\x0d\n  return i === integerString.length ?\x0d\n    integerString :\x0d\n    `${integerString.slice(0\x2C i)}${result}`;\x0d\n}\x0d\n\x0d\nfunction addNumericSeparatorEnd(integerString) {\x0d\n  let result = '';\x0d\n  let i = 0;\x0d\n  for (; i < integerString.length - 3; i += 3) {\x0d\n    result += `${integerString.slice(i\x2C i + 3)}_`;\x0d\n  }\x0d\n  return i === 0 ?\x0d\n    integerString :\x0d\n    `${result}${integerString.slice(i)}`;\x0d\n}\x0d\n\x0d\nfunction formatNumber(fn\x2C number\x2C numericSeparator) {\x0d\n  if (!numericSeparator) {\x0d\n    // Format -0 as '-0'. Checking `number === -0` won't distinguish 0 from -0.\x0d\n    if (ObjectIs(number\x2C -0)) {\x0d\n      return fn('-0'\x2C 'number');\x0d\n    }\x0d\n    return fn(`${number}`\x2C 'number');\x0d\n  }\x0d\n  const integer = MathTrunc(number);\x0d\n  const string = String(integer);\x0d\n  if (integer === number) {\x0d\n    if (!NumberIsFinite(number) || string.includes('e')) {\x0d\n      return fn(string\x2C 'number');\x0d\n    }\x0d\n    return fn(`${addNumericSeparator(string)}`\x2C 'number');\x0d\n  }\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return fn(string\x2C 'number');\x0d\n  }\x0d\n  return fn(`${\x0d\n    addNumericSeparator(string)\x0d\n  }.${\x0d\n    addNumericSeparatorEnd(String(number).slice(string.length + 1))\x0d\n  }`\x2C 'number');\x0d\n}\x0d\n\x0d\nfunction formatBigInt(fn\x2C bigint\x2C numericSeparator) {\x0d\n  const string = String(bigint);\x0d\n  if (!numericSeparator) {\x0d\n    return fn(`${string}n`\x2C 'bigint');\x0d\n  }\x0d\n  return fn(`${addNumericSeparator(string)}n`\x2C 'bigint');\x0d\n}\x0d\n\x0d\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\x0d\n  if (typeof value === 'string') {\x0d\n    let trailer = '';\x0d\n    if (value.length > ctx.maxStringLength) {\x0d\n      const remaining = value.length - ctx.maxStringLength;\x0d\n      value = value.slice(0\x2C ctx.maxStringLength);\x0d\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\x0d\n    }\x0d\n    if (ctx.compact !== true &&\x0d\n        // We do not support handling unicode characters width with\x0d\n        // the readline getStringWidth function as there are\x0d\n        // performance implications.\x0d\n        value.length > kMinLineLength &&\x0d\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\x0d\n      return value\x0d\n        .split(/(?<=\\n)/)\x0d\n        .map((line) => fn(strEscape(line)\x2C 'string'))\x0d\n        .join(` +\\n${' '.repeat(ctx.indentationLvl + 2)}`) + trailer;\x0d\n    }\x0d\n    return fn(strEscape(value)\x2C 'string') + trailer;\x0d\n  }\x0d\n  if (typeof value === 'number')\x0d\n    return formatNumber(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'bigint')\x0d\n    return formatBigInt(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'boolean')\x0d\n    return fn(`${value}`\x2C 'boolean');\x0d\n  if (typeof value === 'undefined')\x0d\n    return fn('undefined'\x2C 'undefined');\x0d\n  // es6 symbol primitive\x0d\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\x0d\n}\x0d\n\x0d\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const output = new Array(keys.length);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    try {\x0d\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\x0d\n                                 kObjectType);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError');\x0d\n      // Use the existing functionality. This makes sure the indentation and\x0d\n      // line breaks are always correct. Otherwise it is very difficult to keep\x0d\n      // this aligned\x2C even though this is a hacky way of dealing with this.\x0d\n      const tmp = { [keys[i]]: '' };\x0d\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\x0d\n      const pos = output[i].lastIndexOf(' ');\x0d\n      // We have to find the last whitespace and have to replace that value as\x0d\n      // it will be visualized as a regular string.\x0d\n      output[i] = output[i].slice(0\x2C pos + 1) +\x0d\n                  ctx.stylize('<uninitialized>'\x2C 'special');\x0d\n    }\x0d\n  }\x0d\n  // Reset the keys to an empty array. This prevents duplicated inspection.\x0d\n  keys.length = 0;\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// The array is sparse and/or has extra keys\x0d\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\x0d\n  const keys = ObjectKeys(value);\x0d\n  let index = i;\x0d\n  for (; i < keys.length && output.length < maxLength; i++) {\x0d\n    const key = keys[i];\x0d\n    const tmp = +key;\x0d\n    // Arrays can only have up to 2^32 - 1 entries\x0d\n    if (tmp > 2 ** 32 - 2) {\x0d\n      break;\x0d\n    }\x0d\n    if (`${index}` !== key) {\x0d\n      if (!numberRegExp.test(key)) {\x0d\n        break;\x0d\n      }\x0d\n      const emptyItems = tmp - index;\x0d\n      const ending = emptyItems > 1 ? 's' : '';\x0d\n      const message = `<${emptyItems} empty item${ending}>`;\x0d\n      output.push(ctx.stylize(message\x2C 'undefined'));\x0d\n      index = tmp;\x0d\n      if (output.length === maxLength) {\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\x0d\n    index++;\x0d\n  }\x0d\n  const remaining = value.length - index;\x0d\n  if (output.length !== maxLength) {\x0d\n    if (remaining > 0) {\x0d\n      const ending = remaining > 1 ? 's' : '';\x0d\n      const message = `<${remaining} empty item${ending}>`;\x0d\n      output.push(ctx.stylize(message\x2C 'undefined'));\x0d\n    }\x0d\n  } else if (remaining > 0) {\x0d\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatArrayBuffer(ctx\x2C value) {\x0d\n  let buffer;\x0d\n  try {\x0d\n    buffer = new Uint8Array(value);\x0d\n  } catch {\x0d\n    return [ctx.stylize('(detached)'\x2C 'special')];\x0d\n  }\x0d\n  if (hexSlice === undefined)\x0d\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C\x0d\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\x0d\n    '$1 '));\x0d\n  const remaining = buffer.length - ctx.maxArrayLength;\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\x0d\n}\x0d\n\x0d\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\x0d\n  const valLen = value.length;\x0d\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\x0d\n\x0d\n  const remaining = valLen - len;\x0d\n  const output = [];\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    // Special handle sparse arrays.\x0d\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\x0d\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\x0d\n    }\x0d\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\x0d\n  }\x0d\n  if (remaining > 0)\x0d\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = value.length - maxLength;\x0d\n  const output = new Array(maxLength);\x0d\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\x0d\n    formatNumber :\x0d\n    formatBigInt;\x0d\n  for (let i = 0; i < maxLength; ++i) {\x0d\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]\x2C ctx.numericSeparator);\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    output[maxLength] = `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\x0d\n  }\x0d\n  if (ctx.showHidden) {\x0d\n    // .buffer goes last\x2C it's not a primitive like the others.\x0d\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\x0d\n    ctx.indentationLvl += 2;\x0d\n    for (const key of [\x0d\n      'BYTES_PER_ELEMENT'\x2C\x0d\n      'length'\x2C\x0d\n      'byteLength'\x2C\x0d\n      'byteOffset'\x2C\x0d\n      'buffer'\x2C\x0d\n    ]) {\x0d\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\x0d\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\x0d\n    }\x0d\n    ctx.indentationLvl -= 2;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (const v of value) {\x0d\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (const { 0: k\x2C 1: v } of value) {\x0d\n    output.push(\x0d\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\x0d\n    );\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\x0d\n  const output = new Array(maxLength);\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (let i = 0; i < maxLength; i++) {\x0d\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (state === kWeak && !ctx.sorted) {\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    ArrayPrototypeSort(output);\x0d\n  }\x0d\n  const remaining = entries.length - maxLength;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C\x0d\n                       `... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\x0d\n  const len = entries.length / 2;\x0d\n  const remaining = len - maxArrayLength;\x0d\n  const maxLength = MathMin(maxArrayLength\x2C len);\x0d\n  let output = new Array(maxLength);\x0d\n  let i = 0;\x0d\n  ctx.indentationLvl += 2;\x0d\n  if (state === kWeak) {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      output[i] =\x0d\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\x0d\n    }\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    if (!ctx.sorted)\x0d\n      output = output.sort();\x0d\n  } else {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      const res = [\x0d\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\x0d\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\x0d\n      ];\x0d\n      output[i] = reduceToSingleString(\x0d\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n    }\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (remaining > 0) {\x0d\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatWeakCollection(ctx) {\x0d\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\x0d\n}\x0d\n\x0d\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\x0d\n  if (isKeyValue) {\x0d\n    // Mark entry iterators as such.\x0d\n    braces[0] = braces[0].replace(/ Iterator] {$/\x2C ' Entries] {');\x0d\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\x0d\n  }\x0d\n\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\x0d\n}\x0d\n\x0d\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\x0d\n  let output;\x0d\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\x0d\n  if (state === kPending) {\x0d\n    output = [ctx.stylize('<pending>'\x2C 'special')];\x0d\n  } else {\x0d\n    ctx.indentationLvl += 2;\x0d\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\x0d\n    ctx.indentationLvl -= 2;\x0d\n    output = [\x0d\n      state === kRejected ?\x0d\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\x0d\n        str\x2C\x0d\n    ];\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\x0d\n                        original = value) {\x0d\n  let name\x2C str;\x0d\n  let extra = ' ';\x0d\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\x0d\n    { value: value[key]\x2C enumerable: true };\x0d\n  if (desc.value !== undefined) {\x0d\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\x0d\n    ctx.indentationLvl += diff;\x0d\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\x0d\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\x0d\n      extra = `\\n${' '.repeat(ctx.indentationLvl)}`;\x0d\n    }\x0d\n    ctx.indentationLvl -= diff;\x0d\n  } else if (desc.get !== undefined) {\x0d\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\x0d\n    const s = ctx.stylize;\x0d\n    const sp = 'special';\x0d\n    if (ctx.getters && (ctx.getters === true ||\x0d\n          (ctx.getters === 'get' && desc.set === undefined) ||\x0d\n          (ctx.getters === 'set' && desc.set !== undefined))) {\x0d\n      try {\x0d\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\x0d\n        ctx.indentationLvl += 2;\x0d\n        if (tmp === null) {\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\x0d\n        } else if (typeof tmp === 'object') {\x0d\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\x0d\n        } else {\x0d\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\x0d\n        }\x0d\n        ctx.indentationLvl -= 2;\x0d\n      } catch (err) {\x0d\n        const message = `<Inspection threw (${err.message})>`;\x0d\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\x0d\n      }\x0d\n    } else {\x0d\n      str = ctx.stylize(`[${label}]`\x2C sp);\x0d\n    }\x0d\n  } else if (desc.set !== undefined) {\x0d\n    str = ctx.stylize('[Setter]'\x2C 'special');\x0d\n  } else {\x0d\n    str = ctx.stylize('undefined'\x2C 'undefined');\x0d\n  }\x0d\n  if (type === kArrayType) {\x0d\n    return str;\x0d\n  }\x0d\n  if (typeof key === 'symbol') {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C\x0d\n      SymbolPrototypeToString(key)\x2C\x0d\n      escapeFn\x0d\n    );\x0d\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\x0d\n  } else if (key === '__proto__') {\x0d\n    name = "['__proto__']";\x0d\n  } else if (desc.enumerable === false) {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C key\x2C escapeFn);\x0d\n    name = `[${tmp}]`;\x0d\n  } else if (RegExpPrototypeExec(keyStrRegExp\x2C key) !== null) {\x0d\n    name = ctx.stylize(key\x2C 'name');\x0d\n  } else {\x0d\n    name = ctx.stylize(strEscape(key)\x2C 'string');\x0d\n  }\x0d\n  return `${name}:${extra}${str}`;\x0d\n}\x0d\n\x0d\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\x0d\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\x0d\n  // length of at least `output.length`. In addition\x2C some cases have a\x0d\n  // whitespace in-between each other that is added to the total as well.\x0d\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\x0d\n  // function. Check the performance overhead and make it an opt-in in case it's\x0d\n  // significant.\x0d\n  let totalLength = output.length + start;\x0d\n  if (totalLength + output.length > ctx.breakLength)\x0d\n    return false;\x0d\n  for (let i = 0; i < output.length; i++) {\x0d\n    if (ctx.colors) {\x0d\n      totalLength += removeColors(output[i]).length;\x0d\n    } else {\x0d\n      totalLength += output[i].length;\x0d\n    }\x0d\n    if (totalLength > ctx.breakLength) {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n  // Do not line up properties on the same line if `base` contains line breaks.\x0d\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\x0d\n}\x0d\n\x0d\nfunction reduceToSingleString(\x0d\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\x0d\n  if (ctx.compact !== true) {\x0d\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\x0d\n      // Memorize the original output length. In case the output is grouped\x2C\x0d\n      // prevent lining up the entries on a single line.\x0d\n      const entries = output.length;\x0d\n      // Group array elements together if the array contains at least six\x0d\n      // separate entries.\x0d\n      if (extrasType === kArrayExtrasType && entries > 6) {\x0d\n        output = groupArrayElements(ctx\x2C output\x2C value);\x0d\n      }\x0d\n      // `ctx.currentDepth` is set to the most inner depth of the currently\x0d\n      // inspected object part while `recurseTimes` is the actual current depth\x0d\n      // that is inspected.\x0d\n      //\x0d\n      // Example:\x0d\n      //\x0d\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\x0d\n      //\x0d\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\x0d\n      // depth of 1.\x0d\n      //\x0d\n      // Consolidate all entries of the local most inner depth up to\x0d\n      // `ctx.compact`\x2C as long as the properties are smaller than\x0d\n      // `ctx.breakLength`.\x0d\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\x0d\n          entries === output.length) {\x0d\n        // Line up all entries on a single line in case the entries do not\x0d\n        // exceed `breakLength`. Add 10 as constant to start next to all other\x0d\n        // factors that may reduce `breakLength`.\x0d\n        const start = output.length + ctx.indentationLvl +\x0d\n                      braces[0].length + base.length + 10;\x0d\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\x0d\n          const joinedOutput = join(output\x2C '\x2C ');\x0d\n          if (!joinedOutput.includes('\\n')) {\x0d\n            return `${base ? `${base} ` : ''}${braces[0]} ${joinedOutput}` +\x0d\n              ` ${braces[1]}`;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Line up each entry on an individual line.\x0d\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\x0d\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\x0d\n  }\x0d\n  // Line up all entries on a single line in case the entries do not exceed\x0d\n  // `breakLength`.\x0d\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\x0d\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\x0d\n      braces[1];\x0d\n  }\x0d\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\x0d\n  // we need to force the first item to be on the next line or the\x0d\n  // items will not line up correctly.\x0d\n  const ln = base === '' && braces[0].length === 1 ?\x0d\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\x0d\n  // Line up each entry on an individual line.\x0d\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\x0d\n}\x0d\n\x0d\nfunction hasBuiltInToString(value) {\x0d\n  // Prevent triggering proxy traps.\x0d\n  const getFullProxy = false;\x0d\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\x0d\n  if (proxyTarget !== undefined) {\x0d\n    if (proxyTarget === null) {\x0d\n      return true;\x0d\n    }\x0d\n    value = proxyTarget;\x0d\n  }\x0d\n\x0d\n  // Count objects that have no `toString` function as built-in.\x0d\n  if (typeof value.toString !== 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  // The object has a own `toString` property. Thus it's not not a built-in one.\x0d\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  // Find the object that has the `toString` property as own property in the\x0d\n  // prototype chain.\x0d\n  let pointer = value;\x0d\n  do {\x0d\n    pointer = ObjectGetPrototypeOf(pointer);\x0d\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\x0d\n\x0d\n  // Check closer if the object is a built-in.\x0d\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\x0d\n  return descriptor !== undefined &&\x0d\n    typeof descriptor.value === 'function' &&\x0d\n    builtInObjects.has(descriptor.value.name);\x0d\n}\x0d\n\x0d\nconst firstErrorLine = (error) =>\x0d\n  StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\x0d\nlet CIRCULAR_ERROR_MESSAGE;\x0d\nfunction tryStringify(arg) {\x0d\n  try {\x0d\n    return JSONStringify(arg);\x0d\n  } catch (err) {\x0d\n    // Populate the circular error message lazily\x0d\n    if (!CIRCULAR_ERROR_MESSAGE) {\x0d\n      try {\x0d\n        const a = {}; a.a = a; JSONStringify(a);\x0d\n      } catch (circularError) {\x0d\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(circularError);\x0d\n      }\x0d\n    }\x0d\n    if (err.name === 'TypeError' &&\x0d\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\x0d\n      return '[Circular]';\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction format(...args) {\x0d\n  return formatWithOptionsInternal(undefined\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatWithOptions(inspectOptions\x2C ...args) {\x0d\n  validateObject(inspectOptions\x2C 'inspectOptions'\x2C { allowArray: true });\x0d\n  return formatWithOptionsInternal(inspectOptions\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatNumberNoColor(number\x2C options) {\x0d\n  return formatNumber(\x0d\n    stylizeNoColor\x2C\x0d\n    number\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatBigIntNoColor(bigint\x2C options) {\x0d\n  return formatBigInt(\x0d\n    stylizeNoColor\x2C\x0d\n    bigint\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\x0d\n  const first = args[0];\x0d\n  let a = 0;\x0d\n  let str = '';\x0d\n  let join = '';\x0d\n\x0d\n  if (typeof first === 'string') {\x0d\n    if (args.length === 1) {\x0d\n      return first;\x0d\n    }\x0d\n    let tempStr;\x0d\n    let lastPos = 0;\x0d\n\x0d\n    for (let i = 0; i < first.length - 1; i++) {\x0d\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\x0d\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\x0d\n        if (a + 1 !== args.length) {\x0d\n          switch (nextChar) {\x0d\n            case 115: { // 's'\x0d\n              const tempArg = args[++a];\x0d\n              if (typeof tempArg === 'number') {\x0d\n                tempStr = formatNumberNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg !== 'object' ||\x0d\n                         tempArg === null ||\x0d\n                         !hasBuiltInToString(tempArg)) {\x0d\n                tempStr = String(tempArg);\x0d\n              } else {\x0d\n                tempStr = inspect(tempArg\x2C {\x0d\n                  ...inspectOptions\x2C\x0d\n                  compact: 3\x2C\x0d\n                  colors: false\x2C\x0d\n                  depth: 0\x0d\n                });\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 106: // 'j'\x0d\n              tempStr = tryStringify(args[++a]);\x0d\n              break;\x0d\n            case 100: { // 'd'\x0d\n              const tempNum = args[++a];\x0d\n              if (typeof tempNum === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempNum\x2C inspectOptions);\x0d\n              } else if (typeof tempNum === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(Number(tempNum)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 79: // 'O'\x0d\n              tempStr = inspect(args[++a]\x2C inspectOptions);\x0d\n              break;\x0d\n            case 111: // 'o'\x0d\n              tempStr = inspect(args[++a]\x2C {\x0d\n                ...inspectOptions\x2C\x0d\n                showHidden: true\x2C\x0d\n                showProxy: true\x2C\x0d\n                depth: 4\x0d\n              });\x0d\n              break;\x0d\n            case 105: { // 'i'\x0d\n              const tempInteger = args[++a];\x0d\n              if (typeof tempInteger === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempInteger\x2C inspectOptions);\x0d\n              } else if (typeof tempInteger === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseInt(tempInteger)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 102: { // 'f'\x0d\n              const tempFloat = args[++a];\x0d\n              if (typeof tempFloat === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseFloat(tempFloat)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 99: // 'c'\x0d\n              a += 1;\x0d\n              tempStr = '';\x0d\n              break;\x0d\n            case 37: // '%'\x0d\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n              lastPos = i + 1;\x0d\n              continue;\x0d\n            default: // Any other character is not a correct placeholder\x0d\n              continue;\x0d\n          }\x0d\n          if (lastPos !== i - 1) {\x0d\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\x0d\n          }\x0d\n          str += tempStr;\x0d\n          lastPos = i + 1;\x0d\n        } else if (nextChar === 37) {\x0d\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n          lastPos = i + 1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (lastPos !== 0) {\x0d\n      a++;\x0d\n      join = ' ';\x0d\n      if (lastPos < first.length) {\x0d\n        str += StringPrototypeSlice(first\x2C lastPos);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  while (a < args.length) {\x0d\n    const value = args[a];\x0d\n    str += join;\x0d\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\x0d\n    join = ' ';\x0d\n    a++;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const icu = internalBinding('icu');\x0d\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\x0d\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\x0d\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\x0d\n  // best thing possible at the moment\x2C since it's difficult to know what\x0d\n  // the receiving end supports.\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    for (let i = 0; i < str.length; i++) {\x0d\n      // Try to avoid calling into C++ by first handling the ASCII portion of\x0d\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\x0d\n      const code = str.charCodeAt(i);\x0d\n      if (code >= 127) {\x0d\n        width += icu.getStringWidth(str.slice(i).normalize('NFC'));\x0d\n        break;\x0d\n      }\x0d\n      width += code >= 32 ? 1 : 0;\x0d\n    }\x0d\n    return width;\x0d\n  };\x0d\n} else {\x0d\n  /**\x0d\n   * Returns the number of columns required to display the given string.\x0d\n   */\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    str = StringPrototypeNormalize(str\x2C 'NFC');\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      const code = StringPrototypeCodePointAt(char\x2C 0);\x0d\n      if (isFullWidthCodePoint(code)) {\x0d\n        width += 2;\x0d\n      } else if (!isZeroWidthCodePoint(code)) {\x0d\n        width++;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return width;\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Returns true if the character represented by a given\x0d\n   * Unicode code point is full-width. Otherwise returns false.\x0d\n   */\x0d\n  const isFullWidthCodePoint = (code) => {\x0d\n    // Code points are partially derived from:\x0d\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\x0d\n    return code >= 0x1100 && (\x0d\n      code <= 0x115f ||  // Hangul Jamo\x0d\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\x0d\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\x0d\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\x0d\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\x0d\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\x0d\n      (code >= 0x3250 && code <= 0x4dbf) ||\x0d\n      // CJK Unified Ideographs .. Yi Radicals\x0d\n      (code >= 0x4e00 && code <= 0xa4c6) ||\x0d\n      // Hangul Jamo Extended-A\x0d\n      (code >= 0xa960 && code <= 0xa97c) ||\x0d\n      // Hangul Syllables\x0d\n      (code >= 0xac00 && code <= 0xd7a3) ||\x0d\n      // CJK Compatibility Ideographs\x0d\n      (code >= 0xf900 && code <= 0xfaff) ||\x0d\n      // Vertical Forms\x0d\n      (code >= 0xfe10 && code <= 0xfe19) ||\x0d\n      // CJK Compatibility Forms .. Small Form Variants\x0d\n      (code >= 0xfe30 && code <= 0xfe6b) ||\x0d\n      // Halfwidth and Fullwidth Forms\x0d\n      (code >= 0xff01 && code <= 0xff60) ||\x0d\n      (code >= 0xffe0 && code <= 0xffe6) ||\x0d\n      // Kana Supplement\x0d\n      (code >= 0x1b000 && code <= 0x1b001) ||\x0d\n      // Enclosed Ideographic Supplement\x0d\n      (code >= 0x1f200 && code <= 0x1f251) ||\x0d\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\x0d\n      // Emoticons 0x1f600 - 0x1f64f\x0d\n      (code >= 0x1f300 && code <= 0x1f64f) ||\x0d\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\x0d\n      (code >= 0x20000 && code <= 0x3fffd)\x0d\n    );\x0d\n  };\x0d\n\x0d\n  const isZeroWidthCodePoint = (code) => {\x0d\n    return code <= 0x1F || // C0 control codes\x0d\n      (code >= 0x7F && code <= 0x9F) || // C1 control codes\x0d\n      (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\x0d\n      (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\x0d\n      // Combining Diacritical Marks for Symbols\x0d\n      (code >= 0x20D0 && code <= 0x20FF) ||\x0d\n      (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\x0d\n      (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\x0d\n      (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove all VT control characters. Use to estimate displayed string width.\x0d\n */\x0d\nfunction stripVTControlCharacters(str) {\x0d\n  validateString(str\x2C 'str');\x0d\n\x0d\n  return str.replace(ansi\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  identicalSequenceRange\x2C\x0d\n  inspect\x2C\x0d\n  inspectDefaultOptions\x2C\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n};\x0d\n
code-source-info,0x32a34b6ab88,26,72155,72319,C0O72155C8O72186C16O72201C24O72186C29O72261C32O72268C37O72316,,
tick,0x7ff6d819753c,1167880,0,0x0,3,0x7ff6d892cc40,0x32a34b6707c,0x32a34b6609a,0x32a34b5b916,0x7ff6d8e073b3
tick,0x7fffad8ff25f,1167913,0,0x0,3,0x7ff6d893c890,0x32a34b6a77c,0x32a34b6a638,0x7ff6d8217390,0x32a34b6a4d9,0x167f8a4588c,0x32a34b4ce01,0x32a34b4c531
tick,0x7ff6d8197550,1167975,0,0x0,3,0x7ff6d893c890,0x32a34b6a77c,0x32a34b6a638,0x7ff6d8217390,0x32a34b6a4d9,0x167f8a4588c,0x32a34b4ce01,0x32a34b4c531
tick,0x7ff6d820e638,1168038,0,0x0,3,0x7ff6d893c890,0x32a34b6a77c,0x32a34b6a638,0x7ff6d8217390,0x32a34b6a4d9,0x167f8a4588c,0x32a34b4ce01,0x32a34b4c531
code-creation,LazyCompile,10,1168257,0x32a34b6f818,763,formatWithOptionsInternal node:internal/util/inspect:2122:35,0x20182d98eb0,~
code-source-info,0x32a34b6f
tick,0x7ff6d93ad9eb,1168648,0,0x0,3,0x7ff6d893c890,0x32a34b6aba8,0x32a34b6a77c,0x32a34b6a638,0x7ff6d8217390,0x32a34b6a4d9,0x167f8a4588c,0x32a34b4ce01,0x32a34b4c531
code-creation,LazyCompile,10,1168853,0x32a34b70050,395,inspect node:internal/util/inspect:295:17,0x20182d97a50,~
code-source-info,0x32a34b70050,26,8924,10990,C0O8924C2O8977C9O9071C15O9104C18O9126C28O9150C31O9172C41O9192C44O9214C54O9242C57O9264C67O9295C70O9317C80O9349C83O9371C93O9409C96O9431C106O9466C109O9488C119O9515C122O9537C132O9559C135O9581C145O9603C148O9625C158O9657C161O9679C172O9720C179O9727C184O9771C191O9778C196O9792C198O9805C203O9835C205O9856C208O9845C212O9891C219O9898C226O9914C231O9944C233O9966C236O9955C240O10027C246O10067C248O10082C254O10102C258O10137C263O10137C268O10175C270O10190C274O10180C279O10226C281O10233C285O10431C292O10477C295O10447C304O10523C309O10551C311O10566C314O10560C320O10597C326O10707C328O10723C332O10200C337O10162C340O10774C346O10782C348O10794C352O10825C358O10871C361O10869C365O10892C371O10940C374O10938C378O10953C389O10960C394O10987,,
code-creation,LazyCompile,10,1169358,0x32a34b70598,491,formatValue node:internal/util/inspect:750:21,0x20182d98050,~
code-source-info,0x32a34b
code-creation,LazyCompile,10,1169736,0x32a34b70940,11,isUndetectableObject node:internal/util/inspect:161:30,0x20182d979b0,~
code-source-info,0x32a34b70940,26,3403,3453,C0O3435C9O3440C10O3453,,
code-creation,LazyCompile,10,1169974,0x32a34b70bd0,380,formatPrimitive node:internal/util/inspect:1590:25,0x20182d986e0,~
code-source-info,0x32a34b70bd
code-creation,LazyCompile,10,1170257,0x32a34b70f80,209,formatNumber node:internal/util/inspect:1556:22,0x20182d98640,~
code-source-info,0x32a34b70f80,26,52495,53241,C0O52531C4O52642C12O52646C19O52677C25O52684C30O52703C31O52716C33O52729C38O52723C43O52749C44O52774C49O52774C54O52811C59O52811C64O52831C66O52843C71O52862C76O52867C82O52900C90O52900C97O52924C100O52931C105O52952C106O52965C109O52978C118O52972C123O53019C124O53028C129O53032C135O53060C138O53067C143O53088C144O53097C147O53116C164O53180C167O53180C172O53194C177O53208C181O53215C185O53195C191O53157C203O53104C208O53238,,
code-creation,LazyCompile,10,1170457,0x32a34b711a0,3,stylizeNoColor node:internal/util/inspect:555:24,0x20182d97d80,~
code-source-info,0x32a34b711a0,26,17342,17367,C0O17353C2O17364,,
tick,0x7ff6d8b7dfff,1170683,0,0x0,3,0x7ff6d893c890,0x32a34b6a63e,0x7ff6d8217390,0x32a34b6a4d9,0x167f8a4588c,0x32a34b4ce01,0x32a34b4c531
code-creation,LazyCompile,10,1170721,0x32a34b713b8,269,value node:internal/console/constructor:271:20,0x1b92a0bc2f0,~
code-source-info,0x32a34b713b8,107,8218,9700,C0O8276C5O8318C7O8323C9O8322C13O8365C15O8382C17O8378C21O8416C23O8433C29O8448C34O8485C38O8511C44O8538C49O8584C55O8591C60O8609C68O8613C75O8665C90O8723C98O8674C105O8759C107O8780C112O8806C122O8831C123O8848C128O8873C133O8873C138O8887C145O9212C153O9212C160O9235C165O9260C176O9260C182O9299C187O9299C206O9499C216O9503C222O9539C224O9539C238O9647C239O9654C250O9654C268O9699,,
code-creation,LazyCompile,10,1170958,0x32a34b71618,39,once node:events:646:44,0x20182da3e80,~
code-source-info,0x32a34b71618,29,19531,19649,C0O19553C3O19553C7O19588C24O19597C30O19588C36O19634C38O19646,,
code-creation,LazyCompile,10,1171100,0x32a34b717c8,60,_onceWrap node:events:632:19,0x20182da3e30,~
code-source-info,0x32a34b717c8,29,19090,19319,C0O19134C6O19158C12O19169C18O19177C24O19183C31O19214C34O19226C39O19226C45O19242C47O19259C51O19274C53O19287C57O19301C59O19316,,
code-creation,LazyCompile,10,1171610,0x32a34b718e8,26,Writable.write node:internal/streams/writable:336:36,0x351f86dcb18,~
code-source-info,0x32a34b718e8,65,11103,11183,C0O11130C15O11137C22O11171C25O11180,,
code-creation,LazyCompile,10,1172142,0x32a34b71ad8,338,_write node:internal/streams/writable:286:16,0x351f86dcac8,~
code-source-info,0x32a34b71ad
code-creation,LazyCompile,10,1172811,0x32a34b71ea8,217,writeOrBuffer node:internal/streams/writable:368:23,0x351f86dcd00,~
code-source-info,0x32a34b71ea8,65,12054,13076,C0O12120C10O12143C15O12156C22O12172C25O12169C29O12240C34O12255C38O12247C42O12346C44O12361C45O12377C49O12400C55O12417C61O12433C67O12451C73O12477C78O12486C90O12493C96O12500C102O12510C106O12486C111O12538C119O12561C124O12584C125O12601C129O12632C137O12652C142O12670C143O12684C149O12717C151O12732C155O12744C157O12758C161O12775C162O12789C166O12802C167O12813C171O12833C176O12863C190O12833C195O12878C196O12889C200O13024C204O13045C211O13063C216O13073,,
code-creation,LazyCompile,10,1173075,0x32a34b720e0,26,Socket._write node:net:885:35,0x167f8a5e180,~
code-source-info,0x32a34b720e0,395,23529,23604,C0O23560C19O23560C25O23603,,
code-creation,LazyCompile,10,1173371,0x32a34b722e0,186,Socket._writeGeneric node:net:848:42,0x167f8a5e040,~
code-source-info,0x32a34b722e0,395,22602,23384,C0O22602C21O22808C27O22827C29O22845C33O22858C35O22880C39O22902C52O22902C58O23008C59O23015C60O23024C61O23042C65O23053C67O23075C71O23096C77O23112C84O23119C87O23115C93O23112C97O23146C98O23159C99O23175C104O23175C108O23199C110O23207C114O23224C130O23230C138O23274C157O23280C163O23331C169O23343C173O23348C176O23375C180O23369C185O23383,,
tick,0x7ff6d93adb6a,1173672,0,0x0,3,0x7ff6d893c890,0x32a34b720f3,0x32a34b71f66,0x32a34b71c24,0x32a34b718f7,0x32a34b71473,0x32a34b6a63e,0x7ff6d8217390,0x32a34b6a4d9,0x167f8a4588c,0x32a34b4ce01,0x32a34b4c531
code-creation,LazyCompile,10,1173756,0x32a34b72548,45,_unrefTimer node:net:441:52,0x167f8a5d250,~
code-source-info,0x32a34b72548,395,12502,12617,C0O12523C5O12531C9O12563C11O12569C13O12568C18O12587C20O12589C22O12588C26O12599C31O12599C35O12547C40O12510C44O12616,,
code-creation,LazyCompile,10,1173909,0x32a34b72668,55,writeGeneric node:internal/stream_base_commons:147:22,0x351f86f9080,~
script-source,84,node:internal/stream_base_commons,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { FastBuffer } = require('internal/buffer');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kBytesWritten\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { UV_EOF } = internalBinding('uv');\x0d\nconst {\x0d\n  errnoException\x0d\n} = require('internal/errors');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  kTimeout\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x0d\n} = require('internal/timers');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { validateFunction } = require('internal/validators');\x0d\n\x0d\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\x0d\nconst kUpdateTimer = Symbol('kUpdateTimer');\x0d\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kSession = Symbol('kSession');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kBufferGen = Symbol('kBufferGen');\x0d\nconst kBufferCb = Symbol('kBufferCb');\x0d\n\x0d\nfunction handleWriteReq(req\x2C data\x2C encoding) {\x0d\n  const { handle } = req;\x0d\n\x0d\n  switch (encoding) {\x0d\n    case 'buffer':\x0d\n    {\x0d\n      const ret = handle.writeBuffer(req\x2C data);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = data;\x0d\n      return ret;\x0d\n    }\x0d\n    case 'latin1':\x0d\n    case 'binary':\x0d\n      return handle.writeLatin1String(req\x2C data);\x0d\n    case 'utf8':\x0d\n    case 'utf-8':\x0d\n      return handle.writeUtf8String(req\x2C data);\x0d\n    case 'ascii':\x0d\n      return handle.writeAsciiString(req\x2C data);\x0d\n    case 'ucs2':\x0d\n    case 'ucs-2':\x0d\n    case 'utf16le':\x0d\n    case 'utf-16le':\x0d\n      return handle.writeUcs2String(req\x2C data);\x0d\n    default:\x0d\n    {\x0d\n      const buffer = Buffer.from(data\x2C encoding);\x0d\n      const ret = handle.writeBuffer(req\x2C buffer);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = buffer;\x0d\n      return ret;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onWriteComplete(status) {\x0d\n  debug('onWriteComplete'\x2C status\x2C this.error);\x0d\n\x0d\n  const stream = this.handle[owner_symbol];\x0d\n\x0d\n  if (stream.destroyed) {\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // TODO (ronag): This should be moved before if(stream.destroyed)\x0d\n  // in order to avoid swallowing error.\x0d\n  if (status < 0) {\x0d\n    const ex = errnoException(status\x2C 'write'\x2C this.error);\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(ex);\x0d\n    else\x0d\n      stream.destroy(ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n  stream[kAfterAsyncWrite](this);\x0d\n\x0d\n  if (typeof this.callback === 'function')\x0d\n    this.callback(null);\x0d\n}\x0d\n\x0d\nfunction createWriteWrap(handle\x2C callback) {\x0d\n  const req = new WriteWrap();\x0d\n\x0d\n  req.handle = handle;\x0d\n  req.oncomplete = onWriteComplete;\x0d\n  req.async = false;\x0d\n  req.bytes = 0;\x0d\n  req.buffer = null;\x0d\n  req.callback = callback;\x0d\n\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writevGeneric(self\x2C data\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const allBuffers = data.allBuffers;\x0d\n  let chunks;\x0d\n  if (allBuffers) {\x0d\n    chunks = data;\x0d\n    for (let i = 0; i < data.length; i++)\x0d\n      data[i] = data[i].chunk;\x0d\n  } else {\x0d\n    chunks = new Array(data.length << 1);\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const entry = data[i];\x0d\n      chunks[i * 2] = entry.chunk;\x0d\n      chunks[i * 2 + 1] = entry.encoding;\x0d\n    }\x0d\n  }\x0d\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\x0d\n\x0d\n  // Retain chunks\x0d\n  if (err === 0) req._chunks = chunks;\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const err = handleWriteReq(req\x2C data\x2C encoding);\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\x0d\n  req.bytes = streamBaseState[kBytesWritten];\x0d\n  req.async = !!streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n  if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'write'\x2C req.error));\x0d\n\x0d\n  if (!req.async && typeof req.callback === 'function') {\x0d\n    req.callback();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onStreamRead(arrayBuffer) {\x0d\n  const nread = streamBaseState[kReadBytesOrError];\x0d\n\x0d\n  const handle = this;\x0d\n  const stream = this[owner_symbol];\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n\x0d\n  if (nread > 0 && !stream.destroyed) {\x0d\n    let ret;\x0d\n    let result;\x0d\n    const userBuf = stream[kBuffer];\x0d\n    if (userBuf) {\x0d\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\x0d\n      const bufGen = stream[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        const nextBuf = bufGen();\x0d\n        if (isUint8Array(nextBuf))\x0d\n          stream[kBuffer] = ret = nextBuf;\x0d\n      }\x0d\n    } else {\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\x0d\n      result = stream.push(buf);\x0d\n    }\x0d\n    if (!result) {\x0d\n      handle.reading = false;\x0d\n      if (!stream.destroyed) {\x0d\n        const err = handle.readStop();\x0d\n        if (err)\x0d\n          stream.destroy(errnoException(err\x2C 'read'));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  if (nread === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\x0d\n  // and will not deliver any more read events after this point.\x0d\n  // (equivalently\x2C it should have called readStop on itself already).\x0d\n  // Some streams may be reset and explicitly started again with a call\x0d\n  // to readStart\x2C such as TTY.\x0d\n\x0d\n  if (nread !== UV_EOF) {\x0d\n    // CallJSOnreadMethod expects the return value to be a buffer.\x0d\n    // Ref: https://github.com/nodejs/node/pull/34375\x0d\n    stream.destroy(errnoException(nread\x2C 'read'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Defer this until we actually emit end\x0d\n  if (stream._readableState.endEmitted) {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream[kMaybeDestroy]();\x0d\n  } else {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream.on('end'\x2C stream[kMaybeDestroy]);\x0d\n\x0d\n    // Push a null to signal the end of data.\x0d\n    // Do it before `maybeDestroy` for correct order of events:\x0d\n    // `end` -> `close`\x0d\n    stream.push(null);\x0d\n    stream.read(0);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setStreamTimeout(msecs\x2C callback) {\x0d\n  if (this.destroyed)\x0d\n    return this;\x0d\n\x0d\n  this.timeout = msecs;\x0d\n\x0d\n  // Type checking identical to timers.enroll()\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // Attempt to clear an existing timer in both cases -\x0d\n  //  even if it will be rescheduled we don't want to leak an existing timer.\x0d\n  clearTimeout(this[kTimeout]);\x0d\n\x0d\n  if (msecs === 0) {\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.removeListener('timeout'\x2C callback);\x0d\n    }\x0d\n  } else {\x0d\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\x0d\n    if (this[kSession]) this[kSession][kUpdateTimer]();\x0d\n\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.once('timeout'\x2C callback);\x0d\n    }\x0d\n  }\x0d\n  return this;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kMaybeDestroy\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  kHandle\x2C\x0d\n  kSession\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n};\x0d\n
code-source-info,0x32a34b72668,84,3743,3933,C0O3787C5O3808C7O3807C11O3787C17O3838C29O3838C35O3880C47O3880C52O3919C54O3930,,
code-creation,LazyCompile,10,1174826,0x32a34b73090,47,createWriteWrap node:internal/stream_base_commons:109:25,0x351f86f8fe0,~
code-source-info,0x32a34b73090,84,2827,3052,C0O2863C5O2863C11O2885C13O2896C17O2909C19O2924C23O2946C24O2956C28O2968C29O2978C33O2986C34O2997C38O3008C40O3021C44O3038C46O3049,,
tick,0x7fffad8ffaa0,1175055,0,0x0,3,0x7ff6d893c890,0x32a34b72673,0x32a34b7237d,0x32a34b720f3,0x32a34b71f66,0x32a34b71c24,0x32a34b718f7,0x32a34b71473,0x32a34b6a63e,0x7ff6d8217390,0x32a34b6a4d9,0x167f8a4588c,0x32a34b4ce01,0x32a34b4c531
code-creation,LazyCompile,10,1175133,0x32a34b73298,215,handleWriteReq node:internal/stream_base_commons:45:24,0x351f86f8f40,~
code-source-info,0x32a34b73298,84,1218,2083,C0O1253C5O1274C80O1347C85O1347C92O1378C99O1398C101O1397C106O1428C108O1439C112O1454C114O1465C115O1534C120O1534C126O1563C127O1622C132O1622C138O1649C139O1690C144O1690C150O1718C151O1820C156O1820C162O1847C163O1891C168O1898C173O1898C180O1946C185O1946C192O1979C199O1999C201O1998C206O2029C208O2040C212O2057C214O2068,,
code-creation,LazyCompile,10,1175567,0x32a34b734e0,92,afterWriteDispatched node:internal/stream_base_commons:155:30,0x351f86f90d0,~
code-source-info,0x32a34b734e0,84,3966,4250,C0O3986C2O3998C7O4014C9O4013C12O3996C16O4033C18O4047C23O4063C25O4062C30O4043C34O4089C35O4097C40O4109C42O4119C48O4152C56O4119C62O4116C66O4160C67O4175C73O4195C81O4231C86O4231C91O4249,,
code-creation,LazyCompile,10,1175808,0x32a34b73670,62,Readable.removeListener node:internal/streams/readable:916:45,0x351f86ce460,~
code-source-info,0x32a34b73670,58,29930,30502,C0O29956C5O29963C10O29973C15O29988C29O29988C35O30065C37O30072C42O30429C45O30437C53O30437C59O30488C61O30499,,
tick,0x7fffad96feb4,1176983,0,0x0,8
tick,0x7fffad96feb4,1178940,0,0x0,8
tick,0x7fffad96feb4,1181002,0,0x0,8
tick,0x7fffad96feb4,1182961,0,0x0,8
tick,0x7fffad96feb4,1186404,0,0x0,8
tick,0x7fffad96feb4,1187888,0,0x0,8
tick,0x7fffad96feb4,1189898,0,0x0,8
tick,0x7fffad96feb4,1191930,0,0x0,8
tick,0x7fffad96feb4,1193887,0,0x0,8
tick,0x7fffad96feb4,1195935,0,0x0,8
tick,0x7fffad96feb4,1197854,0,0x0,8
tick,0x7fffad96feb4,1199935,0,0x0,8
tick,0x7fffad96feb4,1201852,0,0x0,8
tick,0x7fffad96feb4,1203848,0,0x0,8
tick,0x7fffad96feb4,1205878,0,0x0,8
tick,0x7fffad96feb4,1207840,0,0x0,8
code-creation,LazyCompile,10,1208341,0x32a34b73818,169,onWriteComplete node:internal/stream_base_commons:80:25,0x351f86f8f90,~
code-source-info,0x32a34b73818,84,2111,2799,C0O2125C8O2163C16O2125C21O2196C28O2203C30O2202C34O2234C40O2268C48O2305C55O2305C60O2326C61O2333C62O2455C63O2466C68O2489C76O2526C84O2489C90O2555C98O2592C103O2592C110O2630C115O2630C120O2648C121O2655C122O2666C124O2673C126O2672C130O2686C134O2693C136O2700C138O2699C142O2717C147O2746C155O2781C162O2781C168O2798,,
code-creation,LazyCompile,10,1208670,0x32a34b73a18,10, node:internal/stream_base_commons:38:66,0x351f86f8cb8,~
code-source-info,0x32a34b73a18,84,1044,1071,C0O1057C2O1063C9O1070,,
code-creation,LazyCompile,10,1208800,0x32a34b73b28,35,get node:internal/streams/duplex:103:8,0x351f86c2790,~
code-source-info,0x32a34b73b28,57,3916,4131,C0O3937C6O3983C12O4024C13O4037C14O4066C19O4081C25O4099C30O4114C34O4124,,
code-creation,LazyCompile,10,1208929,0x32a34b73c30,5,get node:net:626:16,0x167f8a5d748,~
code-source-info,0x32a34b73c30,395,17092,17131,C0O17114C4O17126,,
code-creation,LazyCompile,10,1209032,0x32a34b73d08,12,Socket.<computed> node:net:844:46,0x167f8a5dfb0,~
code-source-info,0x32a34b73d08,395,22515,22556,C0O22523C2O22528C6O22549C11O22555,,
code-creation,LazyCompile,10,1209279,0x32a34b73ee0,323,onwrite node:internal/streams/writable:428:17,0x351f86dcdf0,~
code-source-info,0x32a34b73ee
code-creation,LazyCompile,10,1209547,0x32a34b741f8,104,afterWrite node:internal/streams/writable:490:20,0x351f86dce90,~
code-source-info,0x32a34b741f8,65,15737,16111,C0O15794C7O15812C14O15831C20O15838C25O15858C30O15872C32O15894C33O15910C37O15931C45O15931C50O15971C60O15971C65O15983C71O15998C75O16007C78O15956C81O16033C87O16051C90O16051C94O16081C97O16081C103O16110,,
code-creation,LazyCompile,10,1209699,0x32a34b743a8,87, node:internal/console/constructor:355:10,0x30dafbea00,~
code-source-info,0x32a34b743a8,107,11031,11865,C0O11252C7O11269C9O11265C17O11298C26O11317C31O11331C35O11359C40O11374C46O11776C54O11776C61O11799C66O11824C79O11824C86O11864,,
tick,0x7ff6d8a21f5a,1209835,0,0x0,0,0x7ff6d89311b0,0x32a34b717c8,0x32a34b71630,0x32a34b743f7,0x32a34b74243,0x32a34b7401c,0x32a34b738ba
code-creation,LazyCompile,10,1209950,0x32a34b74558,97,finishMaybe node:internal/streams/writable:718:21,0x351f86dd168,~
code-source-info,0x32a34b74558,65,21729,22227,C0O21756C3O21760C9O21786C12O21786C17O21827C23O21837C28O21853C32O21874C38O21889C42O21902C45O21910C61O21910C68O22119C71O22123C77O22153C83O22168C87O22181C90O22181C96O22226,,
code-creation,LazyCompile,10,1210122,0x32a34b74738,80,needFinish node:internal/streams/writable:653:20,0x351f86dd078,~
code-source-info,0x32a34b74738,65,20066,20398,C0O20093C6O20121C13O20151C19O20183C25O20190C30O20217C37O20245C42O20254C48O20261C53O20288C60O20318C67O20347C74O20381C79O20395,,
tick,0x7fffad96feb4,1211956,0,0x0,8
tick,0x7fffad96feb4,1214475,0,0x0,8
tick,0x7fffad96feb4,1216256,0,0x0,8
tick,0x7fffad96feb4,1218119,0,0x0,8
tick,0x7fffad96feb4,1219844,0,0x0,8
tick,0x7fffad96feb4,1224514,0,0x0,8
tick,0x7fffad96feb4,1225843,0,0x0,8
tick,0x7fffad96feb4,1233315,0,0x0,8
tick,0x7fffad96feb4,1234772,0,0x0,8
tick,0x7fffad96feb4,1236975,0,0x0,8
tick,0x7fffad96feb4,1241215,0,0x0,8
tick,0x7fffad96feb4,1241806,0,0x0,8
tick,0x7fffad96feb4,1243812,0,0x0,8
tick,0x7fffad96feb4,1246970,0,0x0,8
tick,0x7fffad96feb4,1248883,0,0x0,8
tick,0x7fffad96feb4,1250920,0,0x0,8
tick,0x7fffad96feb4,1252760,0,0x0,8
tick,0x7fffad96feb4,1255313,0,0x0,8
tick,0x7fffad96feb4,1257163,0,0x0,8
tick,0x7fffad96feb4,1258695,0,0x0,8
tick,0x7fffad96feb4,1261123,0,0x0,8
tick,0x7fffad96feb4,1264654,0,0x0,8
tick,0x7fffad96feb4,1265641,0,0x0,8
tick,0x7fffad96feb4,1267652,0,0x0,8
tick,0x7fffad96feb4,1268949,0,0x0,8
tick,0x7fffad96feb4,1274200,0,0x0,8
tick,0x7fffad96feb4,1275934,0,0x0,8
tick,0x7fffad96feb4,1277679,0,0x0,8
tick,0x7fffad96feb4,1280332,0,0x0,8
tick,0x7fffad96feb4,1281939,0,0x0,8
tick,0x7fffad96feb4,1283713,0,0x0,8
tick,0x7fffad96feb4,1285657,0,0x0,8
tick,0x7fffad96feb4,1287649,0,0x0,8
tick,0x7fffad96feb4,1290345,0,0x0,8
tick,0x7fffad96feb4,1291654,0,0x0,8
tick,0x7fffad96feb4,1293721,0,0x0,8
tick,0x7fffad96feb4,1295794,0,0x0,8
tick,0x7fffad96feb4,1297590,0,0x0,8
tick,0x7fffad96feb4,1299590,0,0x0,8
tick,0x7fffad96feb4,1301613,0,0x0,8
tick,0x7fffad96feb4,1303573,0,0x0,8
tick,0x7fffad96feb4,1307455,0,0x0,8
tick,0x7fffad96feb4,1308634,0,0x0,8
tick,0x7fffad96feb4,1310597,0,0x0,8
tick,0x7fffad96feb4,1312691,0,0x0,8
tick,0x7fffad96feb4,1314586,0,0x0,8
tick,0x7fffad96feb4,1316902,0,0x0,8
tick,0x7fffad96feb4,1318559,0,0x0,8
tick,0x7fffad96feb4,1320593,0,0x0,8
tick,0x7fffad96feb4,1322633,0,0x0,8
tick,0x7fffad96feb4,1324548,0,0x0,8
tick,0x7fffad96feb4,1326519,0,0x0,8
tick,0x7fffad96feb4,1328532,0,0x0,8
tick,0x7fffad96feb4,1330514,0,0x0,8
tick,0x7fffad96feb4,1332551,0,0x0,8
tick,0x7fffad96feb4,1334556,0,0x0,8
tick,0x7fffad96feb4,1336490,0,0x0,8
tick,0x7fffad96feb4,1340714,0,0x0,8
tick,0x7fffad96feb4,1342482,0,0x0,8
tick,0x7fffad96feb4,1344481,0,0x0,8
tick,0x7fffad96feb4,1346521,0,0x0,8
tick,0x7fffad96feb4,1348460,0,0x0,8
tick,0x7fffad96feb4,1350466,0,0x0,8
tick,0x7fffad96feb4,1352468,0,0x0,8
tick,0x7fffad96feb4,1354437,0,0x0,8
tick,0x7fffad96feb4,1356548,0,0x0,8
tick,0x7fffad96feb4,1358492,0,0x0,8
tick,0x7fffad96feb4,1360445,0,0x0,8
tick,0x7fffad96feb4,1362418,0,0x0,8
tick,0x7fffad96feb4,1364411,0,0x0,8
tick,0x7fffad96feb4,1366405,0,0x0,8
tick,0x7fffad96feb4,1368394,0,0x0,8
tick,0x7fffad96feb4,1370393,0,0x0,8
tick,0x7fffad96feb4,1372408,0,0x0,8
tick,0x7fffad96feb4,1374386,0,0x0,8
tick,0x7fffad96feb4,1376384,0,0x0,8
tick,0x7fffad96feb4,1378403,0,0x0,8
tick,0x7fffad96feb4,1380367,0,0x0,8
tick,0x7fffad96feb4,1382359,0,0x0,8
tick,0x7fffad96feb4,1384374,0,0x0,8
tick,0x7fffad96feb4,1386356,0,0x0,8
tick,0x7fffad96feb4,1388344,0,0x0,8
tick,0x7fffad96feb4,1390352,0,0x0,8
tick,0x7fffad96feb4,1392470,0,0x0,8
tick,0x7fffad96feb4,1394320,0,0x0,8
tick,0x7fffad96feb4,1396313,0,0x0,8
tick,0x7fffad96feb4,1398312,0,0x0,8
tick,0x7fffad96feb4,1400566,0,0x0,8
tick,0x7fffad96feb4,1402300,0,0x0,8
tick,0x7fffad96feb4,1404420,0,0x0,8
tick,0x7fffad96feb4,1406311,0,0x0,8
tick,0x7fffad96feb4,1408286,0,0x0,8
tick,0x7fffad96feb4,1410283,0,0x0,8
tick,0x7fffad96feb4,1412319,0,0x0,8
tick,0x7fffad96feb4,1414246,0,0x0,8
tick,0x7fffad96feb4,1416409,0,0x0,8
tick,0x7fffad96feb4,1418357,0,0x0,8
tick,0x7fffad96feb4,1420412,0,0x0,8
tick,0x7fffad96feb4,1422434,0,0x0,8
tick,0x7fffad96feb4,1424245,0,0x0,8
tick,0x7fffad96feb4,1426245,0,0x0,8
tick,0x7fffad96feb4,1428234,0,0x0,8
tick,0x7fffad96feb4,1430276,0,0x0,8
tick,0x7fffad96feb4,1432233,0,0x0,8
tick,0x7fffad96feb4,1434543,0,0x0,8
tick,0x7fffad96feb4,1436228,0,0x0,8
tick,0x7fffad96feb4,1438333,0,0x0,8
tick,0x7fffad96feb4,1440266,0,0x0,8
tick,0x7fffad96feb4,1442210,0,0x0,8
tick,0x7fffad96feb4,1444202,0,0x0,8
tick,0x7fffad96feb4,1446217,0,0x0,8
tick,0x7fffad96feb4,1448182,0,0x0,8
tick,0x7fffad96feb4,1450205,0,0x0,8
tick,0x7fffad96feb4,1452171,0,0x0,8
tick,0x7fffad96feb4,1454164,0,0x0,8
tick,0x7fffad96feb4,1456159,0,0x0,8
tick,0x7fffad96feb4,1458149,0,0x0,8
tick,0x7fffad96feb4,1460168,0,0x0,8
tick,0x7fffad96feb4,1462159,0,0x0,8
tick,0x7fffad96feb4,1464133,0,0x0,8
tick,0x7fffad96feb4,1466167,0,0x0,8
tick,0x7fffad96feb4,1468140,0,0x0,8
tick,0x7fffad96feb4,1470243,0,0x0,8
tick,0x7fffad96feb4,1474054,0,0x0,8
tick,0x7fffad96feb4,1475234,0,0x0,8
tick,0x7fffad96feb4,1477129,0,0x0,8
tick,0x7fffad96feb4,1479101,0,0x0,8
tick,0x7fffad96feb4,1481082,0,0x0,8
tick,0x7fffad96feb4,1483105,0,0x0,8
tick,0x7fffad96feb4,1485093,0,0x0,8
tick,0x7fffad96feb4,1487274,0,0x0,8
tick,0x7fffad96feb4,1489255,0,0x0,8
tick,0x7fffad96feb4,1491078,0,0x0,8
tick,0x7fffad96feb4,1493092,0,0x0,8
tick,0x7fffad96feb4,1495065,0,0x0,8
tick,0x7fffad96feb4,1496415,0,0x0,8
tick,0x7fffad96feb4,1498520,0,0x0,8
tick,0x7fffad96feb4,1500402,0,0x0,8
tick,0x7fffad96feb4,1502393,0,0x0,8
tick,0x7fffad96feb4,1509671,0,0x0,8
tick,0x7fffad96feb4,1511130,0,0x0,8
tick,0x7fffad96feb4,1512704,0,0x0,8
tick,0x7fffad96feb4,1514399,0,0x0,8
tick,0x7fffad96feb4,1519663,0,0x0,8
tick,0x7fffad96feb4,1522561,0,0x0,8
tick,0x7fffad96feb4,1523342,0,0x0,8
tick,0x7fffad96feb4,1525335,0,0x0,8
tick,0x7fffad96feb4,1527327,0,0x0,8
tick,0x7fffad96feb4,1529330,0,0x0,8
tick,0x7fffad96feb4,1531333,0,0x0,8
tick,0x7fffad96feb4,1533340,0,0x0,8
tick,0x7fffad96feb4,1535307,0,0x0,8
tick,0x7fffad96feb4,1537310,0,0x0,8
tick,0x7fffad96feb4,1539304,0,0x0,8
tick,0x7fffad96feb4,1541309,0,0x0,8
tick,0x7fffad96feb4,1543288,0,0x0,8
tick,0x7fffad96feb4,1545304,0,0x0,8
tick,0x7fffad96feb4,1547294,0,0x0,8
tick,0x7fffad96feb4,1549274,0,0x0,8
tick,0x7fffad96feb4,1552666,0,0x0,8
tick,0x7fffad96feb4,1555939,0,0x0,8
tick,0x7fffad96feb4,1557790,0,0x0,8
tick,0x7fffad96feb4,1559278,0,0x0,8
tick,0x7fffad96feb4,1561341,0,0x0,8
tick,0x7fffad96feb4,1563243,0,0x0,8
tick,0x7fffad96feb4,1565235,0,0x0,8
tick,0x7fffad96feb4,1567222,0,0x0,8
tick,0x7fffad96feb4,1569232,0,0x0,8
tick,0x7fffad96feb4,1572142,0,0x0,8
tick,0x7fffad96feb4,1573639,0,0x0,8
tick,0x7fffad96feb4,1575257,0,0x0,8
tick,0x7fffad96feb4,1577202,0,0x0,8
tick,0x7fffad96feb4,1579190,0,0x0,8
tick,0x7fffad96feb4,1581177,0,0x0,8
tick,0x7fffad96feb4,1583185,0,0x0,8
tick,0x7fffad96feb4,1585269,0,0x0,8
tick,0x7fffad96feb4,1587320,0,0x0,8
tick,0x7fffad96feb4,1589209,0,0x0,8
tick,0x7fffad96feb4,1591159,0,0x0,8
tick,0x7fffad96feb4,1593385,0,0x0,8
tick,0x7fffad96feb4,1595246,0,0x0,8
tick,0x7fffad96feb4,1597235,0,0x0,8
tick,0x7fffad96feb4,1599260,0,0x0,8
tick,0x7fffad96feb4,1601195,0,0x0,8
tick,0x7fffad96feb4,1603183,0,0x0,8
tick,0x7fffad96feb4,1608237,0,0x0,8
tick,0x7fffad96feb4,1610792,0,0x0,8
tick,0x7fffad96feb4,1612130,0,0x0,8
tick,0x7fffad96feb4,1614178,0,0x0,8
tick,0x7fffad96feb4,1616214,0,0x0,8
tick,0x7fffad96feb4,1618127,0,0x0,8
tick,0x7fffad96feb4,1620146,0,0x0,8
tick,0x7fffad96feb4,1623135,0,0x0,8
tick,0x7fffad96feb4,1624327,0,0x0,8
tick,0x7fffad96feb4,1626259,0,0x0,8
tick,0x7fffad96feb4,1628243,0,0x0,8
tick,0x7fffad96feb4,1630190,0,0x0,8
tick,0x7fffad96feb4,1632164,0,0x0,8
tick,0x7fffad96feb4,1634162,0,0x0,8
tick,0x7fffad96feb4,1636598,0,0x0,8
tick,0x7fffad96feb4,1641795,0,0x0,8
tick,0x7fffad96feb4,1642666,0,0x0,8
tick,0x7fffad96feb4,1644227,0,0x0,8
tick,0x7fffad96feb4,1646127,0,0x0,8
tick,0x7fffad96feb4,1648020,0,0x0,8
tick,0x7fffad96feb4,1650026,0,0x0,8
tick,0x7fffad96feb4,1652072,0,0x0,8
tick,0x7fffad96feb4,1653996,0,0x0,8
tick,0x7fffad96feb4,1656099,0,0x0,8
tick,0x7fffad96feb4,1658074,0,0x0,8
tick,0x7fffad96feb4,1660087,0,0x0,8
tick,0x7fffad96feb4,1662064,0,0x0,8
tick,0x7fffad96feb4,1664294,0,0x0,8
tick,0x7fffad96feb4,1666803,0,0x0,8
tick,0x7fffad96feb4,1668146,0,0x0,8
tick,0x7fffad96feb4,1670077,0,0x0,8
tick,0x7fffad96feb4,1673509,0,0x0,8
tick,0x7fffad96feb4,1675014,0,0x0,8
tick,0x7fffad96feb4,1676067,0,0x0,8
tick,0x7fffad96feb4,1678024,0,0x0,8
tick,0x7fffad96feb4,1679967,0,0x0,8
tick,0x7fffad96feb4,1682039,0,0x0,8
tick,0x7fffad96feb4,1683938,0,0x0,8
tick,0x7fffad96feb4,1685939,0,0x0,8
tick,0x7fffad96feb4,1688303,0,0x0,8
tick,0x7fffad96feb4,1690148,0,0x0,8
tick,0x7fffad96feb4,1691957,0,0x0,8
tick,0x7fffad96feb4,1694058,0,0x0,8
tick,0x7fffad96feb4,1696025,0,0x0,8
tick,0x7fffad96feb4,1697931,0,0x0,8
tick,0x7fffad96feb4,1699948,0,0x0,8
tick,0x7fffad96feb4,1701962,0,0x0,8
tick,0x7fffad96feb4,1703885,0,0x0,8
tick,0x7fffad96feb4,1706610,0,0x0,8
tick,0x7fffad96feb4,1707954,0,0x0,8
tick,0x7fffad96feb4,1710942,0,0x0,8
tick,0x7fffad96feb4,1712424,0,0x0,8
tick,0x7fffad96feb4,1713948,0,0x0,8
tick,0x7fffad96feb4,1715993,0,0x0,8
tick,0x7fffad96feb4,1718031,0,0x0,8
tick,0x7fffad96feb4,1719891,0,0x0,8
tick,0x7fffad96feb4,1722554,0,0x0,8
tick,0x7fffad96feb4,1723892,0,0x0,8
tick,0x7fffad96feb4,1725960,0,0x0,8
tick,0x7fffad96feb4,1727853,0,0x0,8
tick,0x7fffad96feb4,1729861,0,0x0,8
tick,0x7fffad96feb4,1731900,0,0x0,8
tick,0x7fffad96feb4,1733850,0,0x0,8
tick,0x7fffad96feb4,1735843,0,0x0,8
tick,0x7fffad96feb4,1739438,0,0x0,8
tick,0x7fffad96feb4,1740911,0,0x0,8
tick,0x7fffad96feb4,1742824,0,0x0,8
tick,0x7fffad96feb4,1744775,0,0x0,8
tick,0x7fffad96feb4,1746861,0,0x0,8
tick,0x7fffad96feb4,1748837,0,0x0,8
tick,0x7fffad96feb4,1750883,0,0x0,8
tick,0x7fffad96feb4,1752768,0,0x0,8
tick,0x7fffad96feb4,1758384,0,0x0,8
tick,0x7fffad96feb4,1761865,0,0x0,8
tick,0x7fffad96feb4,1763023,0,0x0,8
tick,0x7fffad96feb4,1765014,0,0x0,8
tick,0x7fffad96feb4,1766721,0,0x0,8
tick,0x7fffad96feb4,1768750,0,0x0,8
tick,0x7fffad96feb4,1772536,0,0x0,8
tick,0x7fffad96feb4,1773675,0,0x0,8
tick,0x7fffad96feb4,1775817,0,0x0,8
tick,0x7fffad96feb4,1777661,0,0x0,8
tick,0x7fffad96feb4,1779842,0,0x0,8
tick,0x7fffad96feb4,1781822,0,0x0,8
tick,0x7fffad96feb4,1783745,0,0x0,8
tick,0x7fffad96feb4,1785637,0,0x0,8
tick,0x7fffad96feb4,1790812,0,0x0,8
tick,0x7fffad96feb4,1791945,0,0x0,8
tick,0x7fffad96feb4,1793191,0,0x0,8
tick,0x7fffad96feb4,1794834,0,0x0,8
tick,0x7fffad96feb4,1796709,0,0x0,8
tick,0x7fffad96feb4,1798882,0,0x0,8
tick,0x7fffad96feb4,1800716,0,0x0,8
tick,0x7fffad96feb4,1802611,0,0x0,8
tick,0x7fffad96feb4,1807909,0,0x0,8
tick,0x7fffad96feb4,1809568,0,0x0,8
tick,0x7fffad96feb4,1811574,0,0x0,8
tick,0x7fffad96feb4,1813560,0,0x0,8
tick,0x7fffad96feb4,1815549,0,0x0,8
tick,0x7fffad96feb4,1817572,0,0x0,8
tick,0x7fffad96feb4,1819538,0,0x0,8
tick,0x7fffad96feb4,1821923,0,0x0,8
tick,0x7fffad96feb4,1823529,0,0x0,8
tick,0x7fffad96feb4,1825923,0,0x0,8
tick,0x7fffad96feb4,1827534,0,0x0,8
tick,0x7fffad96feb4,1829657,0,0x0,8
tick,0x7fffad96feb4,1831509,0,0x0,8
tick,0x7fffad96feb4,1833511,0,0x0,8
tick,0x7fffad96feb4,1836403,0,0x0,8
tick,0x7fffad96feb4,1838900,0,0x0,8
tick,0x7fffad96feb4,1839946,0,0x0,8
tick,0x7fffad96feb4,1841579,0,0x0,8
tick,0x7fffad96feb4,1843531,0,0x0,8
tick,0x7fffad96feb4,1846054,0,0x0,8
tick,0x7fffad96feb4,1847669,0,0x0,8
tick,0x7fffad96feb4,1849459,0,0x0,8
tick,0x7fffad96feb4,1851697,0,0x0,8
tick,0x7fffad96feb4,1853570,0,0x0,8
tick,0x7fffad96feb4,1856029,0,0x0,8
tick,0x7fffad96feb4,1857965,0,0x0,8
tick,0x7fffad96feb4,1859943,0,0x0,8
tick,0x7fffad96feb4,1861579,0,0x0,8
tick,0x7fffad96feb4,1863697,0,0x0,8
tick,0x7fffad96feb4,1865444,0,0x0,8
tick,0x7fffad96feb4,1867431,0,0x0,8
tick,0x7fffad96feb4,1869439,0,0x0,8
tick,0x7fffad96feb4,1872804,0,0x0,8
tick,0x7fffad96feb4,1873573,0,0x0,8
tick,0x7fffad96feb4,1878193,0,0x0,8
tick,0x7fffad96feb4,1879474,0,0x0,8
tick,0x7fffad96feb4,1881394,0,0x0,8
tick,0x7fffad96feb4,1883425,0,0x0,8
tick,0x7fffad96feb4,1885407,0,0x0,8
tick,0x7fffad96feb4,1889033,0,0x0,8
tick,0x7fffad96feb4,1890926,0,0x0,8
tick,0x7fffad96feb4,1893049,0,0x0,8
tick,0x7fffad96feb4,1894536,0,0x0,8
tick,0x7fffad96feb4,1896372,0,0x0,8
tick,0x7fffad96feb4,1897855,0,0x0,8
tick,0x7fffad96feb4,1899865,0,0x0,8
tick,0x7fffad96feb4,1901867,0,0x0,8
tick,0x7fffad96feb4,1903820,0,0x0,8
tick,0x7fffad96feb4,1905991,0,0x0,8
tick,0x7fffad96feb4,1907897,0,0x0,8
tick,0x7fffad96feb4,1910730,0,0x0,8
tick,0x7fffad96feb4,1911804,0,0x0,8
tick,0x7fffad96feb4,1913784,0,0x0,8
tick,0x7fffad96feb4,1915956,0,0x0,8
tick,0x7fffad96feb4,1917875,0,0x0,8
tick,0x7fffad96feb4,1919816,0,0x0,8
tick,0x7fffad96feb4,1922732,0,0x0,8
tick,0x7fffad96feb4,1923927,0,0x0,8
tick,0x7fffad96feb4,1926259,0,0x0,8
tick,0x7fffad96feb4,1927774,0,0x0,8
tick,0x7fffad96feb4,1929734,0,0x0,8
tick,0x7fffad96feb4,1931723,0,0x0,8
tick,0x7fffad96feb4,1933726,0,0x0,8
tick,0x7fffad96feb4,1935739,0,0x0,8
tick,0x7fffad96feb4,1937841,0,0x0,8
tick,0x7fffad96feb4,1939981,0,0x0,8
tick,0x7fffad96feb4,1942693,0,0x0,8
tick,0x7fffad96feb4,1943728,0,0x0,8
tick,0x7fffad96feb4,1945730,0,0x0,8
tick,0x7fffad96feb4,1947738,0,0x0,8
tick,0x7fffad96feb4,1949867,0,0x0,8
tick,0x7fffad96feb4,1951702,0,0x0,8
tick,0x7fffad96feb4,1953696,0,0x0,8
tick,0x7fffad96feb4,1957841,0,0x0,8
tick,0x7fffad96feb4,1959833,0,0x0,8
tick,0x7fffad96feb4,1961687,0,0x0,8
tick,0x7fffad96feb4,1963688,0,0x0,8
tick,0x7fffad96feb4,1965663,0,0x0,8
tick,0x7fffad96feb4,1967651,0,0x0,8
tick,0x7fffad96feb4,1969643,0,0x0,8
tick,0x7fffad96feb4,1972118,0,0x0,8
tick,0x7fffad96feb4,1973739,0,0x0,8
tick,0x7fffad96feb4,1975757,0,0x0,8
tick,0x7fffad96feb4,1977635,0,0x0,8
tick,0x7fffad96feb4,1979660,0,0x0,8
tick,0x7fffad96feb4,1981638,0,0x0,8
tick,0x7fffad96feb4,1983724,0,0x0,8
tick,0x7fffad96feb4,1985755,0,0x0,8
tick,0x7fffad96feb4,1987898,0,0x0,8
tick,0x7fffad96feb4,1989798,0,0x0,8
tick,0x7fffad96feb4,1991603,0,0x0,8
tick,0x7fffad96feb4,1993659,0,0x0,8
tick,0x7fffad96feb4,1995593,0,0x0,8
tick,0x7fffad96feb4,1997705,0,0x0,8
tick,0x7fffad96feb4,1999561,0,0x0,8
tick,0x7fffad96feb4,2001632,0,0x0,8
tick,0x7fffad96feb4,2003651,0,0x0,8
tick,0x7fffad96feb4,2005609,0,0x0,8
tick,0x7fffad96feb4,2007544,0,0x0,8
tick,0x7fffad96feb4,2009591,0,0x0,8
tick,0x7fffad96feb4,2011531,0,0x0,8
tick,0x7fffad96feb4,2013746,0,0x0,8
tick,0x7fffad96feb4,2015534,0,0x0,8
tick,0x7fffad96feb4,2017522,0,0x0,8
tick,0x7fffad96feb4,2019529,0,0x0,8
tick,0x7fffad96feb4,2021567,0,0x0,8
tick,0x7fffad96feb4,2023523,0,0x0,8
tick,0x7fffad96feb4,2025519,0,0x0,8
tick,0x7fffad96feb4,2027622,0,0x0,8
tick,0x7fffad96feb4,2029493,0,0x0,8
tick,0x7fffad96feb4,2031467,0,0x0,8
tick,0x7fffad96feb4,2033468,0,0x0,8
tick,0x7fffad96feb4,2035694,0,0x0,8
tick,0x7fffad96feb4,2039413,0,0x0,8
tick,0x7fffad96feb4,2042346,0,0x0,8
tick,0x7fffad96feb4,2043576,0,0x0,8
tick,0x7fffad96feb4,2045584,0,0x0,8
tick,0x7fffad96feb4,2047722,0,0x0,8
tick,0x7fffad96feb4,2049582,0,0x0,8
tick,0x7fffad96feb4,2051568,0,0x0,8
tick,0x7fffad96feb4,2053535,0,0x0,8
tick,0x7fffad96feb4,2056549,0,0x0,8
tick,0x7fffad96feb4,2058720,0,0x0,8
tick,0x7fffad96feb4,2060602,0,0x0,8
tick,0x7fffad96feb4,2062461,0,0x0,8
tick,0x7fffad96feb4,2064410,0,0x0,8
tick,0x7fffad96feb4,2066551,0,0x0,8
tick,0x7fffad96feb4,2068438,0,0x0,8
tick,0x7fffad96feb4,2070475,0,0x0,8
tick,0x7fffad96feb4,2073170,0,0x0,8
tick,0x7fffad96feb4,2074405,0,0x0,8
tick,0x7fffad96feb4,2076390,0,0x0,8
tick,0x7fffad96feb4,2078733,0,0x0,8
tick,0x7fffad96feb4,2080493,0,0x0,8
tick,0x7fffad96feb4,2082374,0,0x0,8
tick,0x7fffad96feb4,2084355,0,0x0,8
tick,0x7fffad96feb4,2086346,0,0x0,8
tick,0x7fffad96feb4,2088453,0,0x0,8
tick,0x7fffad96feb4,2090410,0,0x0,8
tick,0x7fffad96feb4,2092326,0,0x0,8
tick,0x7fffad96feb4,2094302,0,0x0,8
tick,0x7fffad96feb4,2096321,0,0x0,8
tick,0x7fffad96feb4,2098290,0,0x0,8
tick,0x7fffad96feb4,2100293,0,0x0,8
tick,0x7fffad96feb4,2102324,0,0x0,8
tick,0x7fffad96feb4,2104684,0,0x0,8
tick,0x7fffad96feb4,2106593,0,0x0,8
tick,0x7fffad96feb4,2108272,0,0x0,8
tick,0x7fffad96feb4,2110313,0,0x0,8
tick,0x7fffad96feb4,2112283,0,0x0,8
tick,0x7fffad96feb4,2114249,0,0x0,8
tick,0x7fffad96feb4,2116254,0,0x0,8
tick,0x7fffad96feb4,2118237,0,0x0,8
tick,0x7fffad96feb4,2120240,0,0x0,8
tick,0x7fffad96feb4,2122421,0,0x0,8
tick,0x7fffad96feb4,2124366,0,0x0,8
tick,0x7fffad96feb4,2126233,0,0x0,8
tick,0x7fffad96feb4,2128211,0,0x0,8
tick,0x7fffad96feb4,2130216,0,0x0,8
tick,0x7fffad96feb4,2132249,0,0x0,8
tick,0x7fffad96feb4,2134208,0,0x0,8
tick,0x7fffad96feb4,2136188,0,0x0,8
tick,0x7fffad96feb4,2138409,0,0x0,8
tick,0x7fffad96feb4,2140191,0,0x0,8
tick,0x7fffad96feb4,2142196,0,0x0,8
tick,0x7fffad96feb4,2144175,0,0x0,8
tick,0x7fffad96feb4,2146192,0,0x0,8
tick,0x7fffad96feb4,2148169,0,0x0,8
tick,0x7fffad96feb4,2150195,0,0x0,8
tick,0x7fffad96feb4,2152152,0,0x0,8
tick,0x7fffad96feb4,2154436,0,0x0,8
tick,0x7fffad96feb4,2156165,0,0x0,8
tick,0x7fffad96feb4,2158147,0,0x0,8
tick,0x7fffad96feb4,2160138,0,0x0,8
tick,0x7fffad96feb4,2162124,0,0x0,8
tick,0x7fffad96feb4,2164110,0,0x0,8
tick,0x7fffad96feb4,2166231,0,0x0,8
tick,0x7fffad96feb4,2168119,0,0x0,8
tick,0x7fffad96feb4,2170107,0,0x0,8
tick,0x7fffad96feb4,2172264,0,0x0,8
tick,0x7fffad96feb4,2174133,0,0x0,8
tick,0x7fffad96feb4,2176089,0,0x0,8
tick,0x7fffad96feb4,2178091,0,0x0,8
tick,0x7fffad96feb4,2180074,0,0x0,8
tick,0x7fffad96feb4,2182067,0,0x0,8
tick,0x7fffad96feb4,2184091,0,0x0,8
tick,0x7fffad96feb4,2186245,0,0x0,8
tick,0x7fffad96feb4,2188201,0,0x0,8
tick,0x7fffad96feb4,2190089,0,0x0,8
tick,0x7fffad96feb4,2192090,0,0x0,8
tick,0x7fffad96feb4,2194060,0,0x0,8
tick,0x7fffad96feb4,2196057,0,0x0,8
tick,0x7fffad96feb4,2198027,0,0x0,8
tick,0x7fffad96feb4,2200034,0,0x0,8
tick,0x7fffad96feb4,2202030,0,0x0,8
tick,0x7fffad96feb4,2204456,0,0x0,8
tick,0x7fffad96feb4,2206844,0,0x0,8
tick,0x7fffad96feb4,2208016,0,0x0,8
tick,0x7fffad96feb4,2209991,0,0x0,8
tick,0x7fffad96feb4,2211991,0,0x0,8
tick,0x7fffad96feb4,2213974,0,0x0,8
tick,0x7fffad96feb4,2215978,0,0x0,8
tick,0x7fffad96feb4,2218075,0,0x0,8
tick,0x7fffad96feb4,2220162,0,0x0,8
tick,0x7fffad96feb4,2222892,0,0x0,8
tick,0x7fffad96feb4,2224250,0,0x0,8
tick,0x7fffad96feb4,2226246,0,0x0,8
tick,0x7fffad96feb4,2228038,0,0x0,8
tick,0x7fffad96feb4,2230057,0,0x0,8
tick,0x7fffad96feb4,2232055,0,0x0,8
tick,0x7fffad96feb4,2234043,0,0x0,8
tick,0x7fffad96feb4,2236197,0,0x0,8
tick,0x7fffad96feb4,2238637,0,0x0,8
tick,0x7fffad96feb4,2241774,0,0x0,8
tick,0x7fffad96feb4,2243146,0,0x0,8
tick,0x7fffad96feb4,2244249,0,0x0,8
tick,0x7fffad96feb4,2245964,0,0x0,8
tick,0x7fffad96feb4,2247957,0,0x0,8
tick,0x7fffad96feb4,2250047,0,0x0,8
tick,0x7fffad96feb4,2251928,0,0x0,8
tick,0x7fffad96feb4,2254896,0,0x0,8
tick,0x7fffad96feb4,2256480,0,0x0,8
tick,0x7fffad96feb4,2257926,0,0x0,8
tick,0x7fffad96feb4,2259891,0,0x0,8
tick,0x7fffad96feb4,2261879,0,0x0,8
tick,0x7fffad96feb4,2263867,0,0x0,8
tick,0x7fffad96feb4,2266065,0,0x0,8
tick,0x7fffad96feb4,2267960,0,0x0,8
tick,0x7fffad96feb4,2269860,0,0x0,8
tick,0x7fffad96feb4,2271933,0,0x0,8
tick,0x7fffad96feb4,2273986,0,0x0,8
tick,0x7fffad96feb4,2275851,0,0x0,8
tick,0x7fffad96feb4,2277890,0,0x0,8
tick,0x7fffad96feb4,2279883,0,0x0,8
tick,0x7fffad96feb4,2281873,0,0x0,8
tick,0x7fffad96feb4,2283900,0,0x0,8
tick,0x7fffad96feb4,2285912,0,0x0,8
tick,0x7fffad96feb4,2287838,0,0x0,8
tick,0x7fffad96feb4,2289841,0,0x0,8
tick,0x7fffad96feb4,2291805,0,0x0,8
tick,0x7fffad96feb4,2293788,0,0x0,8
tick,0x7fffad96feb4,2295842,0,0x0,8
tick,0x7fffad96feb4,2297826,0,0x0,8
tick,0x7fffad96feb4,2299832,0,0x0,8
tick,0x7fffad96feb4,2301789,0,0x0,8
tick,0x7fffad96feb4,2304551,0,0x0,8
tick,0x7fffad96feb4,2305796,0,0x0,8
tick,0x7fffad96feb4,2307776,0,0x0,8
tick,0x7fffad96feb4,2310018,0,0x0,8
tick,0x7fffad96feb4,2311740,0,0x0,8
tick,0x7fffad96feb4,2313724,0,0x0,8
tick,0x7fffad96feb4,2315808,0,0x0,8
tick,0x7fffad96feb4,2317710,0,0x0,8
tick,0x7fffad96feb4,2319762,0,0x0,8
tick,0x7fffad96feb4,2321917,0,0x0,8
tick,0x7fffad96feb4,2323825,0,0x0,8
tick,0x7fffad96feb4,2325825,0,0x0,8
tick,0x7fffad96feb4,2327819,0,0x0,8
tick,0x7fffad96feb4,2329782,0,0x0,8
tick,0x7fffad96feb4,2332945,0,0x0,8
tick,0x7fffad96feb4,2335537,0,0x0,8
tick,0x7fffad96feb4,2336782,0,0x0,8
tick,0x7fffad96feb4,2342109,0,0x0,8
tick,0x7fffad96feb4,2343756,0,0x0,8
tick,0x7fffad96feb4,2345912,0,0x0,8
tick,0x7fffad96feb4,2347663,0,0x0,8
tick,0x7fffad96feb4,2349644,0,0x0,8
tick,0x7fffad96feb4,2351657,0,0x0,8
tick,0x7fffad96feb4,2355132,0,0x0,8
tick,0x7fffad96feb4,2355634,0,0x0,8
tick,0x7fffad96feb4,2357623,0,0x0,8
tick,0x7fffad96feb4,2359585,0,0x0,8
tick,0x7fffad96feb4,2361586,0,0x0,8
tick,0x7fffad96feb4,2363580,0,0x0,8
tick,0x7fffad96feb4,2365586,0,0x0,8
tick,0x7fffad96feb4,2367574,0,0x0,8
tick,0x7fffad96feb4,2369562,0,0x0,8
tick,0x7fffad96feb4,2371588,0,0x0,8
tick,0x7fffad96feb4,2373582,0,0x0,8
tick,0x7fffad96feb4,2375577,0,0x0,8
tick,0x7fffad96feb4,2377534,0,0x0,8
tick,0x7fffad96feb4,2379546,0,0x0,8
tick,0x7fffad96feb4,2381522,0,0x0,8
tick,0x7fffad96feb4,2383522,0,0x0,8
tick,0x7fffad96feb4,2385520,0,0x0,8
tick,0x7fffad96feb4,2387594,0,0x0,8
tick,0x7fffad96feb4,2389511,0,0x0,8
tick,0x7fffad96feb4,2391521,0,0x0,8
tick,0x7fffad96feb4,2393499,0,0x0,8
tick,0x7fffad96feb4,2395573,0,0x0,8
tick,0x7fffad96feb4,2397512,0,0x0,8
tick,0x7fffad96feb4,2399550,0,0x0,8
tick,0x7fffad96feb4,2401490,0,0x0,8
tick,0x7fffad96feb4,2403463,0,0x0,8
tick,0x7fffad96feb4,2405823,0,0x0,8
tick,0x7fffad96feb4,2407478,0,0x0,8
tick,0x7fffad96feb4,2409463,0,0x0,8
tick,0x7fffad96feb4,2411481,0,0x0,8
tick,0x7fffad96feb4,2413444,0,0x0,8
tick,0x7fffad96feb4,2415455,0,0x0,8
tick,0x7fffad96feb4,2417523,0,0x0,8
tick,0x7fffad96feb4,2419424,0,0x0,8
tick,0x7fffad96feb4,2421691,0,0x0,8
tick,0x7fffad96feb4,2423453,0,0x0,8
tick,0x7fffad96feb4,2425401,0,0x0,8
tick,0x7fffad96feb4,2427404,0,0x0,8
tick,0x7fffad96feb4,2429429,0,0x0,8
tick,0x7fffad96feb4,2431418,0,0x0,8
tick,0x7fffad96feb4,2433422,0,0x0,8
tick,0x7fffad96feb4,2435396,0,0x0,8
tick,0x7fffad96feb4,2437406,0,0x0,8
tick,0x7fffad96feb4,2439398,0,0x0,8
tick,0x7fffad96feb4,2441373,0,0x0,8
tick,0x7fffad96feb4,2443356,0,0x0,8
tick,0x7fffad96feb4,2445369,0,0x0,8
tick,0x7fffad96feb4,2447357,0,0x0,8
tick,0x7fffad96feb4,2449384,0,0x0,8
tick,0x7fffad96feb4,2451366,0,0x0,8
tick,0x7fffad96feb4,2453396,0,0x0,8
tick,0x7fffad96feb4,2455740,0,0x0,8
tick,0x7fffad96feb4,2457382,0,0x0,8
tick,0x7fffad96feb4,2459399,0,0x0,8
tick,0x7fffad96feb4,2461342,0,0x0,8
tick,0x7fffad96feb4,2463350,0,0x0,8
tick,0x7fffad96feb4,2465300,0,0x0,8
tick,0x7fffad96feb4,2467305,0,0x0,8
tick,0x7fffad96feb4,2469309,0,0x0,8
tick,0x7fffad96feb4,2473011,0,0x0,8
tick,0x7fffad96feb4,2475095,0,0x0,8
tick,0x7fffad96feb4,2476297,0,0x0,8
tick,0x7fffad96feb4,2478298,0,0x0,8
tick,0x7fffad96feb4,2480276,0,0x0,8
tick,0x7fffad96feb4,2482253,0,0x0,8
tick,0x7fffad96feb4,2484258,0,0x0,8
tick,0x7fffad96feb4,2486259,0,0x0,8
tick,0x7fffad96feb4,2488578,0,0x0,8
tick,0x7fffad96feb4,2490392,0,0x0,8
tick,0x7fffad96feb4,2492246,0,0x0,8
tick,0x7fffad96feb4,2494225,0,0x0,8
tick,0x7fffad96feb4,2496270,0,0x0,8
tick,0x7fffad96feb4,2498258,0,0x0,8
tick,0x7fffad96feb4,2500219,0,0x0,8
tick,0x7fffad96feb4,2502198,0,0x0,8
tick,0x7fffad96feb4,2504326,0,0x0,8
tick,0x7fffad96feb4,2506210,0,0x0,8
tick,0x7fffad96feb4,2508210,0,0x0,8
tick,0x7fffad96feb4,2510213,0,0x0,8
tick,0x7fffad96feb4,2512178,0,0x0,8
tick,0x7fffad96feb4,2514172,0,0x0,8
tick,0x7fffad96feb4,2516168,0,0x0,8
tick,0x7fffad96feb4,2518154,0,0x0,8
tick,0x7fffad96feb4,2520603,0,0x0,8
tick,0x7fffad96feb4,2522242,0,0x0,8
tick,0x7fffad96feb4,2524155,0,0x0,8
tick,0x7fffad96feb4,2526153,0,0x0,8
tick,0x7fffad96feb4,2528132,0,0x0,8
tick,0x7fffad96feb4,2530145,0,0x0,8
tick,0x7fffad96feb4,2532129,0,0x0,8
tick,0x7fffad96feb4,2534122,0,0x0,8
tick,0x7fffad96feb4,2536135,0,0x0,8
tick,0x7fffad96feb4,2538341,0,0x0,8
tick,0x7fffad96feb4,2540238,0,0x0,8
tick,0x7fffad96feb4,2542113,0,0x0,8
tick,0x7fffad96feb4,2544111,0,0x0,8
tick,0x7fffad96feb4,2546082,0,0x0,8
tick,0x7fffad96feb4,2548082,0,0x0,8
tick,0x7fffad96feb4,2550126,0,0x0,8
tick,0x7fffad96feb4,2552378,0,0x0,8
tick,0x7fffad96feb4,2554215,0,0x0,8
tick,0x7fffad96feb4,2556095,0,0x0,8
tick,0x7fffad96feb4,2558099,0,0x0,8
tick,0x7fffad96feb4,2560085,0,0x0,8
tick,0x7fffad96feb4,2562117,0,0x0,8
tick,0x7fffad96feb4,2564075,0,0x0,8
tick,0x7fffad96feb4,2566060,0,0x0,8
tick,0x7fffad96feb4,2568031,0,0x0,8
tick,0x7fffad96feb4,2570032,0,0x0,8
tick,0x7fffad96feb4,2572092,0,0x0,8
tick,0x7fffad96feb4,2574050,0,0x0,8
tick,0x7fffad96feb4,2576045,0,0x0,8
tick,0x7fffad96feb4,2578051,0,0x0,8
tick,0x7fffad96feb4,2580041,0,0x0,8
tick,0x7fffad96feb4,2582051,0,0x0,8
tick,0x7fffad96feb4,2584042,0,0x0,8
tick,0x7fffad96feb4,2585987,0,0x0,8
tick,0x7fffad96feb4,2588275,0,0x0,8
tick,0x7fffad96feb4,2590027,0,0x0,8
tick,0x7fffad96feb4,2592007,0,0x0,8
tick,0x7fffad96feb4,2593998,0,0x0,8
tick,0x7fffad96feb4,2595968,0,0x0,8
tick,0x7fffad96feb4,2597954,0,0x0,8
tick,0x7fffad96feb4,2599987,0,0x0,8
tick,0x7fffad96feb4,2601947,0,0x0,8
tick,0x7fffad96feb4,2603438,0,0x0,8
tick,0x7fffad96feb4,2605372,0,0x0,8
tick,0x7fffad96feb4,2607113,0,0x0,8
tick,0x7fffad96feb4,2609186,0,0x0,8
tick,0x7fffad96feb4,2611226,0,0x0,8
tick,0x7fffad96feb4,2613086,0,0x0,8
tick,0x7fffad96feb4,2615096,0,0x0,8
tick,0x7fffad96feb4,2617001,0,0x0,8
tick,0x7fffad96feb4,2619087,0,0x0,8
tick,0x7fffad96feb4,2622199,0,0x0,8
tick,0x7fffad96feb4,2622928,0,0x0,8
tick,0x7fffad96feb4,2625503,0,0x0,8
tick,0x7fffad96feb4,2627211,0,0x0,8
tick,0x7fffad96feb4,2629071,0,0x0,8
tick,0x7fffad96feb4,2630898,0,0x0,8
tick,0x7fffad96feb4,2633102,0,0x0,8
tick,0x7fffad96feb4,2635073,0,0x0,8
tick,0x7fffad96feb4,2638409,0,0x0,8
tick,0x7fffad96feb4,2639094,0,0x0,8
tick,0x7fffad96feb4,2641069,0,0x0,8
tick,0x7fffad96feb4,2642943,0,0x0,8
tick,0x7fffad96feb4,2645068,0,0x0,8
tick,0x7fffad96feb4,2646959,0,0x0,8
tick,0x7fffad96feb4,2648984,0,0x0,8
tick,0x7fffad96feb4,2651024,0,0x0,8
tick,0x7fffad96feb4,2652991,0,0x0,8
tick,0x7fffad96feb4,2657170,0,0x0,8
tick,0x7fffad96feb4,2658879,0,0x0,8
tick,0x7fffad96feb4,2660843,0,0x0,8
tick,0x7fffad96feb4,2662856,0,0x0,8
tick,0x7fffad96feb4,2664956,0,0x0,8
tick,0x7fffad96feb4,2666927,0,0x0,8
tick,0x7fffad96feb4,2668837,0,0x0,8
tick,0x7fffad96feb4,2671808,0,0x0,8
tick,0x7fffad96feb4,2673816,0,0x0,8
tick,0x7fffad96feb4,2675925,0,0x0,8
tick,0x7fffad96feb4,2678041,0,0x0,8
tick,0x7fffad96feb4,2680038,0,0x0,8
tick,0x7fffad96feb4,2681790,0,0x0,8
tick,0x7fffad96feb4,2684080,0,0x0,8
tick,0x7fffad96feb4,2685741,0,0x0,8
tick,0x7fffad96feb4,2688534,0,0x0,8
tick,0x7fffad96feb4,2689928,0,0x0,8
tick,0x7fffad96feb4,2691744,0,0x0,8
tick,0x7fffad96feb4,2693051,0,0x0,8
tick,0x7fffad96feb4,2695055,0,0x0,8
tick,0x7fffad96feb4,2696837,0,0x0,8
tick,0x7fffad96feb4,2698014,0,0x0,8
tick,0x7fffad96feb4,2699876,0,0x0,8
tick,0x7fffad96feb4,2701064,0,0x0,8
tick,0x7fffad96feb4,2702839,0,0x0,8
tick,0x7fffad96feb4,2704742,0,0x0,8
tick,0x7fffad96feb4,2705852,0,0x0,8
tick,0x7fffad96feb4,2708146,0,0x0,8
tick,0x7fffad96feb4,2710027,0,0x0,8
tick,0x7fffad96feb4,2711701,0,0x0,8
tick,0x7fffad96feb4,2714410,0,0x0,8
tick,0x7fffad96feb4,2715692,0,0x0,8
tick,0x7fffad96feb4,2717665,0,0x0,8
tick,0x7fffad96feb4,2719655,0,0x0,8
tick,0x7fffad96feb4,2721340,0,0x0,8
tick,0x7fffad96feb4,2723365,0,0x0,8
tick,0x7fffad96feb4,2724643,0,0x0,8
tick,0x7fffad96feb4,2726621,0,0x0,8
tick,0x7fffad96feb4,2728473,0,0x0,8
tick,0x7fffad96feb4,2730297,0,0x0,8
tick,0x7fffad96feb4,2731740,0,0x0,8
tick,0x7fffad96feb4,2733297,0,0x0,8
tick,0x7fffad96feb4,2735278,0,0x0,8
tick,0x7fffad96feb4,2737545,0,0x0,8
tick,0x7fffad96feb4,2739279,0,0x0,8
tick,0x7fffad96feb4,2741283,0,0x0,8
tick,0x7fffad96feb4,2743260,0,0x0,8
tick,0x7fffad96feb4,2745318,0,0x0,8
tick,0x7fffad96feb4,2747297,0,0x0,8
tick,0x7fffad96feb4,2749314,0,0x0,8
tick,0x7fffad96feb4,2751302,0,0x0,8
tick,0x7fffad96feb4,2753738,0,0x0,8
tick,0x7fffad96feb4,2755300,0,0x0,8
tick,0x7fffad96feb4,2757281,0,0x0,8
tick,0x7fffad96feb4,2759573,0,0x0,8
tick,0x7fffad96feb4,2761554,0,0x0,8
tick,0x7fffad96feb4,2763546,0,0x0,8
tick,0x7fffad96feb4,2765544,0,0x0,8
tick,0x7fffad96feb4,2766638,0,0x0,8
tick,0x7fffad96feb4,2768618,0,0x0,8
tick,0x7fffad96feb4,2771015,0,0x0,8
tick,0x7fffad96feb4,2772180,0,0x0,8
tick,0x7fffad96feb4,2773574,0,0x0,8
tick,0x7fffad96feb4,2775628,0,0x0,8
tick,0x7fffad96feb4,2777529,0,0x0,8
tick,0x7fffad96feb4,2779516,0,0x0,8
tick,0x7fffad96feb4,2781549,0,0x0,8
tick,0x7fffad96feb4,2783510,0,0x0,8
tick,0x7fffad96feb4,2785620,0,0x0,8
tick,0x7fffad96feb4,2787216,0,0x0,8
tick,0x7fffad96feb4,2789184,0,0x0,8
tick,0x7fffad96feb4,2791415,0,0x0,8
tick,0x7fffad96feb4,2793390,0,0x0,8
tick,0x7fffad96feb4,2795589,0,0x0,8
tick,0x7fffad96feb4,2797552,0,0x0,8
tick,0x7fffad96feb4,2799191,0,0x0,8
tick,0x7fffad96feb4,2800479,0,0x0,8
tick,0x7fffad96feb4,2802464,0,0x0,8
tick,0x7fffad96feb4,2803841,0,0x0,8
tick,0x7fffad96feb4,2805183,0,0x0,8
tick,0x7fffad96feb4,2806374,0,0x0,8
tick,0x7fffad96feb4,2807466,0,0x0,8
tick,0x7fffad96feb4,2809462,0,0x0,8
tick,0x7fffad96feb4,2811532,0,0x0,8
tick,0x7fffad96feb4,2813646,0,0x0,8
tick,0x7fffad96feb4,2815432,0,0x0,8
tick,0x7fffad96feb4,2817086,0,0x0,8
tick,0x7fffad96feb4,2818466,0,0x0,8
tick,0x7fffad96feb4,2820579,0,0x0,8
tick,0x7fffad96feb4,2822424,0,0x0,8
tick,0x7fffad96feb4,2824375,0,0x0,8
tick,0x7fffad96feb4,2826047,0,0x0,8
tick,0x7fffad96feb4,2827419,0,0x0,8
tick,0x7fffad96feb4,2829088,0,0x0,8
tick,0x7fffad96feb4,2830398,0,0x0,8
tick,0x7fffad96feb4,2832067,0,0x0,8
tick,0x7fffad96feb4,2833404,0,0x0,8
tick,0x7fffad96feb4,2835115,0,0x0,8
tick,0x7fffad96feb4,2836404,0,0x0,8
tick,0x7fffad96feb4,2838058,0,0x0,8
tick,0x7fffad96feb4,2840351,0,0x0,8
tick,0x7fffad96feb4,2842320,0,0x0,8
tick,0x7fffad96feb4,2844143,0,0x0,8
tick,0x7fffad96feb4,2846420,0,0x0,8
tick,0x7fffad96feb4,2848316,0,0x0,8
tick,0x7fffad96feb4,2850006,0,0x0,8
tick,0x7fffad96feb4,2852400,0,0x0,8
tick,0x7fffad96feb4,2854466,0,0x0,8
tick,0x7fffad96feb4,2856035,0,0x0,8
tick,0x7fffad96feb4,2857361,0,0x0,8
tick,0x7fffad96feb4,2858999,0,0x0,8
tick,0x7fffad96feb4,2860295,0,0x0,8
tick,0x7fffad96feb4,2862195,0,0x0,8
tick,0x7fffad96feb4,2864242,0,0x0,8
tick,0x7fffad96feb4,2866024,0,0x0,8
tick,0x7fffad96feb4,2867251,0,0x0,8
tick,0x7fffad96feb4,2869274,0,0x0,8
tick,0x7fffad96feb4,2871853,0,0x0,8
tick,0x7fffad96feb4,2873124,0,0x0,8
tick,0x7fffad96feb4,2875249,0,0x0,8
tick,0x7fffad96feb4,2876975,0,0x0,8
tick,0x7fffad96feb4,2878258,0,0x0,8
tick,0x7fffad96feb4,2879950,0,0x0,8
tick,0x7fffad96feb4,2881212,0,0x0,8
tick,0x7fffad96feb4,2883136,0,0x0,8
tick,0x7fffad96feb4,2884235,0,0x0,8
tick,0x7fffad96feb4,2885937,0,0x0,8
tick,0x7fffad96feb4,2888001,0,0x0,8
tick,0x7fffad96feb4,2889926,0,0x0,8
tick,0x7fffad96feb4,2891900,0,0x0,8
tick,0x7fffad96feb4,2893233,0,0x0,8
tick,0x7fffad96feb4,2894945,0,0x0,8
tick,0x7fffad96feb4,2896221,0,0x0,8
tick,0x7fffad96feb4,2897878,0,0x0,8
tick,0x7fffad96feb4,2899245,0,0x0,8
tick,0x7fffad96feb4,2900878,0,0x0,8
tick,0x7fffad96feb4,2902239,0,0x0,8
tick,0x7fffad96feb4,2904270,0,0x0,8
tick,0x7fffad96feb4,2906066,0,0x0,8
tick,0x7fffad96feb4,2907885,0,0x0,8
tick,0x7fffad96feb4,2909146,0,0x0,8
tick,0x7fffad96feb4,2911108,0,0x0,8
tick,0x7fffad96feb4,2912861,0,0x0,8
tick,0x7fffad96feb4,2914171,0,0x0,8
tick,0x7fffad96feb4,2915840,0,0x0,8
tick,0x7fffad96feb4,2918214,0,0x0,8
tick,0x7fffad96feb4,2921036,0,0x0,8
tick,0x7fffad96feb4,2921929,0,0x0,8
tick,0x7fffad96feb4,2923044,0,0x0,8
tick,0x7fffad96feb4,2924801,0,0x0,8
tick,0x7fffad96feb4,2926113,0,0x0,8
tick,0x7fffad96feb4,2927821,0,0x0,8
tick,0x7fffad96feb4,2929155,0,0x0,8
tick,0x7fffad96feb4,2930878,0,0x0,8
tick,0x7fffad96feb4,2932155,0,0x0,8
tick,0x7fffad96feb4,2933915,0,0x0,8
tick,0x7fffad96feb4,2935114,0,0x0,8
tick,0x7fffad96feb4,2937062,0,0x0,8
tick,0x7fffad96feb4,2938810,0,0x0,8
tick,0x7fffad96feb4,2941097,0,0x0,8
tick,0x7fffad96feb4,2942931,0,0x0,8
tick,0x7fffad96feb4,2944095,0,0x0,8
tick,0x7fffad96feb4,2945855,0,0x0,8
tick,0x7fffad96feb4,2948066,0,0x0,8
tick,0x7fffad96feb4,2949984,0,0x0,8
tick,0x7fffad96feb4,2951805,0,0x0,8
tick,0x7fffad96feb4,2953031,0,0x0,8
tick,0x7fffad96feb4,2954943,0,0x0,8
tick,0x7fffad96feb4,2957025,0,0x0,8
tick,0x7fffad96feb4,2958728,0,0x0,8
tick,0x7fffad96feb4,2960839,0,0x0,8
tick,0x7fffad96feb4,2962050,0,0x0,8
tick,0x7fffad96feb4,2963885,0,0x0,8
tick,0x7fffad96feb4,2964994,0,0x0,8
tick,0x7fffad96feb4,2966731,0,0x0,8
tick,0x7fffad96feb4,2968004,0,0x0,8
tick,0x7fffad96feb4,2970537,0,0x0,8
tick,0x7fffad96feb4,2971711,0,0x0,8
tick,0x7fffad96feb4,2973881,0,0x0,8
tick,0x7fffad96feb4,2975000,0,0x0,8
tick,0x7fffad96feb4,2976690,0,0x0,8
tick,0x7fffad96feb4,2977980,0,0x0,8
tick,0x7fffad96feb4,2980055,0,0x0,8
tick,0x7fffad96feb4,2981841,0,0x0,8
tick,0x7fffad96feb4,2983966,0,0x0,8
tick,0x7fffad96feb4,2985896,0,0x0,8
tick,0x7fffad96feb4,2987674,0,0x0,8
tick,0x7fffad96feb4,2989765,0,0x0,8
tick,0x7fffad96feb4,2991707,0,0x0,8
tick,0x7fffad96feb4,2992896,0,0x0,8
tick,0x7fffad96feb4,2994933,0,0x0,8
tick,0x7fffad96feb4,2996808,0,0x0,8
tick,0x7fffad96feb4,2998846,0,0x0,8
tick,0x7fffad96feb4,3000869,0,0x0,8
tick,0x7fffad96feb4,3002857,0,0x0,8
tick,0x7fffad96feb4,3004608,0,0x0,8
tick,0x7fffad96feb4,3006694,0,0x0,8
tick,0x7fffad96feb4,3007854,0,0x0,8
tick,0x7fffad96feb4,3009868,0,0x0,8
tick,0x7fffad96feb4,3011806,0,0x0,8
tick,0x7fffad96feb4,3013893,0,0x0,8
tick,0x7fffad96feb4,3015724,0,0x0,8
tick,0x7fffad96feb4,3016975,0,0x0,8
tick,0x7fffad96feb4,3018958,0,0x0,8
tick,0x7fffad96feb4,3020825,0,0x0,8
tick,0x7fffad96feb4,3022782,0,0x0,8
tick,0x7fffad96feb4,3024818,0,0x0,8
tick,0x7fffad96feb4,3026763,0,0x0,8
tick,0x7fffad96feb4,3028927,0,0x0,8
tick,0x7fffad96feb4,3030572,0,0x0,8
tick,0x7fffad96feb4,3031807,0,0x0,8
tick,0x7fffad96feb4,3033822,0,0x0,8
tick,0x7fffad96feb4,3035855,0,0x0,8
tick,0x7fffad96feb4,3037563,0,0x0,8
tick,0x7fffad96feb4,3039751,0,0x0,8
tick,0x7fffad96feb4,3041558,0,0x0,8
tick,0x7fffad96feb4,3042803,0,0x0,8
tick,0x7fffad96feb4,3044910,0,0x0,8
tick,0x7fffad96feb4,3046518,0,0x0,8
tick,0x7fffad96feb4,3047824,0,0x0,8
tick,0x7fffad96feb4,3049567,0,0x0,8
tick,0x7fffad96feb4,3050812,0,0x0,8
tick,0x7fffad96feb4,3052805,0,0x0,8
tick,0x7fffad96feb4,3054520,0,0x0,8
tick,0x7fffad96feb4,3056777,0,0x0,8
tick,0x7fffad96feb4,3058767,0,0x0,8
tick,0x7fffad96feb4,3060507,0,0x0,8
tick,0x7fffad96feb4,3061759,0,0x0,8
tick,0x7fffad96feb4,3063547,0,0x0,8
tick,0x7fffad96feb4,3064745,0,0x0,8
tick,0x7fffad96feb4,3066588,0,0x0,8
tick,0x7fffad96feb4,3067712,0,0x0,8
tick,0x7fffad96feb4,3069658,0,0x0,8
tick,0x7fffad96feb4,3071491,0,0x0,8
tick,0x7fffad96feb4,3073492,0,0x0,8
tick,0x7fffad96feb4,3074621,0,0x0,8
tick,0x7fffad96feb4,3076603,0,0x0,8
tick,0x7fffad96feb4,3077696,0,0x0,8
tick,0x7fffad96feb4,3079750,0,0x0,8
tick,0x7fffad96feb4,3081668,0,0x0,8
tick,0x7fffad96feb4,3083713,0,0x0,8
tick,0x7fffad96feb4,3085732,0,0x0,8
tick,0x7fffad96feb4,3087404,0,0x0,8
tick,0x7fffad96feb4,3089639,0,0x0,8
tick,0x7fffad96feb4,3091738,0,0x0,8
tick,0x7fffad96feb4,3093663,0,0x0,8
tick,0x7fffad96feb4,3095704,0,0x0,8
tick,0x7fffad96feb4,3097626,0,0x0,8
tick,0x7fffad96feb4,3099564,0,0x0,8
tick,0x7fffad96feb4,3101699,0,0x0,8
tick,0x7fffad96feb4,3103688,0,0x0,8
tick,0x7fffad96feb4,3105364,0,0x0,8
tick,0x7fffad96feb4,3107489,0,0x0,8
tick,0x7fffad96feb4,3108629,0,0x0,8
tick,0x7fffad96feb4,3110670,0,0x0,8
tick,0x7fffad96feb4,3112462,0,0x0,8
tick,0x7fffad96feb4,3113615,0,0x0,8
tick,0x7fffad96feb4,3115611,0,0x0,8
tick,0x7fffad96feb4,3117561,0,0x0,8
tick,0x7fffad96feb4,3121046,0,0x0,8
tick,0x7fffad96feb4,3121291,0,0x0,8
tick,0x7fffad96feb4,3123609,0,0x0,8
tick,0x7fffad96feb4,3125585,0,0x0,8
tick,0x7fffad96feb4,3127641,0,0x0,8
tick,0x7fffad96feb4,3129506,0,0x0,8
tick,0x7fffad96feb4,3131561,0,0x0,8
tick,0x7fffad96feb4,3133502,0,0x0,8
tick,0x7fffad96feb4,3135317,0,0x0,8
tick,0x7fffad96feb4,3137320,0,0x0,8
tick,0x7fffad96feb4,3139570,0,0x0,8
tick,0x7fffad96feb4,3141463,0,0x0,8
tick,0x7fffad96feb4,3143600,0,0x0,8
tick,0x7fffad96feb4,3145533,0,0x0,8
tick,0x7fffad96feb4,3147532,0,0x0,8
tick,0x7fffad96feb4,3149461,0,0x0,8
tick,0x7fffad96feb4,3151221,0,0x0,8
tick,0x7fffad96feb4,3153742,0,0x0,8
tick,0x7fffad96feb4,3155217,0,0x0,8
tick,0x7fffad96feb4,3157213,0,0x0,8
tick,0x7fffad96feb4,3158437,0,0x0,8
tick,0x7fffad96feb4,3160337,0,0x0,8
tick,0x7fffad96feb4,3162200,0,0x0,8
tick,0x7fffad96feb4,3164215,0,0x0,8
tick,0x7fffad96feb4,3166219,0,0x0,8
tick,0x7fffad96feb4,3168357,0,0x0,8
tick,0x7fffad96feb4,3170786,0,0x0,8
tick,0x7fffad96feb4,3172481,0,0x0,8
tick,0x7fffad96feb4,3174511,0,0x0,8
tick,0x7fffad96feb4,3176401,0,0x0,8
tick,0x7fffad96feb4,3178235,0,0x0,8
tick,0x7fffad96feb4,3179388,0,0x0,8
tick,0x7fffad96feb4,3181463,0,0x0,8
tick,0x7fffad96feb4,3183291,0,0x0,8
tick,0x7fffad96feb4,3184422,0,0x0,8
tick,0x7fffad96feb4,3186183,0,0x0,8
tick,0x7fffad96feb4,3188159,0,0x0,8
tick,0x7fffad96feb4,3190502,0,0x0,8
tick,0x7fffad96feb4,3192158,0,0x0,8
tick,0x7fffad96feb4,3194157,0,0x0,8
tick,0x7fffad96feb4,3196105,0,0x0,8
tick,0x7fffad96feb4,3198320,0,0x0,8
tick,0x7fffad96feb4,3200332,0,0x0,8
tick,0x7fffad96feb4,3202371,0,0x0,8
tick,0x7fffad96feb4,3204537,0,0x0,8
tick,0x7fffad96feb4,3206169,0,0x0,8
tick,0x7fffad96feb4,3208027,0,0x0,8
tick,0x7fffad96feb4,3210062,0,0x0,8
tick,0x7fffad96feb4,3212036,0,0x0,8
tick,0x7fffad96feb4,3214062,0,0x0,8
tick,0x7fffad96feb4,3215992,0,0x0,8
tick,0x7fffad96feb4,3218201,0,0x0,8
tick,0x7fffad96feb4,3221592,0,0x0,8
tick,0x7fffad96feb4,3222088,0,0x0,8
tick,0x7fffad96feb4,3223957,0,0x0,8
tick,0x7fffad96feb4,3226236,0,0x0,8
tick,0x7fffad96feb4,3227979,0,0x0,8
tick,0x7fffad96feb4,3229258,0,0x0,8
tick,0x7fffad96feb4,3231030,0,0x0,8
tick,0x7fffad96feb4,3233024,0,0x0,8
tick,0x7fffad96feb4,3235273,0,0x0,8
tick,0x7fffad96feb4,3237419,0,0x0,8
tick,0x7fffad96feb4,3238924,0,0x0,8
tick,0x7fffad96feb4,3240932,0,0x0,8
tick,0x7fffad96feb4,3242127,0,0x0,8
tick,0x7fffad96feb4,3244195,0,0x0,8
tick,0x7fffad96feb4,3245950,0,0x0,8
tick,0x7fffad96feb4,3247131,0,0x0,8
tick,0x7fffad96feb4,3248912,0,0x0,8
tick,0x7fffad96feb4,3250076,0,0x0,8
tick,0x7fffad96feb4,3251965,0,0x0,8
tick,0x7fffad96feb4,3253791,0,0x0,8
tick,0x7fffad96feb4,3254941,0,0x0,8
tick,0x7fffad96feb4,3257065,0,0x0,8
tick,0x7fffad96feb4,3259139,0,0x0,8
tick,0x7fffad96feb4,3260896,0,0x0,8
tick,0x7fffad96feb4,3262155,0,0x0,8
tick,0x7fffad96feb4,3263945,0,0x0,8
tick,0x7fffad96feb4,3265116,0,0x0,8
tick,0x7fffad96feb4,3266868,0,0x0,8
tick,0x7fffad96feb4,3268157,0,0x0,8
tick,0x7fffad96feb4,3271729,0,0x0,8
tick,0x7fffad96feb4,3272896,0,0x0,8
tick,0x7fffad96feb4,3274068,0,0x0,8
tick,0x7fffad96feb4,3275941,0,0x0,8
tick,0x7fffad96feb4,3278105,0,0x0,8
tick,0x7fffad96feb4,3280037,0,0x0,8
tick,0x7fffad96feb4,3281846,0,0x0,8
tick,0x7fffad96feb4,3283033,0,0x0,8
tick,0x7fffad96feb4,3285006,0,0x0,8
tick,0x7fffad96feb4,3286925,0,0x0,8
tick,0x7fffad96feb4,3288768,0,0x0,8
tick,0x7fffad96feb4,3290801,0,0x0,8
tick,0x7fffad96feb4,3291988,0,0x0,8
tick,0x7fffad96feb4,3293838,0,0x0,8
tick,0x7fffad96feb4,3295056,0,0x0,8
tick,0x7fffad96feb4,3296847,0,0x0,8
tick,0x7fffad96feb4,3298013,0,0x0,8
tick,0x7fffad96feb4,3299828,0,0x0,8
tick,0x7fffad96feb4,3301965,0,0x0,8
tick,0x7fffad96feb4,3303909,0,0x0,8
tick,0x7fffad96feb4,3305962,0,0x0,8
tick,0x7fffad96feb4,3307971,0,0x0,8
tick,0x7fffad96feb4,3309953,0,0x0,8
tick,0x7fffad96feb4,3311774,0,0x0,8
tick,0x7fffad96feb4,3312977,0,0x0,8
tick,0x7fffad96feb4,3314782,0,0x0,8
tick,0x7fffad96feb4,3315920,0,0x0,8
tick,0x7fffad96feb4,3317968,0,0x0,8
tick,0x7fffad96feb4,3320848,0,0x0,8
tick,0x7fffad96feb4,3321683,0,0x0,8
tick,0x7fffad96feb4,3323715,0,0x0,8
tick,0x7fffad96feb4,3324990,0,0x0,8
tick,0x7fffad96feb4,3326862,0,0x0,8
tick,0x7fffad96feb4,3328722,0,0x0,8
tick,0x7fffad96feb4,3330692,0,0x0,8
tick,0x7fffad96feb4,3332714,0,0x0,8
tick,0x7fffad96feb4,3333942,0,0x0,8
tick,0x7fffad96feb4,3335833,0,0x0,8
tick,0x7fffad96feb4,3337869,0,0x0,8
tick,0x7fffad96feb4,3339927,0,0x0,8
tick,0x7fffad96feb4,3341685,0,0x0,8
tick,0x7fffad96feb4,3343650,0,0x0,8
tick,0x7fffad96feb4,3345798,0,0x0,8
tick,0x7fffad96feb4,3347694,0,0x0,8
tick,0x7fffad96feb4,3349861,0,0x0,8
tick,0x7fffad96feb4,3351595,0,0x0,8
tick,0x7fffad96feb4,3354678,0,0x0,8
tick,0x7fffad96feb4,3355658,0,0x0,8
tick,0x7fffad96feb4,3357627,0,0x0,8
tick,0x7fffad96feb4,3358840,0,0x0,8
tick,0x7fffad96feb4,3360599,0,0x0,8
tick,0x7fffad96feb4,3362589,0,0x0,8
tick,0x7fffad96feb4,3364628,0,0x0,8
tick,0x7fffad96feb4,3366571,0,0x0,8
tick,0x7fffad96feb4,3368601,0,0x0,8
tick,0x7fffad96feb4,3372600,0,0x0,8
tick,0x7fffad96feb4,3374935,0,0x0,8
tick,0x7fffad96feb4,3377103,0,0x0,8
tick,0x7fffad96feb4,3378539,0,0x0,8
tick,0x7fffad96feb4,3380783,0,0x0,8
tick,0x7fffad96feb4,3382483,0,0x0,8
tick,0x7fffad96feb4,3384503,0,0x0,8
tick,0x7fffad96feb4,3386905,0,0x0,8
tick,0x7fffad96feb4,3390330,0,0x0,8
tick,0x7fffad96feb4,3390535,0,0x0,8
tick,0x7fffad96feb4,3392462,0,0x0,8
tick,0x7fffad96feb4,3394573,0,0x0,8
tick,0x7fffad96feb4,3396468,0,0x0,8
tick,0x7fffad96feb4,3398545,0,0x0,8
tick,0x7fffad96feb4,3400514,0,0x0,8
tick,0x7fffad96feb4,3402465,0,0x0,8
tick,0x7fffad96feb4,3406413,0,0x0,8
tick,0x7fffad96feb4,3407980,0,0x0,8
tick,0x7fffad96feb4,3409985,0,0x0,8
tick,0x7fffad96feb4,3411984,0,0x0,8
tick,0x7fffad96feb4,3413988,0,0x0,8
tick,0x7fffad96feb4,3415972,0,0x0,8
tick,0x7fffad96feb4,3417975,0,0x0,8
tick,0x7fffad96feb4,3420124,0,0x0,8
tick,0x7fffad96feb4,3422257,0,0x0,8
tick,0x7fffad96feb4,3423956,0,0x0,8
tick,0x7fffad96feb4,3425708,0,0x0,8
tick,0x7fffad96feb4,3427245,0,0x0,8
tick,0x7fffad96feb4,3429234,0,0x0,8
tick,0x7fffad96feb4,3431197,0,0x0,8
tick,0x7fffad96feb4,3433235,0,0x0,8
tick,0x7fffad96feb4,3435227,0,0x0,8
tick,0x7fffad96feb4,3437204,0,0x0,8
tick,0x7fffad96feb4,3439235,0,0x0,8
tick,0x7fffad96feb4,3441209,0,0x0,8
tick,0x7fffad96feb4,3443236,0,0x0,8
tick,0x7fffad96feb4,3445169,0,0x0,8
tick,0x7fffad96feb4,3447186,0,0x0,8
tick,0x7fffad96feb4,3449240,0,0x0,8
tick,0x7fffad96feb4,3450498,0,0x0,8
tick,0x7fffad96feb4,3452456,0,0x0,8
tick,0x7fffad96feb4,3454194,0,0x0,8
tick,0x7fffad96feb4,3456233,0,0x0,8
tick,0x7fffad96feb4,3458123,0,0x0,8
tick,0x7fffad96feb4,3459155,0,0x0,8
tick,0x7fffad96feb4,3461464,0,0x0,8
tick,0x7fffad96feb4,3463454,0,0x0,8
tick,0x7fffad96feb4,3465427,0,0x0,8
tick,0x7fffad96feb4,3467477,0,0x0,8
tick,0x7fffad96feb4,3469128,0,0x0,8
tick,0x7fffad96feb4,3471335,0,0x0,8
tick,0x7fffad96feb4,3473155,0,0x0,8
tick,0x7fffad96feb4,3474258,0,0x0,8
tick,0x7fffad96feb4,3475401,0,0x0,8
tick,0x7fffad96feb4,3476533,0,0x0,8
tick,0x7fffad96feb4,3478496,0,0x0,8
tick,0x7fffad96feb4,3480480,0,0x0,8
tick,0x7fffad96feb4,3482468,0,0x0,8
tick,0x7fffad96feb4,3484768,0,0x0,8
tick,0x7fffad96feb4,3486616,0,0x0,8
tick,0x7fffad96feb4,3488642,0,0x0,8
tick,0x7fffad96feb4,3490750,0,0x0,8
tick,0x7fffad96feb4,3492772,0,0x0,8
tick,0x7fffad96feb4,3494780,0,0x0,8
tick,0x7fffad96feb4,3496755,0,0x0,8
tick,0x7fffad96feb4,3498808,0,0x0,8
tick,0x7fffad96feb4,3500740,0,0x0,8
tick,0x7fffad96feb4,3503328,0,0x0,8
tick,0x7fffad96feb4,3504472,0,0x0,8
tick,0x7fffad96feb4,3505743,0,0x0,8
tick,0x7fffad96feb4,3507902,0,0x0,8
tick,0x7fffad96feb4,3510038,0,0x0,8
tick,0x7fffad96feb4,3511852,0,0x0,8
tick,0x7fffad96feb4,3513905,0,0x0,8
tick,0x7fffad96feb4,3515884,0,0x0,8
tick,0x7fffad96feb4,3517566,0,0x0,8
tick,0x7fffad96feb4,3518765,0,0x0,8
tick,0x7fffad96feb4,3520557,0,0x0,8
tick,0x7fffad96feb4,3522962,0,0x0,8
tick,0x7fffad96feb4,3524882,0,0x0,8
tick,0x7fffad96feb4,3526865,0,0x0,8
tick,0x7fffad96feb4,3528880,0,0x0,8
tick,0x7fffad96feb4,3530859,0,0x0,8
tick,0x7fffad96feb4,3532817,0,0x0,8
tick,0x7fffad96feb4,3534875,0,0x0,8
tick,0x7fffad96feb4,3536680,0,0x0,8
tick,0x7fffad96feb4,3538832,0,0x0,8
tick,0x7fffad96feb4,3540747,0,0x0,8
tick,0x7fffad96feb4,3542778,0,0x0,8
tick,0x7fffad96feb4,3544775,0,0x0,8
tick,0x7fffad96feb4,3546730,0,0x0,8
tick,0x7fffad96feb4,3548533,0,0x0,8
tick,0x7fffad96feb4,3550705,0,0x0,8
tick,0x7fffad96feb4,3553132,0,0x0,8
tick,0x7fffad96feb4,3554461,0,0x0,8
tick,0x7fffad96feb4,3556458,0,0x0,8
tick,0x7fffad96feb4,3557726,0,0x0,8
tick,0x7fffad96feb4,3559773,0,0x0,8
tick,0x7fffad96feb4,3561736,0,0x0,8
tick,0x7fffad96feb4,3563755,0,0x0,8
tick,0x7fffad96feb4,3565747,0,0x0,8
tick,0x7fffad96feb4,3567779,0,0x0,8
tick,0x7fffad96feb4,3570613,0,0x0,8
tick,0x7fffad96feb4,3572657,0,0x0,8
tick,0x7fffad96feb4,3574689,0,0x0,8
tick,0x7fffad96feb4,3576464,0,0x0,8
tick,0x7fffad96feb4,3577719,0,0x0,8
tick,0x7fffad96feb4,3579431,0,0x0,8
tick,0x7fffad96feb4,3581517,0,0x0,8
tick,0x7fffad96feb4,3583409,0,0x0,8
tick,0x7fffad96feb4,3585416,0,0x0,8
tick,0x7fffad96feb4,3587547,0,0x0,8
tick,0x7fffad96feb4,3589466,0,0x0,8
tick,0x7fffad96feb4,3591537,0,0x0,8
tick,0x7fffad96feb4,3593457,0,0x0,8
tick,0x7fffad96feb4,3595392,0,0x0,8
tick,0x7fffad96feb4,3597423,0,0x0,8
tick,0x7fffad96feb4,3600677,0,0x0,8
tick,0x7fffad96feb4,3602364,0,0x0,8
tick,0x7fffad96feb4,3604412,0,0x0,8
tick,0x7fffad96feb4,3606719,0,0x0,8
tick,0x7fffad96feb4,3607915,0,0x0,8
tick,0x7fffad96feb4,3609901,0,0x0,8
tick,0x7fffad96feb4,3611758,0,0x0,8
tick,0x7fffad96feb4,3613681,0,0x0,8
tick,0x7fffad96feb4,3614875,0,0x0,8
tick,0x7fffad96feb4,3616621,0,0x0,8
tick,0x7fffad96feb4,3617856,0,0x0,8
tick,0x7fffad96feb4,3620468,0,0x0,8
tick,0x7fffad96feb4,3621690,0,0x0,8
tick,0x7fffad96feb4,3622902,0,0x0,8
tick,0x7fffad96feb4,3624900,0,0x0,8
tick,0x7fffad96feb4,3626822,0,0x0,8
tick,0x7fffad96feb4,3628830,0,0x0,8
tick,0x7fffad96feb4,3630637,0,0x0,8
tick,0x7fffad96feb4,3632704,0,0x0,8
tick,0x7fffad96feb4,3634951,0,0x0,8
tick,0x7fffad96feb4,3636914,0,0x0,8
tick,0x7fffad96feb4,3638597,0,0x0,8
tick,0x7fffad96feb4,3640659,0,0x0,8
tick,0x7fffad96feb4,3641831,0,0x0,8
tick,0x7fffad96feb4,3643842,0,0x0,8
tick,0x7fffad96feb4,3645579,0,0x0,8
tick,0x7fffad96feb4,3647855,0,0x0,8
tick,0x7fffad96feb4,3649843,0,0x0,8
tick,0x7fffad96feb4,3651603,0,0x0,8
tick,0x7fffad96feb4,3653961,0,0x0,8
tick,0x7fffad96feb4,3655714,0,0x0,8
tick,0x7fffad96feb4,3657824,0,0x0,8
tick,0x7fffad96feb4,3659884,0,0x0,8
tick,0x7fffad96feb4,3661816,0,0x0,8
tick,0x7fffad96feb4,3663774,0,0x0,8
tick,0x7fffad96feb4,3665825,0,0x0,8
tick,0x7fffad96feb4,3667865,0,0x0,8
tick,0x7fffad96feb4,3669942,0,0x0,8
tick,0x7fffad96feb4,3672038,0,0x0,8
tick,0x7fffad96feb4,3673630,0,0x0,8
tick,0x7fffad96feb4,3675641,0,0x0,8
tick,0x7fffad96feb4,3676739,0,0x0,8
tick,0x7fffad96feb4,3678695,0,0x0,8
tick,0x7fffad96feb4,3680926,0,0x0,8
tick,0x7fffad96feb4,3682727,0,0x0,8
tick,0x7fffad96feb4,3684750,0,0x0,8
tick,0x7fffad96feb4,3687139,0,0x0,8
tick,0x7fffad96feb4,3688482,0,0x0,8
tick,0x7fffad96feb4,3690450,0,0x0,8
tick,0x7fffad96feb4,3692765,0,0x0,8
tick,0x7fffad96feb4,3694703,0,0x0,8
tick,0x7fffad96feb4,3696417,0,0x0,8
tick,0x7fffad96feb4,3697732,0,0x0,8
tick,0x7fffad96feb4,3699712,0,0x0,8
tick,0x7fffad96feb4,3701643,0,0x0,8
tick,0x7fffad96feb4,3703866,0,0x0,8
tick,0x7fffad96feb4,3705422,0,0x0,8
tick,0x7fffad96feb4,3707720,0,0x0,8
tick,0x7fffad96feb4,3709700,0,0x0,8
tick,0x7fffad96feb4,3711380,0,0x0,8
tick,0x7fffad96feb4,3713386,0,0x0,8
tick,0x7fffad96feb4,3714708,0,0x0,8
tick,0x7fffad96feb4,3716665,0,0x0,8
tick,0x7fffad96feb4,3718562,0,0x0,8
tick,0x7fffad96feb4,3720951,0,0x0,8
tick,0x7fffad96feb4,3722560,0,0x0,8
tick,0x7fffad96feb4,3723652,0,0x0,8
tick,0x7fffad96feb4,3725709,0,0x0,8
tick,0x7fffad96feb4,3727705,0,0x0,8
tick,0x7fffad96feb4,3729615,0,0x0,8
tick,0x7fffad96feb4,3731555,0,0x0,8
tick,0x7fffad96feb4,3733373,0,0x0,8
tick,0x7fffad96feb4,3735349,0,0x0,8
tick,0x7fffad96feb4,3737338,0,0x0,8
tick,0x7fffad96feb4,3739390,0,0x0,8
tick,0x7fffad96feb4,3741314,0,0x0,8
tick,0x7fffad96feb4,3743282,0,0x0,8
tick,0x7fffad96feb4,3745312,0,0x0,8
tick,0x7fffad96feb4,3747301,0,0x0,8
tick,0x7fffad96feb4,3750342,0,0x0,8
tick,0x7fffad96feb4,3751297,0,0x0,8
tick,0x7fffad96feb4,3754504,0,0x0,8
tick,0x7fffad96feb4,3756292,0,0x0,8
tick,0x7fffad96feb4,3758277,0,0x0,8
tick,0x7fffad96feb4,3760261,0,0x0,8
tick,0x7fffad96feb4,3762266,0,0x0,8
tick,0x7fffad96feb4,3764260,0,0x0,8
tick,0x7fffad96feb4,3766260,0,0x0,8
tick,0x7fffad96feb4,3768258,0,0x0,8
tick,0x7fffad96feb4,3770278,0,0x0,8
tick,0x7fffad96feb4,3772247,0,0x0,8
tick,0x7fffad96feb4,3774229,0,0x0,8
tick,0x7fffad96feb4,3776246,0,0x0,8
tick,0x7fffad96feb4,3778215,0,0x0,8
tick,0x7fffad96feb4,3780377,0,0x0,8
tick,0x7fffad96feb4,3782169,0,0x0,8
tick,0x7fffad96feb4,3784175,0,0x0,8
tick,0x7fffad96feb4,3786766,0,0x0,8
tick,0x7fffad96feb4,3788340,0,0x0,8
tick,0x7fffad96feb4,3790326,0,0x0,8
tick,0x7fffad96feb4,3792315,0,0x0,8
tick,0x7fffad96feb4,3794314,0,0x0,8
tick,0x7fffad96feb4,3796294,0,0x0,8
tick,0x7fffad96feb4,3798282,0,0x0,8
tick,0x7fffad96feb4,3800110,0,0x0,8
tick,0x7fffad96feb4,3801301,0,0x0,8
tick,0x7fffad96feb4,3803375,0,0x0,8
tick,0x7fffad96feb4,3805141,0,0x0,8
tick,0x7fffad96feb4,3806281,0,0x0,8
tick,0x7fffad96feb4,3808274,0,0x0,8
tick,0x7fffad96feb4,3810161,0,0x0,8
tick,0x7fffad96feb4,3812235,0,0x0,8
tick,0x7fffad96feb4,3814228,0,0x0,8
tick,0x7fffad96feb4,3816100,0,0x0,8
tick,0x7fffad96feb4,3817259,0,0x0,8
tick,0x7fffad96feb4,3819989,0,0x0,8
tick,0x7fffad96feb4,3821068,0,0x0,8
tick,0x7fffad96feb4,3822207,0,0x0,8
tick,0x7fffad96feb4,3824365,0,0x0,8
tick,0x7fffad96feb4,3826251,0,0x0,8
tick,0x7fffad96feb4,3828096,0,0x0,8
tick,0x7fffad96feb4,3830067,0,0x0,8
tick,0x7fffad96feb4,3832044,0,0x0,8
tick,0x7fffad96feb4,3834059,0,0x0,8
tick,0x7fffad96feb4,3836220,0,0x0,8
tick,0x7fffad96feb4,3838038,0,0x0,8
tick,0x7fffad96feb4,3840039,0,0x0,8
tick,0x7fffad96feb4,3842038,0,0x0,8
tick,0x7fffad96feb4,3844015,0,0x0,8
tick,0x7fffad96feb4,3845997,0,0x0,8
tick,0x7fffad96feb4,3848003,0,0x0,8
tick,0x7fffad96feb4,3850023,0,0x0,8
tick,0x7fffad96feb4,3851997,0,0x0,8
tick,0x7fffad96feb4,3853980,0,0x0,8
tick,0x7fffad96feb4,3856015,0,0x0,8
tick,0x7fffad96feb4,3857995,0,0x0,8
tick,0x7fffad96feb4,3859931,0,0x0,8
tick,0x7fffad96feb4,3861978,0,0x0,8
tick,0x7fffad96feb4,3863186,0,0x0,8
tick,0x7fffad96feb4,3865131,0,0x0,8
tick,0x7fffad96feb4,3867088,0,0x0,8
tick,0x7fffad96feb4,3868165,0,0x0,8
tick,0x7fffad96feb4,3870373,0,0x0,8
tick,0x7fffad96feb4,3871972,0,0x0,8
tick,0x7fffad96feb4,3874149,0,0x0,8
tick,0x7fffad96feb4,3875932,0,0x0,8
tick,0x7fffad96feb4,3878103,0,0x0,8
tick,0x7fffad96feb4,3880124,0,0x0,8
tick,0x7fffad96feb4,3881918,0,0x0,8
tick,0x7fffad96feb4,3883091,0,0x0,8
tick,0x7fffad96feb4,3884921,0,0x0,8
tick,0x7fffad96feb4,3886928,0,0x0,8
tick,0x7fffad96feb4,3888155,0,0x0,8
tick,0x7fffad96feb4,3890222,0,0x0,8
tick,0x7fffad96feb4,3892247,0,0x0,8
tick,0x7fffad96feb4,3893876,0,0x0,8
tick,0x7fffad96feb4,3895255,0,0x0,8
tick,0x7fffad96feb4,3896896,0,0x0,8
tick,0x7fffad96feb4,3898190,0,0x0,8
tick,0x7fffad96feb4,3899886,0,0x0,8
tick,0x7fffad96feb4,3901163,0,0x0,8
tick,0x7fffad96feb4,3902879,0,0x0,8
tick,0x7fffad96feb4,3905016,0,0x0,8
tick,0x7fffad96feb4,3906867,0,0x0,8
tick,0x7fffad96feb4,3908194,0,0x0,8
tick,0x7fffad96feb4,3910216,0,0x0,8
tick,0x7fffad96feb4,3911869,0,0x0,8
tick,0x7fffad96feb4,3913216,0,0x0,8
tick,0x7fffad96feb4,3914878,0,0x0,8
tick,0x7fffad96feb4,3916258,0,0x0,8
tick,0x7fffad96feb4,3917891,0,0x0,8
tick,0x7fffad96feb4,3919494,0,0x0,8
tick,0x7fffad96feb4,3920845,0,0x0,8
tick,0x7fffad96feb4,3922205,0,0x0,8
tick,0x7fffad96feb4,3923891,0,0x0,8
tick,0x7fffad96feb4,3925163,0,0x0,8
tick,0x7fffad96feb4,3926825,0,0x0,8
tick,0x7fffad96feb4,3928196,0,0x0,8
tick,0x7fffad96feb4,3929861,0,0x0,8
tick,0x7fffad96feb4,3931108,0,0x0,8
tick,0x7fffad96feb4,3932859,0,0x0,8
tick,0x7fffad96feb4,3934077,0,0x0,8
tick,0x7fffad96feb4,3936379,0,0x0,8
tick,0x7fffad96feb4,3937821,0,0x0,8
tick,0x7fffad96feb4,3939791,0,0x0,8
tick,0x7fffad96feb4,3941805,0,0x0,8
tick,0x7fffad96feb4,3943123,0,0x0,8
tick,0x7fffad96feb4,3944901,0,0x0,8
tick,0x7fffad96feb4,3946028,0,0x0,8
tick,0x7fffad96feb4,3947838,0,0x0,8
tick,0x7fffad96feb4,3949851,0,0x0,8
tick,0x7fffad96feb4,3951916,0,0x0,8
tick,0x7fffad96feb4,3953804,0,0x0,8
tick,0x7fffad96feb4,3955991,0,0x0,8
tick,0x7fffad96feb4,3958086,0,0x0,8
tick,0x7fffad96feb4,3959833,0,0x0,8
tick,0x7fffad96feb4,3961000,0,0x0,8
tick,0x7fffad96feb4,3962782,0,0x0,8
tick,0x7fffad96feb4,3964068,0,0x0,8
tick,0x7fffad96feb4,3965823,0,0x0,8
tick,0x7fffad96feb4,3967985,0,0x0,8
tick,0x7fffad96feb4,3969717,0,0x0,8
tick,0x7fffad96feb4,3970944,0,0x0,8
tick,0x7fffad96feb4,3973134,0,0x0,8
tick,0x7fffad96feb4,3974851,0,0x0,8
tick,0x7fffad96feb4,3975943,0,0x0,8
tick,0x7fffad96feb4,3977774,0,0x0,8
tick,0x7fffad96feb4,3978986,0,0x0,8
tick,0x7fffad96feb4,3980775,0,0x0,8
tick,0x7fffad96feb4,3981997,0,0x0,8
tick,0x7fffad96feb4,3983793,0,0x0,8
tick,0x7fffad96feb4,3985051,0,0x0,8
tick,0x7fffad96feb4,3986760,0,0x0,8
tick,0x7fffad96feb4,3988768,0,0x0,8
tick,0x7fffad96feb4,3990751,0,0x0,8
tick,0x7fffad96feb4,3992771,0,0x0,8
tick,0x7fffad96feb4,3994001,0,0x0,8
tick,0x7fffad96feb4,3995897,0,0x0,8
tick,0x7fffad96feb4,3997897,0,0x0,8
tick,0x7fffad96feb4,3999997,0,0x0,8
tick,0x7fffad96feb4,4001917,0,0x0,8
tick,0x7fffad96feb4,4003954,0,0x0,8
tick,0x7fffad96feb4,4005717,0,0x0,8
tick,0x7fffad96feb4,4007796,0,0x0,8
tick,0x7fffad96feb4,4008999,0,0x0,8
tick,0x7fffad96feb4,4010772,0,0x0,8
tick,0x7fffad96feb4,4012052,0,0x0,8
tick,0x7fffad96feb4,4013168,0,0x0,8
tick,0x7fffad96feb4,4015257,0,0x0,8
tick,0x7fffad96feb4,4016955,0,0x0,8
tick,0x7fffad96feb4,4018197,0,0x0,8
tick,0x7fffad96feb4,4020204,0,0x0,8
tick,0x7fffad96feb4,4021932,0,0x0,8
tick,0x7fffad96feb4,4023926,0,0x0,8
tick,0x7fffad96feb4,4025063,0,0x0,8
tick,0x7fffad96feb4,4027152,0,0x0,8
tick,0x7fffad96feb4,4029004,0,0x0,8
tick,0x7fffad96feb4,4031223,0,0x0,8
tick,0x7fffad96feb4,4033273,0,0x0,8
tick,0x7fffad96feb4,4034910,0,0x0,8
tick,0x7fffad96feb4,4037327,0,0x0,8
tick,0x7fffad96feb4,4039715,0,0x0,8
tick,0x7fffad96feb4,4040840,0,0x0,8
tick,0x7fffad96feb4,4043095,0,0x0,8
tick,0x7fffad96feb4,4044910,0,0x0,8
tick,0x7fffad96feb4,4046960,0,0x0,8
tick,0x7fffad96feb4,4048080,0,0x0,8
tick,0x7fffad96feb4,4049902,0,0x0,8
tick,0x7fffad96feb4,4051041,0,0x0,8
tick,0x7fffad96feb4,4053724,0,0x0,8
tick,0x7fffad96feb4,4054858,0,0x0,8
tick,0x7fffad96feb4,4056920,0,0x0,8
tick,0x7fffad96feb4,4058924,0,0x0,8
tick,0x7fffad96feb4,4060859,0,0x0,8
tick,0x7fffad96feb4,4062933,0,0x0,8
tick,0x7fffad96feb4,4064957,0,0x0,8
tick,0x7fffad96feb4,4066817,0,0x0,8
tick,0x7fffad96feb4,4069322,0,0x0,8
tick,0x7fffad96feb4,4071126,0,0x0,8
tick,0x7fffad96feb4,4072764,0,0x0,8
tick,0x7fffad96feb4,4074866,0,0x0,8
tick,0x7fffad96feb4,4076772,0,0x0,8
tick,0x7fffad96feb4,4078986,0,0x0,8
tick,0x7fffad96feb4,4080760,0,0x0,8
tick,0x7fffad96feb4,4082755,0,0x0,8
tick,0x7fffad96feb4,4092747,0,0x0,8
tick,0x7fffad96feb4,4095468,0,0x0,8
tick,0x7fffad96feb4,4096662,0,0x0,8
tick,0x7fffad96feb4,4098927,0,0x0,8
tick,0x7fffad96feb4,4100729,0,0x0,8
tick,0x7fffad96feb4,4101827,0,0x0,8
tick,0x7fffad96feb4,4103701,0,0x0,8
tick,0x7fffad96feb4,4105687,0,0x0,8
tick,0x7fffad96feb4,4107870,0,0x0,8
tick,0x7fffad96feb4,4109297,0,0x0,8
tick,0x7fffad96feb4,4111501,0,0x0,8
tick,0x7fffad96feb4,4113433,0,0x0,8
tick,0x7fffad96feb4,4115463,0,0x0,8
tick,0x7fffad96feb4,4117455,0,0x0,8
tick,0x7fffad96feb4,4119397,0,0x0,8
tick,0x7fffad96feb4,4121280,0,0x0,8
tick,0x7fffad96feb4,4123429,0,0x0,8
tick,0x7fffad96feb4,4125293,0,0x0,8
tick,0x7fffad96feb4,4127417,0,0x0,8
tick,0x7fffad96feb4,4129407,0,0x0,8
tick,0x7fffad96feb4,4131452,0,0x0,8
tick,0x7fffad96feb4,4133411,0,0x0,8
tick,0x7fffad96feb4,4136179,0,0x0,8
tick,0x7fffad96feb4,4137372,0,0x0,8
tick,0x7fffad96feb4,4139379,0,0x0,8
tick,0x7fffad96feb4,4141372,0,0x0,8
tick,0x7fffad96feb4,4143341,0,0x0,8
tick,0x7fffad96feb4,4145371,0,0x0,8
tick,0x7fffad96feb4,4147224,0,0x0,8
tick,0x7fffad96feb4,4148344,0,0x0,8
tick,0x7fffad96feb4,4150278,0,0x0,8
tick,0x7fffad96feb4,4152702,0,0x0,8
tick,0x7fffad96feb4,4154251,0,0x0,8
tick,0x7fffad96feb4,4156332,0,0x0,8
tick,0x7fffad96feb4,4158323,0,0x0,8
tick,0x7fffad96feb4,4160282,0,0x0,8
tick,0x7fffad96feb4,4162313,0,0x0,8
tick,0x7fffad96feb4,4164202,0,0x0,8
tick,0x7fffad96feb4,4166141,0,0x0,8
tick,0x7fffad96feb4,4168157,0,0x0,8
tick,0x7fffad96feb4,4170380,0,0x0,8
tick,0x7fffad96feb4,4172159,0,0x0,8
tick,0x7fffad96feb4,4174153,0,0x0,8
tick,0x7fffad96feb4,4176149,0,0x0,8
tick,0x7fffad96feb4,4178410,0,0x0,8
tick,0x7fffad96feb4,4180484,0,0x0,8
tick,0x7fffad96feb4,4182297,0,0x0,8
tick,0x7fffad96feb4,4184316,0,0x0,8
tick,0x7fffad96feb4,4186187,0,0x0,8
tick,0x7fffad96feb4,4188099,0,0x0,8
tick,0x7fffad96feb4,4190353,0,0x0,8
tick,0x7fffad96feb4,4192435,0,0x0,8
tick,0x7fffad96feb4,4194252,0,0x0,8
tick,0x7fffad96feb4,4195474,0,0x0,8
tick,0x7fffad96feb4,4197333,0,0x0,8
tick,0x7fffad96feb4,4199060,0,0x0,8
tick,0x7fffad96feb4,4201209,0,0x0,8
tick,0x7fffad96feb4,4203049,0,0x0,8
tick,0x7fffad96feb4,4205333,0,0x0,8
tick,0x7fffad96feb4,4207361,0,0x0,8
tick,0x7fffad96feb4,4209242,0,0x0,8
tick,0x7fffad96feb4,4211303,0,0x0,8
tick,0x7fffad96feb4,4213330,0,0x0,8
tick,0x7fffad96feb4,4215107,0,0x0,8
tick,0x7fffad96feb4,4216288,0,0x0,8
tick,0x7fffad96feb4,4218191,0,0x0,8
tick,0x7fffad96feb4,4220020,0,0x0,8
tick,0x7fffad96feb4,4222094,0,0x0,8
tick,0x7fffad96feb4,4223255,0,0x0,8
tick,0x7fffad96feb4,4225016,0,0x0,8
tick,0x7fffad96feb4,4227028,0,0x0,8
tick,0x7fffad96feb4,4228284,0,0x0,8
tick,0x7fffad96feb4,4230130,0,0x0,8
tick,0x7fffad96feb4,4232090,0,0x0,8
tick,0x7fffad96feb4,4233193,0,0x0,8
tick,0x7fffad96feb4,4235227,0,0x0,8
tick,0x7fffad96feb4,4237000,0,0x0,8
tick,0x7fffad96feb4,4238182,0,0x0,8
tick,0x7fffad96feb4,4240218,0,0x0,8
tick,0x7fffad96feb4,4242133,0,0x0,8
tick,0x7fffad96feb4,4243221,0,0x0,8
tick,0x7fffad96feb4,4245045,0,0x0,8
tick,0x7fffad96feb4,4246230,0,0x0,8
tick,0x7fffad96feb4,4247938,0,0x0,8
tick,0x7fffad96feb4,4249244,0,0x0,8
tick,0x7fffad96feb4,4250936,0,0x0,8
tick,0x7fffad96feb4,4252812,0,0x0,8
tick,0x7fffad96feb4,4253938,0,0x0,8
tick,0x7fffad96feb4,4256153,0,0x0,8
tick,0x7fffad96feb4,4258226,0,0x0,8
tick,0x7fffad96feb4,4259927,0,0x0,8
tick,0x7fffad96feb4,4261944,0,0x0,8
tick,0x7fffad96feb4,4263963,0,0x0,8
tick,0x7fffad96feb4,4265188,0,0x0,8
tick,0x7fffad96feb4,4267125,0,0x0,8
tick,0x7fffad96feb4,4270405,0,0x0,8
tick,0x7fffad96feb4,4270951,0,0x0,8
tick,0x7fffad96feb4,4273001,0,0x0,8
tick,0x7fffad96feb4,4274925,0,0x0,8
tick,0x7fffad96feb4,4276134,0,0x0,8
tick,0x7fffad96feb4,4277949,0,0x0,8
tick,0x7fffad96feb4,4279884,0,0x0,8
tick,0x7fffad96feb4,4281858,0,0x0,8
tick,0x7fffad96feb4,4283189,0,0x0,8
tick,0x7fffad96feb4,4285202,0,0x0,8
tick,0x7fffad96feb4,4286952,0,0x0,8
tick,0x7fffad96feb4,4288896,0,0x0,8
tick,0x7fffad96feb4,4290862,0,0x0,8
tick,0x7fffad96feb4,4292164,0,0x0,8
tick,0x7fffad96feb4,4293423,0,0x0,8
tick,0x7fffad96feb4,4295238,0,0x0,8
tick,0x7fffad96feb4,4297225,0,0x0,8
tick,0x7fffad96feb4,4299377,0,0x0,8
tick,0x7fffad96feb4,4301448,0,0x0,8
tick,0x7fffad96feb4,4303890,0,0x0,8
tick,0x7fffad96feb4,4305336,0,0x0,8
tick,0x7fffad96feb4,4307171,0,0x0,8
tick,0x7fffad96feb4,4309351,0,0x0,8
tick,0x7fffad96feb4,4311582,0,0x0,8
tick,0x7fffad96feb4,4313387,0,0x0,8
tick,0x7fffad96feb4,4315431,0,0x0,8
tick,0x7fffad96feb4,4317182,0,0x0,8
tick,0x7fffad96feb4,4320344,0,0x0,8
tick,0x7fffad96feb4,4322277,0,0x0,8
tick,0x7fffad96feb4,4324240,0,0x0,8
tick,0x7fffad96feb4,4326326,0,0x0,8
tick,0x7fffad96feb4,4328164,0,0x0,8
tick,0x7fffad96feb4,4330410,0,0x0,8
tick,0x7fffad96feb4,4332090,0,0x0,8
tick,0x7fffad96feb4,4334134,0,0x0,8
tick,0x7fffad96feb4,4336340,0,0x0,8
tick,0x7fffad96feb4,4338256,0,0x0,8
tick,0x7fffad96feb4,4340150,0,0x0,8
tick,0x7fffad96feb4,4342077,0,0x0,8
tick,0x7fffad96feb4,4343369,0,0x0,8
tick,0x7fffad96feb4,4345379,0,0x0,8
tick,0x7fffad96feb4,4347222,0,0x0,8
tick,0x7fffad96feb4,4349067,0,0x0,8
tick,0x7fffad96feb4,4351114,0,0x0,8
tick,0x7fffad96feb4,4353430,0,0x0,8
tick,0x7fffad96feb4,4355122,0,0x0,8
tick,0x7fffad96feb4,4357012,0,0x0,8
tick,0x7fffad96feb4,4358996,0,0x0,8
tick,0x7fffad96feb4,4361062,0,0x0,8
tick,0x7fffad96feb4,4363066,0,0x0,8
tick,0x7fffad96feb4,4365078,0,0x0,8
tick,0x7fffad96feb4,4367087,0,0x0,8
tick,0x7fffad96feb4,4369785,0,0x0,8
tick,0x7fffad96feb4,4371074,0,0x0,8
tick,0x7fffad96feb4,4372972,0,0x0,8
tick,0x7fffad96feb4,4374033,0,0x0,8
tick,0x7fffad96feb4,4376070,0,0x0,8
tick,0x7fffad96feb4,4378059,0,0x0,8
tick,0x7fffad96feb4,4380090,0,0x0,8
tick,0x7fffad96feb4,4381903,0,0x0,8
tick,0x7fffad96feb4,4383899,0,0x0,8
tick,0x7fffad96feb4,4386387,0,0x0,8
tick,0x7fffad96feb4,4388013,0,0x0,8
tick,0x7fffad96feb4,4389902,0,0x0,8
tick,0x7fffad96feb4,4391017,0,0x0,8
tick,0x7fffad96feb4,4393022,0,0x0,8
tick,0x7fffad96feb4,4395097,0,0x0,8
tick,0x7fffad96feb4,4396423,0,0x0,8
tick,0x7fffad96feb4,4397544,0,0x0,8
tick,0x7fffad96feb4,4399403,0,0x0,8
tick,0x7fffad96feb4,4401552,0,0x0,8
tick,0x7fffad96feb4,4403863,0,0x0,8
tick,0x7fffad96feb4,4405406,0,0x0,8
tick,0x7fffad96feb4,4407498,0,0x0,8
tick,0x7fffad96feb4,4409701,0,0x0,8
tick,0x7fffad96feb4,4411392,0,0x0,8
tick,0x7fffad96feb4,4413524,0,0x0,8
tick,0x7fffad96feb4,4415465,0,0x0,8
tick,0x7fffad96feb4,4417493,0,0x0,8
tick,0x7fffad96feb4,4420428,0,0x0,8
tick,0x7fffad96feb4,4422447,0,0x0,8
tick,0x7fffad96feb4,4424480,0,0x0,8
tick,0x7fffad96feb4,4426347,0,0x0,8
tick,0x7fffad96feb4,4428431,0,0x0,8
tick,0x7fffad96feb4,4430313,0,0x0,8
tick,0x7fffad96feb4,4432575,0,0x0,8
tick,0x7fffad96feb4,4434326,0,0x0,8
tick,0x7fffad96feb4,4436425,0,0x0,8
tick,0x7fffad96feb4,4438287,0,0x0,8
tick,0x7fffad96feb4,4440408,0,0x0,8
tick,0x7fffad96feb4,4442345,0,0x0,8
tick,0x7fffad96feb4,4444401,0,0x0,8
tick,0x7fffad96feb4,4446281,0,0x0,8
tick,0x7fffad96feb4,4448460,0,0x0,8
tick,0x7fffad96feb4,4450339,0,0x0,8
tick,0x7fffad96feb4,4452413,0,0x0,8
tick,0x7fffad96feb4,4454273,0,0x0,8
tick,0x7fffad96feb4,4456433,0,0x0,8
tick,0x7fffad96feb4,4458358,0,0x0,8
tick,0x7fffad96feb4,4460455,0,0x0,8
tick,0x7fffad96feb4,4462374,0,0x0,8
tick,0x7fffad96feb4,4464268,0,0x0,8
tick,0x7fffad96feb4,4465375,0,0x0,8
tick,0x7fffad96feb4,4467269,0,0x0,8
tick,0x7fffad96feb4,4470295,0,0x0,8
tick,0x7fffad96feb4,4471349,0,0x0,8
tick,0x7fffad96feb4,4473370,0,0x0,8
tick,0x7fffad96feb4,4475373,0,0x0,8
tick,0x7fffad96feb4,4477262,0,0x0,8
tick,0x7fffad96feb4,4479238,0,0x0,8
tick,0x7fffad96feb4,4481237,0,0x0,8
tick,0x7fffad96feb4,4482372,0,0x0,8
tick,0x7fffad96feb4,4484320,0,0x0,8
tick,0x7fffad96feb4,4486895,0,0x0,8
tick,0x7fffad96feb4,4488195,0,0x0,8
tick,0x7fffad96feb4,4490209,0,0x0,8
tick,0x7fffad96feb4,4491351,0,0x0,8
tick,0x7fffad96feb4,4493355,0,0x0,8
tick,0x7fffad96feb4,4495325,0,0x0,8
tick,0x7fffad96feb4,4497202,0,0x0,8
tick,0x7fffad96feb4,4499312,0,0x0,8
tick,0x7fffad96feb4,4501304,0,0x0,8
tick,0x7fffad96feb4,4503189,0,0x0,8
tick,0x7fffad96feb4,4505216,0,0x0,8
tick,0x7fffad96feb4,4507174,0,0x0,8
tick,0x7fffad96feb4,4508281,0,0x0,8
tick,0x7fffad96feb4,4510290,0,0x0,8
tick,0x7fffad96feb4,4512152,0,0x0,8
tick,0x7fffad96feb4,4514158,0,0x0,8
tick,0x7fffad96feb4,4516119,0,0x0,8
tick,0x7fffad96feb4,4518114,0,0x0,8
tick,0x7fffad96feb4,4520758,0,0x0,8
tick,0x7fffad96feb4,4522269,0,0x0,8
tick,0x7fffad96feb4,4524241,0,0x0,8
tick,0x7fffad96feb4,4526237,0,0x0,8
tick,0x7fffad96feb4,4528158,0,0x0,8
tick,0x7fffad96feb4,4530114,0,0x0,8
tick,0x7fffad96feb4,4531214,0,0x0,8
tick,0x7fffad96feb4,4533194,0,0x0,8
tick,0x7fffad96feb4,4536465,0,0x0,8
tick,0x7fffad96feb4,4538058,0,0x0,8
tick,0x7fffad96feb4,4540060,0,0x0,8
tick,0x7fffad96feb4,4541175,0,0x0,8
tick,0x7fffad96feb4,4543220,0,0x0,8
tick,0x7fffad96feb4,4545141,0,0x0,8
tick,0x7fffad96feb4,4547186,0,0x0,8
tick,0x7fffad96feb4,4549153,0,0x0,8
tick,0x7fffad96feb4,4551090,0,0x0,8
tick,0x7fffad96feb4,4554074,0,0x0,8
tick,0x7fffad96feb4,4555008,0,0x0,8
tick,0x7fffad96feb4,4557046,0,0x0,8
tick,0x7fffad96feb4,4559134,0,0x0,8
tick,0x7fffad96feb4,4561110,0,0x0,8
tick,0x7fffad96feb4,4562277,0,0x0,8
tick,0x7fffad96feb4,4564274,0,0x0,8
tick,0x7fffad96feb4,4566222,0,0x0,8
tick,0x7fffad96feb4,4567985,0,0x0,8
tick,0x7fffad96feb4,4569965,0,0x0,8
tick,0x7fffad96feb4,4572130,0,0x0,8
tick,0x7fffad96feb4,4573183,0,0x0,8
tick,0x7fffad96feb4,4575048,0,0x0,8
tick,0x7fffad96feb4,4577003,0,0x0,8
tick,0x7fffad96feb4,4579005,0,0x0,8
tick,0x7fffad96feb4,4580954,0,0x0,8
tick,0x7fffad96feb4,4582992,0,0x0,8
tick,0x7fffad96feb4,4585453,0,0x0,8
tick,0x7fffad96feb4,4586934,0,0x0,8
tick,0x7fffad96feb4,4589036,0,0x0,8
tick,0x7fffad96feb4,4590907,0,0x0,8
tick,0x7fffad96feb4,4593045,0,0x0,8
tick,0x7fffad96feb4,4594192,0,0x0,8
tick,0x7fffad96feb4,4595935,0,0x0,8
tick,0x7fffad96feb4,4597177,0,0x0,8
tick,0x7fffad96feb4,4598948,0,0x0,8
tick,0x7fffad96feb4,4600935,0,0x0,8
tick,0x7fffad96feb4,4603890,0,0x0,8
tick,0x7fffad96feb4,4606358,0,0x0,8
tick,0x7fffad96feb4,4607888,0,0x0,8
tick,0x7fffad96feb4,4609894,0,0x0,8
tick,0x7fffad96feb4,4612161,0,0x0,8
tick,0x7fffad96feb4,4613914,0,0x0,8
tick,0x7fffad96feb4,4615875,0,0x0,8
tick,0x7fffad96feb4,4618093,0,0x0,8
tick,0x7fffad96feb4,4620111,0,0x0,8
tick,0x7fffad96feb4,4621380,0,0x0,8
tick,0x7fffad96feb4,4622837,0,0x0,8
tick,0x7fffad96feb4,4625100,0,0x0,8
tick,0x7fffad96feb4,4626372,0,0x0,8
tick,0x7fffad96feb4,4627701,0,0x0,8
tick,0x7fffad96feb4,4629542,0,0x0,8
tick,0x7fffad96feb4,4631402,0,0x0,8
tick,0x7fffad96feb4,4632552,0,0x0,8
tick,0x7fffad96feb4,4634607,0,0x0,8
tick,0x7fffad96feb4,4636819,0,0x0,8
tick,0x7fffad96feb4,4639007,0,0x0,8
tick,0x7fffad96feb4,4640467,0,0x0,8
tick,0x7fffad96feb4,4642371,0,0x0,8
tick,0x7fffad96feb4,4643703,0,0x0,8
tick,0x7fffad96feb4,4645663,0,0x0,8
tick,0x7fffad96feb4,4647539,0,0x0,8
tick,0x7fffad96feb4,4649592,0,0x0,8
tick,0x7fffad96feb4,4651348,0,0x0,8
tick,0x7fffad96feb4,4653706,0,0x0,8
tick,0x7fffad96feb4,4655639,0,0x0,8
tick,0x7fffad96feb4,4657156,0,0x0,8
tick,0x7fffad96feb4,4658888,0,0x0,8
tick,0x7fffad96feb4,4660891,0,0x0,8
tick,0x7fffad96feb4,4663211,0,0x0,8
tick,0x7fffad96feb4,4664886,0,0x0,8
tick,0x7fffad96feb4,4666106,0,0x0,8
tick,0x7fffad96feb4,4667841,0,0x0,8
tick,0x7fffad96feb4,4669932,0,0x0,8
tick,0x7fffad96feb4,4671895,0,0x0,8
tick,0x7fffad96feb4,4673845,0,0x0,8
tick,0x7fffad96feb4,4675840,0,0x0,8
tick,0x7fffad96feb4,4678079,0,0x0,8
tick,0x7fffad96feb4,4679855,0,0x0,8
tick,0x7fffad96feb4,4681854,0,0x0,8
tick,0x7fffad96feb4,4684003,0,0x0,8
tick,0x7fffad96feb4,4686065,0,0x0,8
tick,0x7fffad96feb4,4687861,0,0x0,8
tick,0x7fffad96feb4,4690083,0,0x0,8
tick,0x7fffad96feb4,4691840,0,0x0,8
tick,0x7fffad96feb4,4693068,0,0x0,8
tick,0x7fffad96feb4,4694856,0,0x0,8
tick,0x7fffad96feb4,4695963,0,0x0,8
tick,0x7fffad96feb4,4697790,0,0x0,8
tick,0x7fffad96feb4,4699027,0,0x0,8
tick,0x7fffad96feb4,4700816,0,0x0,8
tick,0x7fffad96feb4,4702792,0,0x0,8
tick,0x7fffad96feb4,4705109,0,0x0,8
tick,0x7fffad96feb4,4706789,0,0x0,8
tick,0x7fffad96feb4,4708806,0,0x0,8
tick,0x7fffad96feb4,4710799,0,0x0,8
tick,0x7fffad96feb4,4712707,0,0x0,8
tick,0x7fffad96feb4,4714701,0,0x0,8
tick,0x7fffad96feb4,4716681,0,0x0,8
tick,0x7fffad96feb4,4718857,0,0x0,8
tick,0x7fffad96feb4,4720651,0,0x0,8
tick,0x7fffad96feb4,4722744,0,0x0,8
tick,0x7fffad96feb4,4724702,0,0x0,8
tick,0x7fffad96feb4,4726753,0,0x0,8
tick,0x7fffad96feb4,4728832,0,0x0,8
tick,0x7fffad96feb4,4730688,0,0x0,8
tick,0x7fffad96feb4,4732994,0,0x0,8
tick,0x7fffad96feb4,4734672,0,0x0,8
tick,0x7fffad96feb4,4737295,0,0x0,8
tick,0x7fffad96feb4,4738623,0,0x0,8
tick,0x7fffad96feb4,4740637,0,0x0,8
tick,0x7fffad96feb4,4742620,0,0x0,8
tick,0x7fffad96feb4,4744624,0,0x0,8
tick,0x7fffad96feb4,4746685,0,0x0,8
tick,0x7fffad96feb4,4748659,0,0x0,8
tick,0x7fffad96feb4,4750618,0,0x0,8
tick,0x7fffad96feb4,4753005,0,0x0,8
tick,0x7fffad96feb4,4755329,0,0x0,8
tick,0x7fffad96feb4,4756628,0,0x0,8
tick,0x7fffad96feb4,4758568,0,0x0,8
tick,0x7fffad96feb4,4760568,0,0x0,8
tick,0x7fffad96feb4,4762605,0,0x0,8
tick,0x7fffad96feb4,4764636,0,0x0,8
tick,0x7fffad96feb4,4766601,0,0x0,8
tick,0x7fffad96feb4,4769183,0,0x0,8
tick,0x7fffad96feb4,4771070,0,0x0,8
tick,0x7fffad96feb4,4772555,0,0x0,8
tick,0x7fffad96feb4,4774528,0,0x0,8
tick,0x7fffad96feb4,4776710,0,0x0,8
tick,0x7fffad96feb4,4778593,0,0x0,8
tick,0x7fffad96feb4,4780656,0,0x0,8
tick,0x7fffad96feb4,4782662,0,0x0,8
tick,0x7fffad96feb4,4784700,0,0x0,8
tick,0x7fffad96feb4,4786548,0,0x0,8
tick,0x7fffad96feb4,4788973,0,0x0,8
tick,0x7fffad96feb4,4790571,0,0x0,8
tick,0x7fffad96feb4,4792505,0,0x0,8
tick,0x7fffad96feb4,4793851,0,0x0,8
tick,0x7fffad96feb4,4795496,0,0x0,8
tick,0x7fffad96feb4,4796623,0,0x0,8
tick,0x7fffad96feb4,4798614,0,0x0,8
tick,0x7fffad96feb4,4800590,0,0x0,8
tick,0x7fffad96feb4,4804326,0,0x0,8
tick,0x7fffad96feb4,4805639,0,0x0,8
tick,0x7fffad96feb4,4807620,0,0x0,8
tick,0x7fffad96feb4,4809446,0,0x0,8
tick,0x7fffad96feb4,4811633,0,0x0,8
tick,0x7fffad96feb4,4813607,0,0x0,8
tick,0x7fffad96feb4,4815660,0,0x0,8
tick,0x7fffad96feb4,4817415,0,0x0,8
tick,0x7fffad96feb4,4819805,0,0x0,8
tick,0x7fffad96feb4,4821447,0,0x0,8
tick,0x7fffad96feb4,4823569,0,0x0,8
tick,0x7fffad96feb4,4825422,0,0x0,8
tick,0x7fffad96feb4,4827564,0,0x0,8
tick,0x7fffad96feb4,4829495,0,0x0,8
tick,0x7fffad96feb4,4831454,0,0x0,8
tick,0x7fffad96feb4,4833409,0,0x0,8
tick,0x7fffad96feb4,4834499,0,0x0,8
tick,0x7fffad96feb4,4836670,0,0x0,8
tick,0x7fffad96feb4,4838647,0,0x0,8
tick,0x7fffad96feb4,4840405,0,0x0,8
tick,0x7fffad96feb4,4842504,0,0x0,8
tick,0x7fffad96feb4,4844524,0,0x0,8
tick,0x7fffad96feb4,4846507,0,0x0,8
tick,0x7fffad96feb4,4848377,0,0x0,8
tick,0x7fffad96feb4,4850528,0,0x0,8
tick,0x7fffad96feb4,4852787,0,0x0,8
tick,0x7fffad96feb4,4854408,0,0x0,8
tick,0x7fffad96feb4,4856613,0,0x0,8
tick,0x7fffad96feb4,4858358,0,0x0,8
tick,0x7fffad96feb4,4859468,0,0x0,8
tick,0x7fffad96feb4,4861345,0,0x0,8
tick,0x7fffad96feb4,4863325,0,0x0,8
tick,0x7fffad96feb4,4865383,0,0x0,8
tick,0x7fffad96feb4,4867447,0,0x0,8
tick,0x7fffad96feb4,4869571,0,0x0,8
tick,0x7fffad96feb4,4872590,0,0x0,8
tick,0x7fffad96feb4,4873290,0,0x0,8
tick,0x7fffad96feb4,4874430,0,0x0,8
tick,0x7fffad96feb4,4876532,0,0x0,8
tick,0x7fffad96feb4,4878527,0,0x0,8
tick,0x7fffad96feb4,4880281,0,0x0,8
tick,0x7fffad96feb4,4882500,0,0x0,8
tick,0x7fffad96feb4,4884232,0,0x0,8
tick,0x7fffad96feb4,4886489,0,0x0,8
tick,0x7fffad96feb4,4888670,0,0x0,8
tick,0x7fffad96feb4,4890264,0,0x0,8
tick,0x7fffad96feb4,4891392,0,0x0,8
tick,0x7fffad96feb4,4893344,0,0x0,8
tick,0x7fffad96feb4,4895242,0,0x0,8
tick,0x7fffad96feb4,4897216,0,0x0,8
tick,0x7fffad96feb4,4899263,0,0x0,8
tick,0x7fffad96feb4,4901313,0,0x0,8
tick,0x7fffad96feb4,4903720,0,0x0,8
tick,0x7fffad96feb4,4905203,0,0x0,8
tick,0x7fffad96feb4,4907459,0,0x0,8
tick,0x7fffad96feb4,4909334,0,0x0,8
tick,0x7fffad96feb4,4911492,0,0x0,8
tick,0x7fffad96feb4,4913217,0,0x0,8
tick,0x7fffad96feb4,4915325,0,0x0,8
tick,0x7fffad96feb4,4917320,0,0x0,8
tick,0x7fffad96feb4,4920108,0,0x0,8
tick,0x7fffad96feb4,4921205,0,0x0,8
tick,0x7fffad96feb4,4923132,0,0x0,8
tick,0x7fffad96feb4,4925302,0,0x0,8
tick,0x7fffad96feb4,4927186,0,0x0,8
tick,0x7fffad96feb4,4929257,0,0x0,8
tick,0x7fffad96feb4,4931274,0,0x0,8
tick,0x7fffad96feb4,4933376,0,0x0,8
tick,0x7fffad96feb4,4935379,0,0x0,8
tick,0x7fffad96feb4,4937149,0,0x0,8
tick,0x7fffad96feb4,4939134,0,0x0,8
tick,0x7fffad96feb4,4941238,0,0x0,8
tick,0x7fffad96feb4,4943125,0,0x0,8
tick,0x7fffad96feb4,4945206,0,0x0,8
tick,0x7fffad96feb4,4947231,0,0x0,8
tick,0x7fffad96feb4,4949315,0,0x0,8
tick,0x7fffad96feb4,4951055,0,0x0,8
tick,0x7fffad96feb4,4957133,0,0x0,8
tick,0x7fffad96feb4,4957753,0,0x0,8
tick,0x7fffad96feb4,4959206,0,0x0,8
tick,0x7fffad96feb4,4961023,0,0x0,8
tick,0x7fffad96feb4,4962242,0,0x0,8
tick,0x7fffad96feb4,4964179,0,0x0,8
tick,0x7fffad96feb4,4966061,0,0x0,8
tick,0x7fffad96feb4,4967147,0,0x0,8
tick,0x7fffad96feb4,4969091,0,0x0,8
tick,0x7fffad96feb4,4971266,0,0x0,8
tick,0x7fffad96feb4,4973209,0,0x0,8
tick,0x7fffad96feb4,4975148,0,0x0,8
tick,0x7fffad96feb4,4977126,0,0x0,8
tick,0x7fffad96feb4,4979125,0,0x0,8
tick,0x7fffad96feb4,4981155,0,0x0,8
tick,0x7fffad96feb4,4983123,0,0x0,8
tick,0x7fffad96feb4,4985346,0,0x0,8
tick,0x7fffad96feb4,4986979,0,0x0,8
tick,0x7fffad96feb4,4989121,0,0x0,8
tick,0x7fffad96feb4,4990983,0,0x0,8
tick,0x7fffad96feb4,4992976,0,0x0,8
tick,0x7fffad96feb4,4995016,0,0x0,8
tick,0x7fffad96feb4,4997065,0,0x0,8
tick,0x7fffad96feb4,4999098,0,0x0,8
tick,0x7fffad96feb4,5000959,0,0x0,8
tick,0x7fffad96feb4,5003404,0,0x0,8
tick,0x7fffad96feb4,5005080,0,0x0,8
tick,0x7fffad96feb4,5006908,0,0x0,8
tick,0x7fffad96feb4,5008038,0,0x0,8
tick,0x7fffad96feb4,5009909,0,0x0,8
tick,0x7fffad96feb4,5011061,0,0x0,8
tick,0x7fffad96feb4,5012894,0,0x0,8
tick,0x7fffad96feb4,5014071,0,0x0,8
tick,0x7fffad96feb4,5015913,0,0x0,8
tick,0x7fffad96feb4,5017045,0,0x0,8
tick,0x7fffad96feb4,5018928,0,0x0,8
tick,0x7fffad96feb4,5019997,0,0x0,8
tick,0x7fffad96feb4,5021921,0,0x0,8
tick,0x7fffad96feb4,5023083,0,0x0,8
tick,0x7fffad96feb4,5024912,0,0x0,8
tick,0x7fffad96feb4,5026988,0,0x0,8
tick,0x7fffad96feb4,5029204,0,0x0,8
tick,0x7fffad96feb4,5030873,0,0x0,8
tick,0x7fffad96feb4,5033078,0,0x0,8
tick,0x7fffad96feb4,5035170,0,0x0,8
tick,0x7fffad96feb4,5036889,0,0x0,8
tick,0x7fffad96feb4,5039068,0,0x0,8
tick,0x7fffad96feb4,5041062,0,0x0,8
tick,0x7fffad96feb4,5042824,0,0x0,8
tick,0x7fffad96feb4,5044167,0,0x0,8
tick,0x7fffad96feb4,5045884,0,0x0,8
tick,0x7fffad96feb4,5047094,0,0x0,8
tick,0x7fffad96feb4,5048863,0,0x0,8
tick,0x7fffad96feb4,5050111,0,0x0,8
tick,0x7fffad96feb4,5052082,0,0x0,8
tick,0x7fffad96feb4,5053903,0,0x0,8
tick,0x7fffad96feb4,5055845,0,0x0,8
tick,0x7fffad96feb4,5057074,0,0x0,8
tick,0x7fffad96feb4,5059109,0,0x0,8
tick,0x7fffad96feb4,5060866,0,0x0,8
tick,0x7fffad96feb4,5062115,0,0x0,8
tick,0x7fffad96feb4,5063860,0,0x0,8
tick,0x7fffad96feb4,5065095,0,0x0,8
tick,0x7fffad96feb4,5066840,0,0x0,8
tick,0x7fffad96feb4,5068884,0,0x0,8
tick,0x7fffad96feb4,5071054,0,0x0,8
tick,0x7fffad96feb4,5072819,0,0x0,8
tick,0x7fffad96feb4,5074933,0,0x0,8
tick,0x7fffad96feb4,5076846,0,0x0,8
tick,0x7fffad96feb4,5078045,0,0x0,8
tick,0x7fffad96feb4,5080137,0,0x0,8
tick,0x7fffad96feb4,5081842,0,0x0,8
tick,0x7fffad96feb4,5083001,0,0x0,8
tick,0x7fffad96feb4,5086718,0,0x0,8
tick,0x7fffad96feb4,5087775,0,0x0,8
tick,0x7fffad96feb4,5090028,0,0x0,8
tick,0x7fffad96feb4,5091989,0,0x0,8
tick,0x7fffad96feb4,5093740,0,0x0,8
tick,0x7fffad96feb4,5094993,0,0x0,8
tick,0x7fffad96feb4,5096871,0,0x0,8
tick,0x7fffad96feb4,5098951,0,0x0,8
tick,0x7fffad96feb4,5100719,0,0x0,8
tick,0x7fffad96feb4,5102798,0,0x0,8
tick,0x7fffad96feb4,5104753,0,0x0,8
tick,0x7fffad96feb4,5106775,0,0x0,8
tick,0x7fffad96feb4,5107938,0,0x0,8
tick,0x7fffad96feb4,5109777,0,0x0,8
tick,0x7fffad96feb4,5110957,0,0x0,8
tick,0x7fffad96feb4,5113027,0,0x0,8
tick,0x7fffad96feb4,5114903,0,0x0,8
tick,0x7fffad96feb4,5116998,0,0x0,8
tick,0x7fffad96feb4,5119109,0,0x0,8
tick,0x7fffad96feb4,5120948,0,0x0,8
tick,0x7fffad96feb4,5122799,0,0x0,8
tick,0x7fffad96feb4,5124926,0,0x0,8
tick,0x7fffad96feb4,5126846,0,0x0,8
tick,0x7fffad96feb4,5128883,0,0x0,8
tick,0x7fffad96feb4,5130695,0,0x0,8
tick,0x7fffad96feb4,5132840,0,0x0,8
tick,0x7fffad96feb4,5135342,0,0x0,8
tick,0x7fffad96feb4,5136740,0,0x0,8
tick,0x7fffad96feb4,5138658,0,0x0,8
tick,0x7fffad96feb4,5140925,0,0x0,8
tick,0x7fffad96feb4,5142833,0,0x0,8
tick,0x7fffad96feb4,5144830,0,0x0,8
tick,0x7fffad96feb4,5146895,0,0x0,8
tick,0x7fffad96feb4,5148866,0,0x0,8
tick,0x7fffad96feb4,5150807,0,0x0,8
tick,0x7fffad96feb4,5152809,0,0x0,8
tick,0x7fffad96feb4,5154742,0,0x0,8
tick,0x7fffad96feb4,5156811,0,0x0,8
tick,0x7fffad96feb4,5158856,0,0x0,8
tick,0x7fffad96feb4,5160659,0,0x0,8
tick,0x7fffad96feb4,5162854,0,0x0,8
tick,0x7fffad96feb4,5164787,0,0x0,8
tick,0x7fffad96feb4,5166593,0,0x0,8
tick,0x7fffad96feb4,5168878,0,0x0,8
tick,0x7fffad96feb4,5170659,0,0x0,8
tick,0x7fffad96feb4,5172713,0,0x0,8
tick,0x7fffad96feb4,5174725,0,0x0,8
tick,0x7fffad96feb4,5176777,0,0x0,8
tick,0x7fffad96feb4,5178696,0,0x0,8
tick,0x7fffad96feb4,5180893,0,0x0,8
tick,0x7fffad96feb4,5182764,0,0x0,8
tick,0x7fffad96feb4,5185625,0,0x0,8
tick,0x7fffad96feb4,5186599,0,0x0,8
tick,0x7fffad96feb4,5188782,0,0x0,8
tick,0x7fffad96feb4,5190566,0,0x0,8
tick,0x7fffad96feb4,5192599,0,0x0,8
tick,0x7fffad96feb4,5194723,0,0x0,8
tick,0x7fffad96feb4,5196498,0,0x0,8
tick,0x7fffad96feb4,5197722,0,0x0,8
tick,0x7fffad96feb4,5199714,0,0x0,8
tick,0x7fffad96feb4,5201925,0,0x0,8
tick,0x7fffad96feb4,5203502,0,0x0,8
tick,0x7fffad96feb4,5206045,0,0x0,8
tick,0x7fffad96feb4,5207485,0,0x0,8
tick,0x7fffad96feb4,5209448,0,0x0,8
tick,0x7fffad96feb4,5211796,0,0x0,8
tick,0x7fffad96feb4,5213745,0,0x0,8
tick,0x7fffad96feb4,5215650,0,0x0,8
tick,0x7fffad96feb4,5217562,0,0x0,8
tick,0x7fffad96feb4,5219426,0,0x0,8
tick,0x7fffad96feb4,5221426,0,0x0,8
tick,0x7fffad96feb4,5223616,0,0x0,8
tick,0x7fffad96feb4,5225629,0,0x0,8
tick,0x7fffad96feb4,5227690,0,0x0,8
tick,0x7fffad96feb4,5229663,0,0x0,8
tick,0x7fffad96feb4,5231457,0,0x0,8
tick,0x7fffad96feb4,5233428,0,0x0,8
tick,0x7fffad96feb4,5235936,0,0x0,8
tick,0x7fffad96feb4,5237387,0,0x0,8
tick,0x7fffad96feb4,5239439,0,0x0,8
tick,0x7fffad96feb4,5241539,0,0x0,8
tick,0x7fffad96feb4,5243633,0,0x0,8
tick,0x7fffad96feb4,5245506,0,0x0,8
tick,0x7fffad96feb4,5247354,0,0x0,8
tick,0x7fffad96feb4,5249384,0,0x0,8
tick,0x7fffad96feb4,5254574,0,0x0,8
tick,0x7fffad96feb4,5256364,0,0x0,8
tick,0x7fffad96feb4,5258390,0,0x0,8
tick,0x7fffad96feb4,5260493,0,0x0,8
tick,0x7fffad96feb4,5262288,0,0x0,8
tick,0x7fffad96feb4,5264308,0,0x0,8
tick,0x7fffad96feb4,5266320,0,0x0,8
tick,0x7fffad96feb4,5268633,0,0x0,8
tick,0x7fffad96feb4,5270294,0,0x0,8
tick,0x7fffad96feb4,5272534,0,0x0,8
tick,0x7fffad96feb4,5274270,0,0x0,8
tick,0x7fffad96feb4,5276285,0,0x0,8
tick,0x7fffad96feb4,5278283,0,0x0,8
tick,0x7fffad96feb4,5280261,0,0x0,8
tick,0x7fffad96feb4,5282233,0,0x0,8
tick,0x7fffad96feb4,5284269,0,0x0,8
tick,0x7fffad96feb4,5286652,0,0x0,8
tick,0x7fffad96feb4,5288180,0,0x0,8
tick,0x7fffad96feb4,5290191,0,0x0,8
tick,0x7fffad96feb4,5292184,0,0x0,8
tick,0x7fffad96feb4,5294161,0,0x0,8
tick,0x7fffad96feb4,5296144,0,0x0,8
tick,0x7fffad96feb4,5298158,0,0x0,8
tick,0x7fffad96feb4,5300151,0,0x0,8
tick,0x7fffad96feb4,5302269,0,0x0,8
tick,0x7fffad96feb4,5304147,0,0x0,8
tick,0x7fffad96feb4,5306128,0,0x0,8
tick,0x7fffad96feb4,5308104,0,0x0,8
tick,0x7fffad96feb4,5310101,0,0x0,8
tick,0x7fffad96feb4,5312114,0,0x0,8
tick,0x7fffad96feb4,5313389,0,0x0,8
tick,0x7fffad96feb4,5315425,0,0x0,8
tick,0x7fffad96feb4,5317426,0,0x0,8
tick,0x7fffad96feb4,5319211,0,0x0,8
tick,0x7fffad96feb4,5320428,0,0x0,8
tick,0x7fffad96feb4,5322101,0,0x0,8
tick,0x7fffad96feb4,5323410,0,0x0,8
tick,0x7fffad96feb4,5325058,0,0x0,8
tick,0x7fffad96feb4,5326402,0,0x0,8
tick,0x7fffad96feb4,5328350,0,0x0,8
tick,0x7fffad96feb4,5330353,0,0x0,8
tick,0x7fffad96feb4,5332340,0,0x0,8
tick,0x7fffad96feb4,5334063,0,0x0,8
tick,0x7fffad96feb4,5336047,0,0x0,8
tick,0x7fffad96feb4,5338356,0,0x0,8
tick,0x7fffad96feb4,5340038,0,0x0,8
tick,0x7fffad96feb4,5341318,0,0x0,8
tick,0x7fffad96feb4,5343014,0,0x0,8
tick,0x7fffad96feb4,5344353,0,0x0,8
tick,0x7fffad96feb4,5346037,0,0x0,8
tick,0x7fffad96feb4,5348331,0,0x0,8
tick,0x7fffad96feb4,5350314,0,0x0,8
tick,0x7fffad96feb4,5352034,0,0x0,8
tick,0x7fffad96feb4,5354288,0,0x0,8
tick,0x7fffad96feb4,5356327,0,0x0,8
tick,0x7fffad96feb4,5358039,0,0x0,8
tick,0x7fffad96feb4,5360109,0,0x0,8
tick,0x7fffad96feb4,5361966,0,0x0,8
tick,0x7fffad96feb4,5363284,0,0x0,8
tick,0x7fffad96feb4,5365292,0,0x0,8
tick,0x7fffad96feb4,5366983,0,0x0,8
tick,0x7fffad96feb4,5368946,0,0x0,8
tick,0x7fffad96feb4,5371244,0,0x0,8
tick,0x7fffad96feb4,5372936,0,0x0,8
tick,0x7fffad96feb4,5374921,0,0x0,8
tick,0x7fffad96feb4,5377148,0,0x0,8
tick,0x7fffad96feb4,5378933,0,0x0,8
tick,0x7fffad96feb4,5380947,0,0x0,8
tick,0x7fffad96feb4,5382123,0,0x0,8
tick,0x7fffad96feb4,5384232,0,0x0,8
tick,0x7fffad96feb4,5385966,0,0x0,8
tick,0x7fffad96feb4,5387903,0,0x0,8
tick,0x7fffad96feb4,5389884,0,0x0,8
tick,0x7fffad96feb4,5391986,0,0x0,8
tick,0x7fffad96feb4,5393189,0,0x0,8
tick,0x7fffad96feb4,5394867,0,0x0,8
tick,0x7fffad96feb4,5396861,0,0x0,8
tick,0x7fffad96feb4,5398105,0,0x0,8
tick,0x7fffad96feb4,5399854,0,0x0,8
tick,0x7fffad96feb4,5401073,0,0x0,8
tick,0x7fffad96feb4,5402864,0,0x0,8
tick,0x7fffad96feb4,5405217,0,0x0,8
tick,0x7fffad96feb4,5406829,0,0x0,8
tick,0x7fffad96feb4,5408049,0,0x0,8
tick,0x7fffad96feb4,5409843,0,0x0,8
tick,0x7fffad96feb4,5411851,0,0x0,8
tick,0x7fffad96feb4,5413065,0,0x0,8
tick,0x7fffad96feb4,5414783,0,0x0,8
tick,0x7fffad96feb4,5416094,0,0x0,8
tick,0x7fffad96feb4,5418208,0,0x0,8
tick,0x7fffad96feb4,5420043,0,0x0,8
tick,0x7fffad96feb4,5422016,0,0x0,8
tick,0x7fffad96feb4,5423828,0,0x0,8
tick,0x7fffad96feb4,5425184,0,0x0,8
tick,0x7fffad96feb4,5426867,0,0x0,8
tick,0x7fffad96feb4,5428789,0,0x0,8
tick,0x7fffad96feb4,5431189,0,0x0,8
tick,0x7fffad96feb4,5432865,0,0x0,8
tick,0x7fffad96feb4,5435884,0,0x0,8
tick,0x7fffad96feb4,5437835,0,0x0,8
tick,0x7fffad96feb4,5440545,0,0x0,8
tick,0x7fffad96feb4,5441977,0,0x0,8
tick,0x7fffad96feb4,5443971,0,0x0,8
tick,0x7fffad96feb4,5446199,0,0x0,8
tick,0x7fffad96feb4,5448072,0,0x0,8
tick,0x7fffad96feb4,5449276,0,0x0,8
tick,0x7fffad96feb4,5451632,0,0x0,8
tick,0x7fffad96feb4,5452944,0,0x0,8
tick,0x7fffad96feb4,5454943,0,0x0,8
tick,0x7fffad96feb4,5456326,0,0x0,8
tick,0x7fffad96feb4,5457921,0,0x0,8
tick,0x7fffad96feb4,5459894,0,0x0,8
tick,0x7fffad96feb4,5462035,0,0x0,8
tick,0x7fffad96feb4,5464079,0,0x0,8
tick,0x7fffad96feb4,5466299,0,0x0,8
tick,0x7fffad96feb4,5472009,0,0x0,8
tick,0x7fffad96feb4,5474005,0,0x0,8
tick,0x7fffad96feb4,5477937,0,0x0,8
tick,0x7fffad96feb4,5483570,0,0x0,8
tick,0x7fffad96feb4,5491854,0,0x0,8
tick,0x7fffad96feb4,5492942,0,0x0,8
tick,0x7fffad96feb4,5494153,0,0x0,8
tick,0x7fffad96feb4,5495952,0,0x0,8
tick,0x7fffad96feb4,5497195,0,0x0,8
tick,0x7fffad96feb4,5498918,0,0x0,8
tick,0x7fffad96feb4,5500313,0,0x0,8
tick,0x7fffad96feb4,5502416,0,0x0,8
tick,0x7fffad96feb4,5503461,0,0x0,8
tick,0x7fffad96feb4,5505284,0,0x0,8
tick,0x7fffad96feb4,5506612,0,0x0,8
tick,0x7fffad96feb4,5508629,0,0x0,8
tick,0x7fffad96feb4,5510799,0,0x0,8
tick,0x7fffad96feb4,5512604,0,0x0,8
tick,0x7fffad96feb4,5514533,0,0x0,8
tick,0x7fffad96feb4,5515736,0,0x0,8
tick,0x7fffad96feb4,5518303,0,0x0,8
tick,0x7fffad96feb4,5520272,0,0x0,8
tick,0x7fffad96feb4,5521611,0,0x0,8
tick,0x7fffad96feb4,5523560,0,0x0,8
tick,0x7fffad96feb4,5525599,0,0x0,8
tick,0x7fffad96feb4,5527573,0,0x0,8
tick,0x7fffad96feb4,5529574,0,0x0,8
tick,0x7fffad96feb4,5531554,0,0x0,8
tick,0x7fffad96feb4,5533519,0,0x0,8
tick,0x7fffad96feb4,5535904,0,0x0,8
tick,0x7fffad96feb4,5537434,0,0x0,8
tick,0x7fffad96feb4,5539452,0,0x0,8
tick,0x7fffad96feb4,5541462,0,0x0,8
tick,0x7fffad96feb4,5543518,0,0x0,8
tick,0x7fffad96feb4,5544707,0,0x0,8
tick,0x7fffad96feb4,5546682,0,0x0,8
tick,0x7fffad96feb4,5548685,0,0x0,8
tick,0x7fffad96feb4,5550460,0,0x0,8
tick,0x7fffad96feb4,5552470,0,0x0,8
tick,0x7fffad96feb4,5554627,0,0x0,8
tick,0x7fffad96feb4,5556590,0,0x0,8
tick,0x7fffad96feb4,5558590,0,0x0,8
tick,0x7fffad96feb4,5560549,0,0x0,8
tick,0x7fffad96feb4,5562583,0,0x0,8
tick,0x7fffad96feb4,5564590,0,0x0,8
tick,0x7fffad96feb4,5566435,0,0x0,8
tick,0x7fffad96feb4,5568659,0,0x0,8
tick,0x7fffad96feb4,5570645,0,0x0,8
tick,0x7fffad96feb4,5572461,0,0x0,8
tick,0x7fffad96feb4,5573751,0,0x0,8
tick,0x7fffad96feb4,5575713,0,0x0,8
tick,0x7fffad96feb4,5577630,0,0x0,8
tick,0x7fffad96feb4,5579548,0,0x0,8
tick,0x7fffad96feb4,5581686,0,0x0,8
tick,0x7fffad96feb4,5583666,0,0x0,8
tick,0x7fffad96feb4,5585488,0,0x0,8
tick,0x7fffad96feb4,5587504,0,0x0,8
tick,0x7fffad96feb4,5589462,0,0x0,8
tick,0x7fffad96feb4,5591664,0,0x0,8
tick,0x7fffad96feb4,5593618,0,0x0,8
tick,0x7fffad96feb4,5595543,0,0x0,8
tick,0x7fffad96feb4,5597433,0,0x0,8
tick,0x7fffad96feb4,5599418,0,0x0,8
tick,0x7fffad96feb4,5602295,0,0x0,8
tick,0x7fffad96feb4,5604416,0,0x0,8
tick,0x7fffad96feb4,5606721,0,0x0,8
tick,0x7fffad96feb4,5608587,0,0x0,8
tick,0x7fffad96feb4,5610497,0,0x0,8
tick,0x7fffad96feb4,5612352,0,0x0,8
tick,0x7fffad96feb4,5614486,0,0x0,8
tick,0x7fffad96feb4,5616618,0,0x0,8
tick,0x7fffad96feb4,5619793,0,0x0,8
tick,0x7fffad96feb4,5620563,0,0x0,8
tick,0x7fffad96feb4,5622437,0,0x0,8
tick,0x7fffad96feb4,5624470,0,0x0,8
tick,0x7fffad96feb4,5626297,0,0x0,8
tick,0x7fffad96feb4,5627686,0,0x0,8
tick,0x7fffad96feb4,5629674,0,0x0,8
tick,0x7fffad96feb4,5631468,0,0x0,8
tick,0x7fffad96feb4,5633388,0,0x0,8
tick,0x7fffad96feb4,5636701,0,0x0,8
tick,0x7fffad96feb4,5637465,0,0x0,8
tick,0x7fffad96feb4,5639728,0,0x0,8
tick,0x7fffad96feb4,5641316,0,0x0,8
tick,0x7fffad96feb4,5643555,0,0x0,8
tick,0x7fffad96feb4,5645668,0,0x0,8
tick,0x7fffad96feb4,5647505,0,0x0,8
tick,0x7fffad96feb4,5649513,0,0x0,8
tick,0x7fffad96feb4,5652708,0,0x0,8
tick,0x7fffad96feb4,5653277,0,0x0,8
tick,0x7fffad96feb4,5656413,0,0x0,8
tick,0x7fffad96feb4,5657233,0,0x0,8
tick,0x7fffad96feb4,5659555,0,0x0,8
tick,0x7fffad96feb4,5661272,0,0x0,8
tick,0x7fffad96feb4,5662485,0,0x0,8
tick,0x7fffad96feb4,5664508,0,0x0,8
tick,0x7fffad96feb4,5666527,0,0x0,8
tick,0x7fffad96feb4,5669111,0,0x0,8
tick,0x7fffad96feb4,5671776,0,0x0,8
tick,0x7fffad96feb4,5673245,0,0x0,8
tick,0x7fffad96feb4,5674403,0,0x0,8
tick,0x7fffad96feb4,5676427,0,0x0,8
tick,0x7fffad96feb4,5678421,0,0x0,8
tick,0x7fffad96feb4,5680506,0,0x0,8
tick,0x7fffad96feb4,5682332,0,0x0,8
tick,0x7fffad96feb4,5685995,0,0x0,8
tick,0x7fffad96feb4,5687357,0,0x0,8
tick,0x7fffad96feb4,5689354,0,0x0,8
tick,0x7fffad96feb4,5691442,0,0x0,8
tick,0x7fffad96feb4,5693318,0,0x0,8
tick,0x7fffad96feb4,5695333,0,0x0,8
tick,0x7fffad96feb4,5697193,0,0x0,8
tick,0x7fffad96feb4,5699150,0,0x0,8
tick,0x7fffad96feb4,5703665,0,0x0,8
tick,0x7fffad96feb4,5704476,0,0x0,8
tick,0x7fffad96feb4,5707537,0,0x0,8
tick,0x7fffad96feb4,5709148,0,0x0,8
tick,0x7fffad96feb4,5711078,0,0x0,8
tick,0x7fffad96feb4,5713142,0,0x0,8
tick,0x7fffad96feb4,5715130,0,0x0,8
tick,0x7fffad96feb4,5717055,0,0x0,8
tick,0x7fffad96feb4,5719778,0,0x0,8
tick,0x7fffad96feb4,5722263,0,0x0,8
tick,0x7fffad96feb4,5724785,0,0x0,8
tick,0x7fffad96feb4,5725987,0,0x0,8
tick,0x7fffad96feb4,5727975,0,0x0,8
tick,0x7fffad96feb4,5729998,0,0x0,8
tick,0x7fffad96feb4,5731971,0,0x0,8
tick,0x7fffad96feb4,5733946,0,0x0,8
tick,0x7fffad96feb4,5735981,0,0x0,8
tick,0x7fffad96feb4,5738188,0,0x0,8
tick,0x7fffad96feb4,5739904,0,0x0,8
tick,0x7fffad96feb4,5741922,0,0x0,8
tick,0x7fffad96feb4,5743935,0,0x0,8
tick,0x7fffad96feb4,5746067,0,0x0,8
tick,0x7fffad96feb4,5747890,0,0x0,8
tick,0x7fffad96feb4,5749894,0,0x0,8
tick,0x7fffad96feb4,5751903,0,0x0,8
tick,0x7fffad96feb4,5753864,0,0x0,8
tick,0x7fffad96feb4,5755897,0,0x0,8
tick,0x7fffad96feb4,5757901,0,0x0,8
tick,0x7fffad96feb4,5759843,0,0x0,8
tick,0x7fffad96feb4,5761853,0,0x0,8
tick,0x7fffad96feb4,5764181,0,0x0,8
tick,0x7fffad96feb4,5765884,0,0x0,8
tick,0x7fffad96feb4,5768274,0,0x0,8
tick,0x7fffad96feb4,5770110,0,0x0,8
tick,0x7fffad96feb4,5771839,0,0x0,8
tick,0x7fffad96feb4,5773038,0,0x0,8
tick,0x7fffad96feb4,5774806,0,0x0,8
tick,0x7fffad96feb4,5776062,0,0x0,8
tick,0x7fffad96feb4,5777816,0,0x0,8
tick,0x7fffad96feb4,5780093,0,0x0,8
tick,0x7fffad96feb4,5781969,0,0x0,8
tick,0x7fffad96feb4,5783934,0,0x0,8
tick,0x7fffad96feb4,5790682,0,0x0,8
tick,0x7fffad96feb4,5791183,0,0x0,8
tick,0x7fffad96feb4,5793195,0,0x0,8
tick,0x7fffad96feb4,5795123,0,0x0,8
tick,0x7fffad96feb4,5796958,0,0x0,8
tick,0x7fffad96feb4,5798981,0,0x0,8
tick,0x7fffad96feb4,5801562,0,0x0,8
tick,0x7fffad96feb4,5804373,0,0x0,8
tick,0x7fffad96feb4,5806317,0,0x0,8
tick,0x7fffad96feb4,5811912,0,0x0,8
tick,0x7fffad96feb4,5812773,0,0x0,8
tick,0x7fffad96feb4,5814886,0,0x0,8
tick,0x7fffad96feb4,5816820,0,0x0,8
tick,0x7fffad96feb4,5819107,0,0x0,8
tick,0x7fffad96feb4,5820795,0,0x0,8
tick,0x7fffad96feb4,5822706,0,0x0,8
tick,0x7fffad96feb4,5824723,0,0x0,8
tick,0x7fffad96feb4,5826706,0,0x0,8
tick,0x7fffad96feb4,5828687,0,0x0,8
tick,0x7fffad96feb4,5830831,0,0x0,8
tick,0x7fffad96feb4,5832952,0,0x0,8
tick,0x7fffad96feb4,5838653,0,0x0,8
tick,0x7fffad96feb4,5839582,0,0x0,8
tick,0x7fffad96feb4,5841282,0,0x0,8
tick,0x7fffad96feb4,5843156,0,0x0,8
tick,0x7fffad96feb4,5847295,0,0x0,8
tick,0x7fffad96feb4,5849221,0,0x0,8
tick,0x7fffad96feb4,5851846,0,0x0,8
tick,0x7fffad96feb4,5852973,0,0x0,8
tick,0x7fffad96feb4,5854702,0,0x0,8
tick,0x7fffad96feb4,5856746,0,0x0,8
tick,0x7fffad96feb4,5858659,0,0x0,8
tick,0x7fffad96feb4,5860624,0,0x0,8
tick,0x7fffad96feb4,5862598,0,0x0,8
tick,0x7fffad96feb4,5864976,0,0x0,8
tick,0x7fffad96feb4,5866614,0,0x0,8
tick,0x7fffad96feb4,5868639,0,0x0,8
tick,0x7fffad96feb4,5870867,0,0x0,8
tick,0x7fffad96feb4,5872650,0,0x0,8
tick,0x7fffad96feb4,5874570,0,0x0,8
tick,0x7fffad96feb4,5876667,0,0x0,8
tick,0x7fffad96feb4,5878714,0,0x0,8
tick,0x7fffad96feb4,5880530,0,0x0,8
tick,0x7fffad96feb4,5882738,0,0x0,8
tick,0x7fffad96feb4,5885254,0,0x0,8
tick,0x7fffad96feb4,5886548,0,0x0,8
tick,0x7fffad96feb4,5888527,0,0x0,8
tick,0x7fffad96feb4,5890497,0,0x0,8
tick,0x7fffad96feb4,5892581,0,0x0,8
tick,0x7fffad96feb4,5895081,0,0x0,8
tick,0x7fffad96feb4,5896479,0,0x0,8
tick,0x7fffad96feb4,5898691,0,0x0,8
tick,0x7fffad96feb4,5902172,0,0x0,8
tick,0x7fffad96feb4,5903607,0,0x0,8
tick,0x7fffad96feb4,5905461,0,0x0,8
tick,0x7fffad96feb4,5907471,0,0x0,8
tick,0x7fffad96feb4,5910082,0,0x0,8
tick,0x7fffad96feb4,5911454,0,0x0,8
tick,0x7fffad96feb4,5913939,0,0x0,8
tick,0x7fffad96feb4,5916124,0,0x0,8
tick,0x7fffad96feb4,5918713,0,0x0,8
tick,0x7fffad96feb4,5920830,0,0x0,8
tick,0x7fffad96feb4,5922448,0,0x0,8
tick,0x7fffad96feb4,5924421,0,0x0,8
tick,0x7fffad96feb4,5926430,0,0x0,8
tick,0x7fffad96feb4,5928718,0,0x0,8
tick,0x7fffad96feb4,5930397,0,0x0,8
tick,0x7fffad96feb4,5932392,0,0x0,8
tick,0x7fffad96feb4,5936116,0,0x0,8
tick,0x7fffad96feb4,5937413,0,0x0,8
tick,0x7fffad96feb4,5939374,0,0x0,8
tick,0x7fffad96feb4,5941373,0,0x0,8
tick,0x7fffad96feb4,5943353,0,0x0,8
tick,0x7fffad96feb4,5945406,0,0x0,8
tick,0x7fffad96feb4,5947350,0,0x0,8
tick,0x7fffad96feb4,5949361,0,0x0,8
tick,0x7fffad96feb4,5951709,0,0x0,8
tick,0x7fffad96feb4,5953560,0,0x0,8
tick,0x7fffad96feb4,5955382,0,0x0,8
tick,0x7fffad96feb4,5957411,0,0x0,8
tick,0x7fffad96feb4,5959448,0,0x0,8
tick,0x7fffad96feb4,5961299,0,0x0,8
tick,0x7fffad96feb4,5963521,0,0x0,8
tick,0x7fffad96feb4,5965456,0,0x0,8
tick,0x7fffad96feb4,5967926,0,0x0,8
tick,0x7fffad96feb4,5969783,0,0x0,8
tick,0x7fffad96feb4,5971297,0,0x0,8
tick,0x7fffad96feb4,5973279,0,0x0,8
tick,0x7fffad96feb4,5975296,0,0x0,8
tick,0x7fffad96feb4,5977485,0,0x0,8
tick,0x7fffad96feb4,5979416,0,0x0,8
tick,0x7fffad96feb4,5981528,0,0x0,8
tick,0x7fffad96feb4,5983388,0,0x0,8
tick,0x7fffad96feb4,5985370,0,0x0,8
tick,0x7fffad96feb4,5987387,0,0x0,8
tick,0x7fffad96feb4,5989250,0,0x0,8
tick,0x7fffad96feb4,5991360,0,0x0,8
tick,0x7fffad96feb4,5993394,0,0x0,8
tick,0x7fffad96feb4,5995211,0,0x0,8
tick,0x7fffad96feb4,5997378,0,0x0,8
tick,0x7fffad96feb4,5999207,0,0x0,8
tick,0x7fffad96feb4,6001219,0,0x0,8
tick,0x7fffad96feb4,6003209,0,0x0,8
tick,0x7fffad96feb4,6005371,0,0x0,8
tick,0x7fffad96feb4,6007334,0,0x0,8
tick,0x7fffad96feb4,6009340,0,0x0,8
tick,0x7fffad96feb4,6011273,0,0x0,8
tick,0x7fffad96feb4,6013269,0,0x0,8
tick,0x7fffad96feb4,6015348,0,0x0,8
tick,0x7fffad96feb4,6019884,0,0x0,8
tick,0x7fffad96feb4,6021338,0,0x0,8
tick,0x7fffad96feb4,6023282,0,0x0,8
tick,0x7fffad96feb4,6026175,0,0x0,8
tick,0x7fffad96feb4,6027445,0,0x0,8
tick,0x7fffad96feb4,6029416,0,0x0,8
tick,0x7fffad96feb4,6031424,0,0x0,8
tick,0x7fffad96feb4,6033319,0,0x0,8
tick,0x7fffad96feb4,6035800,0,0x0,8
tick,0x7fffad96feb4,6037266,0,0x0,8
tick,0x7fffad96feb4,6039332,0,0x0,8
tick,0x7fffad96feb4,6041293,0,0x0,8
tick,0x7fffad96feb4,6043286,0,0x0,8
tick,0x7fffad96feb4,6045646,0,0x0,8
tick,0x7fffad96feb4,6047387,0,0x0,8
tick,0x7fffad96feb4,6049270,0,0x0,8
tick,0x7fffad96feb4,6051642,0,0x0,8
tick,0x7fffad96feb4,6053212,0,0x0,8
tick,0x7fffad96feb4,6055199,0,0x0,8
tick,0x7fffad96feb4,6057317,0,0x0,8
tick,0x7fffad96feb4,6059327,0,0x0,8
tick,0x7fffad96feb4,6061309,0,0x0,8
tick,0x7fffad96feb4,6063266,0,0x0,8
tick,0x7fffad96feb4,6065237,0,0x0,8
tick,0x7fffad96feb4,6068830,0,0x0,8
tick,0x7fffad96feb4,6071087,0,0x0,8
tick,0x7fffad96feb4,6073440,0,0x0,8
tick,0x7fffad96feb4,6074209,0,0x0,8
tick,0x7fffad96feb4,6076258,0,0x0,8
tick,0x7fffad96feb4,6078158,0,0x0,8
tick,0x7fffad96feb4,6080182,0,0x0,8
tick,0x7fffad96feb4,6082111,0,0x0,8
tick,0x7fffad96feb4,6084890,0,0x0,8
tick,0x7fffad96feb4,6086268,0,0x0,8
tick,0x7fffad96feb4,6088109,0,0x0,8
tick,0x7fffad96feb4,6090626,0,0x0,8
tick,0x7fffad96feb4,6092087,0,0x0,8
tick,0x7fffad96feb4,6094110,0,0x0,8
tick,0x7fffad96feb4,6096732,0,0x0,8
tick,0x7fffad96feb4,6098071,0,0x0,8
tick,0x7fffad96feb4,6103539,0,0x0,8
tick,0x7fffad96feb4,6104762,0,0x0,8
tick,0x7fffad96feb4,6105983,0,0x0,8
tick,0x7fffad96feb4,6108021,0,0x0,8
tick,0x7fffad96feb4,6110050,0,0x0,8
tick,0x7fffad96feb4,6112753,0,0x0,8
tick,0x7fffad96feb4,6113953,0,0x0,8
tick,0x7fffad96feb4,6115948,0,0x0,8
tick,0x7fffad96feb4,6119028,0,0x0,8
tick,0x7fffad96feb4,6120593,0,0x0,8
tick,0x7fffad96feb4,6122559,0,0x0,8
tick,0x7fffad96feb4,6124461,0,0x0,8
tick,0x7fffad96feb4,6126441,0,0x0,8
tick,0x7fffad96feb4,6128431,0,0x0,8
tick,0x7fffad96feb4,6130453,0,0x0,8
tick,0x7fffad96feb4,6132416,0,0x0,8
tick,0x7fffad96feb4,6134461,0,0x0,8
tick,0x7fffad96feb4,6136399,0,0x0,8
tick,0x7fffad96feb4,6138401,0,0x0,8
tick,0x7fffad96feb4,6140390,0,0x0,8
tick,0x7fffad96feb4,6142386,0,0x0,8
tick,0x7fffad96feb4,6144382,0,0x0,8
tick,0x7fffad96feb4,6146362,0,0x0,8
tick,0x7fffad96feb4,6148376,0,0x0,8
tick,0x7fffad96feb4,6151239,0,0x0,8
tick,0x7fffad96feb4,6152753,0,0x0,8
tick,0x7fffad96feb4,6154355,0,0x0,8
tick,0x7fffad96feb4,6156546,0,0x0,8
tick,0x7fffad96feb4,6158508,0,0x0,8
tick,0x7fffad96feb4,6160326,0,0x0,8
tick,0x7fffad96feb4,6162497,0,0x0,8
tick,0x7fffad96feb4,6164451,0,0x0,8
tick,0x7fffad96feb4,6166459,0,0x0,8
tick,0x7fffad96feb4,6168490,0,0x0,8
tick,0x7fffad96feb4,6170571,0,0x0,8
tick,0x7fffad96feb4,6172428,0,0x0,8
tick,0x7fffad96feb4,6174419,0,0x0,8
tick,0x7fffad96feb4,6176275,0,0x0,8
tick,0x7fffad96feb4,6178504,0,0x0,8
tick,0x7fffad96feb4,6180266,0,0x0,8
tick,0x7fffad96feb4,6182358,0,0x0,8
tick,0x7fffad96feb4,6188204,0,0x0,8
tick,0x7fffad96feb4,6190045,0,0x0,8
tick,0x7fffad96feb4,6191963,0,0x0,8
tick,0x7fffad96feb4,6195646,0,0x0,8
tick,0x7fffad96feb4,6195939,0,0x0,8
tick,0x7fffad96feb4,6198014,0,0x0,8
tick,0x7fffad96feb4,6199423,0,0x0,8
tick,0x7fffad96feb4,6205931,0,0x0,8
tick,0x7fffad96feb4,6207371,0,0x0,8
tick,0x7fffad96feb4,6209519,0,0x0,8
tick,0x7fffad96feb4,6211496,0,0x0,8
tick,0x7fffad96feb4,6213331,0,0x0,8
tick,0x7fffad96feb4,6215323,0,0x0,8
tick,0x7fffad96feb4,6221011,0,0x0,8
tick,0x7fffad96feb4,6223971,0,0x0,8
tick,0x7fffad96feb4,6225742,0,0x0,8
tick,0x7fffad96feb4,6227758,0,0x0,8
tick,0x7fffad96feb4,6229725,0,0x0,8
tick,0x7fffad96feb4,6231686,0,0x0,8
tick,0x7fffad96feb4,6234664,0,0x0,8
tick,0x7fffad96feb4,6236939,0,0x0,8
tick,0x7fffad96feb4,6238693,0,0x0,8
tick,0x7fffad96feb4,6240783,0,0x0,8
tick,0x7fffad96feb4,6242662,0,0x0,8
tick,0x7fffad96feb4,6244762,0,0x0,8
tick,0x7fffad96feb4,6246993,0,0x0,8
tick,0x7fffad96feb4,6249046,0,0x0,8
tick,0x7fffad96feb4,6258834,0,0x0,8
tick,0x7fffad96feb4,6259754,0,0x0,8
tick,0x7fffad96feb4,6261690,0,0x0,8
tick,0x7fffad96feb4,6263809,0,0x0,8
tick,0x7fffad96feb4,6265692,0,0x0,8
tick,0x7fffad96feb4,6268916,0,0x0,8
tick,0x7fffad96feb4,6271059,0,0x0,8
tick,0x7fffad96feb4,6272824,0,0x0,8
tick,0x7fffad96feb4,6274579,0,0x0,8
tick,0x7fffad96feb4,6276557,0,0x0,8
tick,0x7fffad96feb4,6278555,0,0x0,8
tick,0x7fffad96feb4,6280692,0,0x0,8
tick,0x7fffad96feb4,6282680,0,0x0,8
tick,0x7fffad96feb4,6286101,0,0x0,8
tick,0x7fffad96feb4,6286792,0,0x0,8
tick,0x7fffad96feb4,6288533,0,0x0,8
tick,0x7fffad96feb4,6290640,0,0x0,8
tick,0x7fffad96feb4,6292654,0,0x0,8
tick,0x7fffad96feb4,6294506,0,0x0,8
tick,0x7fffad96feb4,6296684,0,0x0,8
tick,0x7fffad96feb4,6298661,0,0x0,8
tick,0x7fffad96feb4,6302258,0,0x0,8
tick,0x7fffad96feb4,6302949,0,0x0,8
tick,0x7fffad96feb4,6304521,0,0x0,8
tick,0x7fffad96feb4,6306494,0,0x0,8
tick,0x7fffad96feb4,6308520,0,0x0,8
tick,0x7fffad96feb4,6310606,0,0x0,8
tick,0x7fffad96feb4,6312602,0,0x0,8
tick,0x7fffad96feb4,6314712,0,0x0,8
tick,0x7fffad96feb4,6316441,0,0x0,8
tick,0x7fffad96feb4,6318997,0,0x0,8
tick,0x7fffad96feb4,6320669,0,0x0,8
tick,0x7fffad96feb4,6322434,0,0x0,8
tick,0x7fffad96feb4,6324450,0,0x0,8
tick,0x7fffad96feb4,6326430,0,0x0,8
tick,0x7fffad96feb4,6328416,0,0x0,8
tick,0x7fffad96feb4,6330410,0,0x0,8
tick,0x7fffad96feb4,6332424,0,0x0,8
tick,0x7fffad96feb4,6334443,0,0x0,8
tick,0x7fffad96feb4,6336621,0,0x0,8
tick,0x7fffad96feb4,6338535,0,0x0,8
tick,0x7fffad96feb4,6340379,0,0x0,8
tick,0x7fffad96feb4,6342513,0,0x0,8
tick,0x7fffad96feb4,6344519,0,0x0,8
tick,0x7fffad96feb4,6346517,0,0x0,8
tick,0x7fffad96feb4,6348404,0,0x0,8
tick,0x7fffad96feb4,6350895,0,0x0,8
tick,0x7fffad96feb4,6352368,0,0x0,8
tick,0x7fffad96feb4,6354511,0,0x0,8
tick,0x7fffad96feb4,6356350,0,0x0,8
tick,0x7fffad96feb4,6358474,0,0x0,8
tick,0x7fffad96feb4,6360342,0,0x0,8
tick,0x7fffad96feb4,6362326,0,0x0,8
tick,0x7fffad96feb4,6364328,0,0x0,8
tick,0x7fffad96feb4,6366302,0,0x0,8
tick,0x7fffad96feb4,6368978,0,0x0,8
tick,0x7fffad96feb4,6370393,0,0x0,8
tick,0x7fffad96feb4,6372300,0,0x0,8
tick,0x7fffad96feb4,6374430,0,0x0,8
tick,0x7fffad96feb4,6376426,0,0x0,8
tick,0x7fffad96feb4,6378433,0,0x0,8
tick,0x7fffad96feb4,6380416,0,0x0,8
tick,0x7fffad96feb4,6382664,0,0x0,8
tick,0x7fffad96feb4,6385115,0,0x0,8
tick,0x7fffad96feb4,6386272,0,0x0,8
tick,0x7fffad96feb4,6388466,0,0x0,8
tick,0x7fffad96feb4,6390386,0,0x0,8
tick,0x7fffad96feb4,6392449,0,0x0,8
tick,0x7fffad96feb4,6394439,0,0x0,8
tick,0x7fffad96feb4,6396373,0,0x0,8
tick,0x7fffad96feb4,6398429,0,0x0,8
tick,0x7fffad96feb4,6401126,0,0x0,8
tick,0x7fffad96feb4,6402232,0,0x0,8
tick,0x7fffad96feb4,6404419,0,0x0,8
tick,0x7fffad96feb4,6406412,0,0x0,8
tick,0x7fffad96feb4,6408405,0,0x0,8
tick,0x7fffad96feb4,6410388,0,0x0,8
tick,0x7fffad96feb4,6412443,0,0x0,8
tick,0x7fffad96feb4,6414543,0,0x0,8
tick,0x7fffad96feb4,6416431,0,0x0,8
tick,0x7fffad96feb4,6418220,0,0x0,8
tick,0x7fffad96feb4,6419434,0,0x0,8
tick,0x7fffad96feb4,6421234,0,0x0,8
tick,0x7fffad96feb4,6422422,0,0x0,8
tick,0x7fffad96feb4,6424409,0,0x0,8
tick,0x7fffad96feb4,6426201,0,0x0,8
tick,0x7fffad96feb4,6428394,0,0x0,8
tick,0x7fffad96feb4,6430376,0,0x0,8
tick,0x7fffad96feb4,6432363,0,0x0,8
tick,0x7fffad96feb4,6434301,0,0x0,8
tick,0x7fffad96feb4,6436344,0,0x0,8
tick,0x7fffad96feb4,6438161,0,0x0,8
tick,0x7fffad96feb4,6440167,0,0x0,8
tick,0x7fffad96feb4,6442430,0,0x0,8
tick,0x7fffad96feb4,6444139,0,0x0,8
tick,0x7fffad96feb4,6446323,0,0x0,8
tick,0x7fffad96feb4,6448331,0,0x0,8
tick,0x7fffad96feb4,6451322,0,0x0,8
tick,0x7fffad96feb4,6452156,0,0x0,8
tick,0x7fffad96feb4,6454078,0,0x0,8
tick,0x7fffad96feb4,6456073,0,0x0,8
tick,0x7fffad96feb4,6458209,0,0x0,8
tick,0x7fffad96feb4,6460242,0,0x0,8
tick,0x7fffad96feb4,6462363,0,0x0,8
tick,0x7fffad96feb4,6464357,0,0x0,8
tick,0x7fffad96feb4,6466150,0,0x0,8
tick,0x7fffad96feb4,6468889,0,0x0,8
tick,0x7fffad96feb4,6470460,0,0x0,8
tick,0x7fffad96feb4,6472307,0,0x0,8
tick,0x7fffad96feb4,6474070,0,0x0,8
tick,0x7fffad96feb4,6476028,0,0x0,8
tick,0x7fffad96feb4,6478058,0,0x0,8
tick,0x7fffad96feb4,6480084,0,0x0,8
tick,0x7fffad96feb4,6482016,0,0x0,8
tick,0x7fffad96feb4,6485311,0,0x0,8
tick,0x7fffad96feb4,6487136,0,0x0,8
tick,0x7fffad96feb4,6489192,0,0x0,8
tick,0x7fffad96feb4,6491366,0,0x0,8
tick,0x7fffad96feb4,6493295,0,0x0,8
tick,0x7fffad96feb4,6495025,0,0x0,8
tick,0x7fffad96feb4,6496974,0,0x0,8
tick,0x7fffad96feb4,6499364,0,0x0,8
tick,0x7fffad96feb4,6501687,0,0x0,8
tick,0x7fffad96feb4,6503203,0,0x0,8
tick,0x7fffad96feb4,6505210,0,0x0,8
tick,0x7fffad96feb4,6506938,0,0x0,8
tick,0x7fffad96feb4,6508269,0,0x0,8
tick,0x7fffad96feb4,6509931,0,0x0,8
tick,0x7fffad96feb4,6511970,0,0x0,8
tick,0x7fffad96feb4,6513955,0,0x0,8
tick,0x7fffad96feb4,6515947,0,0x0,8
tick,0x7fffad96feb4,6518292,0,0x0,8
tick,0x7fffad96feb4,6520500,0,0x0,8
tick,0x7fffad96feb4,6522407,0,0x0,8
tick,0x7fffad96feb4,6524015,0,0x0,8
tick,0x7fffad96feb4,6525903,0,0x0,8
tick,0x7fffad96feb4,6528019,0,0x0,8
tick,0x7fffad96feb4,6532241,0,0x0,8
tick,0x7fffad96feb4,6537578,0,0x0,8
tick,0x7fffad96feb4,6537808,0,0x0,8
tick,0x7fffad96feb4,6538899,0,0x0,8
tick,0x7fffad96feb4,6540846,0,0x0,8
tick,0x7fffad96feb4,6542877,0,0x0,8
tick,0x7fffad96feb4,6544882,0,0x0,8
tick,0x7fffad96feb4,6546844,0,0x0,8
tick,0x7fffad96feb4,6548871,0,0x0,8
tick,0x7fffad96feb4,6550834,0,0x0,8
tick,0x7fffad96feb4,6552854,0,0x0,8
tick,0x7fffad96feb4,6554818,0,0x0,8
tick,0x7fffad96feb4,6556845,0,0x0,8
tick,0x7fffad96feb4,6558844,0,0x0,8
tick,0x7fffad96feb4,6560830,0,0x0,8
tick,0x7fffad96feb4,6562777,0,0x0,8
tick,0x7fffad96feb4,6564789,0,0x0,8
tick,0x7fffad96feb4,6567673,0,0x0,8
tick,0x7fffad96feb4,6569092,0,0x0,8
tick,0x7fffad96feb4,6570757,0,0x0,8
tick,0x7fffad96feb4,6572757,0,0x0,8
tick,0x7fffad96feb4,6574743,0,0x0,8
tick,0x7fffad96feb4,6576753,0,0x0,8
tick,0x7fffad96feb4,6578761,0,0x0,8
tick,0x7fffad96feb4,6580721,0,0x0,8
tick,0x7fffad96feb4,6582782,0,0x0,8
tick,0x7fffad96feb4,6584808,0,0x0,8
tick,0x7fffad96feb4,6586978,0,0x0,8
tick,0x7fffad96feb4,6588858,0,0x0,8
tick,0x7fffad96feb4,6591006,0,0x0,8
tick,0x7fffad96feb4,6592869,0,0x0,8
tick,0x7fffad96feb4,6595036,0,0x0,8
tick,0x7fffad96feb4,6596907,0,0x0,8
tick,0x7fffad96feb4,6598776,0,0x0,8
tick,0x7fffad96feb4,6601565,0,0x0,8
tick,0x7fffad96feb4,6602765,0,0x0,8
tick,0x7fffad96feb4,6604742,0,0x0,8
tick,0x7fffad96feb4,6606737,0,0x0,8
tick,0x7fffad96feb4,6608716,0,0x0,8
tick,0x7fffad96feb4,6610836,0,0x0,8
tick,0x7fffad96feb4,6612814,0,0x0,8
tick,0x7fffad96feb4,6614777,0,0x0,8
tick,0x7fffad96feb4,6618394,0,0x0,8
tick,0x7fffad96feb4,6619724,0,0x0,8
tick,0x7fffad96feb4,6621676,0,0x0,8
tick,0x7fffad96feb4,6623657,0,0x0,8
tick,0x7fffad96feb4,6627676,0,0x0,8
tick,0x7fffad96feb4,6630686,0,0x0,8
tick,0x7fffad96feb4,6632486,0,0x0,8
tick,0x7fffad96feb4,6634467,0,0x0,8
tick,0x7fffad96feb4,6636471,0,0x0,8
tick,0x7fffad96feb4,6637618,0,0x0,8
tick,0x7fffad96feb4,6639588,0,0x0,8
tick,0x7fffad96feb4,6641665,0,0x0,8
tick,0x7fffad96feb4,6643694,0,0x0,8
tick,0x7fffad96feb4,6645650,0,0x0,8
tick,0x7fffad96feb4,6647683,0,0x0,8
tick,0x7fffad96feb4,6649681,0,0x0,8
tick,0x7fffad96feb4,6651579,0,0x0,8
tick,0x7fffad96feb4,6653705,0,0x0,8
tick,0x7fffad96feb4,6655720,0,0x0,8
tick,0x7fffad96feb4,6657656,0,0x0,8
tick,0x7fffad96feb4,6659706,0,0x0,8
tick,0x7fffad96feb4,6661546,0,0x0,8
tick,0x7fffad96feb4,6663641,0,0x0,8
tick,0x7fffad96feb4,6665693,0,0x0,8
tick,0x7fffad96feb4,6667616,0,0x0,8
tick,0x7fffad96feb4,6669535,0,0x0,8
tick,0x7fffad96feb4,6671688,0,0x0,8
tick,0x7fffad96feb4,6673483,0,0x0,8
tick,0x7fffad96feb4,6675684,0,0x0,8
tick,0x7fffad96feb4,6677681,0,0x0,8
tick,0x7fffad96feb4,6679607,0,0x0,8
tick,0x7fffad96feb4,6681589,0,0x0,8
tick,0x7fffad96feb4,6684872,0,0x0,8
tick,0x7fffad96feb4,6685564,0,0x0,8
tick,0x7fffad96feb4,6687713,0,0x0,8
tick,0x7fffad96feb4,6689744,0,0x0,8
tick,0x7fffad96feb4,6691716,0,0x0,8
tick,0x7fffad96feb4,6693441,0,0x0,8
tick,0x7fffad96feb4,6694686,0,0x0,8
tick,0x7fffad96feb4,6696652,0,0x0,8
tick,0x7fffad96feb4,6698681,0,0x0,8
tick,0x7fffad96feb4,6701327,0,0x0,8
tick,0x7fffad96feb4,6702530,0,0x0,8
tick,0x7fffad96feb4,6704681,0,0x0,8
tick,0x7fffad96feb4,6706624,0,0x0,8
tick,0x7fffad96feb4,6708420,0,0x0,8
tick,0x7fffad96feb4,6710417,0,0x0,8
tick,0x7fffad96feb4,6711551,0,0x0,8
tick,0x7fffad96feb4,6713662,0,0x0,8
tick,0x7fffad96feb4,6715670,0,0x0,8
tick,0x7fffad96feb4,6717783,0,0x0,8
tick,0x7fffad96feb4,6719426,0,0x0,8
tick,0x7fffad96feb4,6721402,0,0x0,8
tick,0x7fffad96feb4,6723400,0,0x0,8
tick,0x7fffad96feb4,6725400,0,0x0,8
tick,0x7fffad96feb4,6727354,0,0x0,8
tick,0x7fffad96feb4,6729366,0,0x0,8
tick,0x7fffad96feb4,6731395,0,0x0,8
tick,0x7fffad96feb4,6733852,0,0x0,8
tick,0x7fffad96feb4,6735360,0,0x0,8
tick,0x7fffad96feb4,6737351,0,0x0,8
tick,0x7fffad96feb4,6739318,0,0x0,8
tick,0x7fffad96feb4,6741351,0,0x0,8
tick,0x7fffad96feb4,6743674,0,0x0,8
tick,0x7fffad96feb4,6745627,0,0x0,8
tick,0x7fffad96feb4,6747664,0,0x0,8
tick,0x7fffad96feb4,6749470,0,0x0,8
tick,0x7fffad96feb4,6751302,0,0x0,8
tick,0x7fffad96feb4,6753649,0,0x0,8
tick,0x7fffad96feb4,6755259,0,0x0,8
tick,0x7fffad96feb4,6757556,0,0x0,8
tick,0x7fffad96feb4,6759273,0,0x0,8
tick,0x7fffad96feb4,6760575,0,0x0,8
tick,0x7fffad96feb4,6762566,0,0x0,8
tick,0x7fffad96feb4,6764612,0,0x0,8
tick,0x7fffad96feb4,6767182,0,0x0,8
tick,0x7fffad96feb4,6768379,0,0x0,8
tick,0x7fffad96feb4,6769599,0,0x0,8
tick,0x7fffad96feb4,6771256,0,0x0,8
tick,0x7fffad96feb4,6772561,0,0x0,8
tick,0x7fffad96feb4,6774561,0,0x0,8
tick,0x7fffad96feb4,6776539,0,0x0,8
tick,0x7fffad96feb4,6778250,0,0x0,8
tick,0x7fffad96feb4,6780239,0,0x0,8
tick,0x7fffad96feb4,6781555,0,0x0,8
tick,0x7fffad96feb4,6784358,0,0x0,8
tick,0x7fffad96feb4,6785228,0,0x0,8
tick,0x7fffad96feb4,6787479,0,0x0,8
tick,0x7fffad96feb4,6789206,0,0x0,8
tick,0x7fffad96feb4,6790525,0,0x0,8
tick,0x7fffad96feb4,6792482,0,0x0,8
tick,0x7fffad96feb4,6794172,0,0x0,8
tick,0x7fffad96feb4,6796553,0,0x0,8
tick,0x7fffad96feb4,6798520,0,0x0,8
tick,0x7fffad96feb4,6800630,0,0x0,8
tick,0x7fffad96feb4,6802144,0,0x0,8
tick,0x7fffad96feb4,6803586,0,0x0,8
tick,0x7fffad96feb4,6805478,0,0x0,8
tick,0x7fffad96feb4,6807519,0,0x0,8
tick,0x7fffad96feb4,6809115,0,0x0,8
tick,0x7fffad96feb4,6811492,0,0x0,8
tick,0x7fffad96feb4,6813481,0,0x0,8
tick,0x7fffad96feb4,6815449,0,0x0,8
tick,0x7fffad96feb4,6817130,0,0x0,8
tick,0x7fffad96feb4,6819493,0,0x0,8
tick,0x7fffad96feb4,6821475,0,0x0,8
tick,0x7fffad96feb4,6823454,0,0x0,8
tick,0x7fffad96feb4,6825084,0,0x0,8
tick,0x7fffad96feb4,6826507,0,0x0,8
tick,0x7fffad96feb4,6828453,0,0x0,8
tick,0x7fffad96feb4,6830148,0,0x0,8
tick,0x7fffad96feb4,6832068,0,0x0,8
tick,0x7fffad96feb4,6834075,0,0x0,8
tick,0x7fffad96feb4,6835440,0,0x0,8
tick,0x7fffad96feb4,6837412,0,0x0,8
tick,0x7fffad96feb4,6839508,0,0x0,8
tick,0x7fffad96feb4,6841037,0,0x0,8
tick,0x7fffad96feb4,6842395,0,0x0,8
tick,0x7fffad96feb4,6844424,0,0x0,8
tick,0x7fffad96feb4,6846089,0,0x0,8
tick,0x7fffad96feb4,6848071,0,0x0,8
tick,0x7fffad96feb4,6850653,0,0x0,8
tick,0x7fffad96feb4,6852027,0,0x0,8
tick,0x7fffad96feb4,6853395,0,0x0,8
tick,0x7fffad96feb4,6855037,0,0x0,8
tick,0x7fffad96feb4,6857044,0,0x0,8
tick,0x7fffad96feb4,6858318,0,0x0,8
tick,0x7fffad96feb4,6860297,0,0x0,8
tick,0x7fffad96feb4,6862283,0,0x0,8
tick,0x7fffad96feb4,6863986,0,0x0,8
tick,0x7fffad96feb4,6865332,0,0x0,8
tick,0x7fffad96feb4,6867039,0,0x0,8
tick,0x7fffad96feb4,6869070,0,0x0,8
tick,0x7fffad96feb4,6871295,0,0x0,8
tick,0x7fffad96feb4,6872976,0,0x0,8
tick,0x7fffad96feb4,6875391,0,0x0,8
tick,0x7fffad96feb4,6877219,0,0x0,8
tick,0x7fffad96feb4,6878970,0,0x0,8
tick,0x7fffad96feb4,6880944,0,0x0,8
tick,0x7fffad96feb4,6883939,0,0x0,8
tick,0x7fffad96feb4,6884989,0,0x0,8
tick,0x7fffad96feb4,6887355,0,0x0,8
tick,0x7fffad96feb4,6888916,0,0x0,8
tick,0x7fffad96feb4,6890265,0,0x0,8
tick,0x7fffad96feb4,6892382,0,0x0,8
tick,0x7fffad96feb4,6893920,0,0x0,8
tick,0x7fffad96feb4,6896186,0,0x0,8
tick,0x7fffad96feb4,6898252,0,0x0,8
tick,0x7fffad96feb4,6900928,0,0x0,8
tick,0x7fffad96feb4,6901883,0,0x0,8
tick,0x7fffad96feb4,6904244,0,0x0,8
tick,0x7fffad96feb4,6905897,0,0x0,8
tick,0x7fffad96feb4,6907210,0,0x0,8
tick,0x7fffad96feb4,6908907,0,0x0,8
tick,0x7fffad96feb4,6911000,0,0x0,8
tick,0x7fffad96feb4,6912969,0,0x0,8
tick,0x7fffad96feb4,6914221,0,0x0,8
tick,0x7fffad96feb4,6915858,0,0x0,8
tick,0x7fffad96feb4,6917960,0,0x0,8
tick,0x7fffad96feb4,6919874,0,0x0,8
tick,0x7fffad96feb4,6922205,0,0x0,8
tick,0x7fffad96feb4,6923845,0,0x0,8
tick,0x7fffad96feb4,6925213,0,0x0,8
tick,0x7fffad96feb4,6926866,0,0x0,8
tick,0x7fffad96feb4,6928214,0,0x0,8
tick,0x7fffad96feb4,6929870,0,0x0,8
tick,0x7fffad96feb4,6931114,0,0x0,8
tick,0x7fffad96feb4,6932867,0,0x0,8
tick,0x7fffad96feb4,6934859,0,0x0,8
tick,0x7fffad96feb4,6937066,0,0x0,8
tick,0x7fffad96feb4,6938862,0,0x0,8
tick,0x7fffad96feb4,6940167,0,0x0,8
tick,0x7fffad96feb4,6941820,0,0x0,8
tick,0x7fffad96feb4,6943155,0,0x0,8
tick,0x7fffad96feb4,6944854,0,0x0,8
tick,0x7fffad96feb4,6947022,0,0x0,8
tick,0x7fffad96feb4,6949127,0,0x0,8
tick,0x7fffad96feb4,6951795,0,0x0,8
tick,0x7fffad96feb4,6952881,0,0x0,8
tick,0x7fffad96feb4,6954851,0,0x0,8
tick,0x7fffad96feb4,6956042,0,0x0,8
tick,0x7fffad96feb4,6958140,0,0x0,8
tick,0x7fffad96feb4,6959870,0,0x0,8
tick,0x7fffad96feb4,6961107,0,0x0,8
tick,0x7fffad96feb4,6962941,0,0x0,8
tick,0x7fffad96feb4,6964072,0,0x0,8
tick,0x7fffad96feb4,6966034,0,0x0,8
tick,0x7fffad96feb4,6968737,0,0x0,8
tick,0x7fffad96feb4,6969817,0,0x0,8
tick,0x7fffad96feb4,6971033,0,0x0,8
tick,0x7fffad96feb4,6972781,0,0x0,8
tick,0x7fffad96feb4,6974897,0,0x0,8
tick,0x7fffad96feb4,6976752,0,0x0,8
tick,0x7fffad96feb4,6979057,0,0x0,8
tick,0x7fffad96feb4,6980878,0,0x0,8
tick,0x7fffad96feb4,6984445,0,0x0,8
tick,0x7fffad96feb4,6985976,0,0x0,8
tick,0x7fffad96feb4,6987805,0,0x0,8
tick,0x7fffad96feb4,6990306,0,0x0,8
tick,0x7fffad96feb4,6991746,0,0x0,8
tick,0x7fffad96feb4,6993769,0,0x0,8
tick,0x7fffad96feb4,6994960,0,0x0,8
tick,0x7fffad96feb4,6996754,0,0x0,8
tick,0x7fffad96feb4,6998867,0,0x0,8
tick,0x7fffad96feb4,7001636,0,0x0,8
tick,0x7fffad96feb4,7002681,0,0x0,8
tick,0x7fffad96feb4,7005343,0,0x0,8
tick,0x7fffad96feb4,7006768,0,0x0,8
tick,0x7fffad96feb4,7008675,0,0x0,8
tick,0x7fffad96feb4,7010794,0,0x0,8
tick,0x7fffad96feb4,7012702,0,0x0,8
tick,0x7fffad96feb4,7014837,0,0x0,8
tick,0x7fffad96feb4,7018550,0,0x0,8
tick,0x7fffad96feb4,7020192,0,0x0,8
tick,0x7fffad96feb4,7020786,0,0x0,8
tick,0x7fffad96feb4,7022324,0,0x0,8
tick,0x7fffad96feb4,7034491,0,0x0,8
tick,0x7fffad96feb4,7035089,0,0x0,8
tick,0x7fffad96feb4,7037090,0,0x0,8
tick,0x7fffad96feb4,7038279,0,0x0,8
tick,0x7fffad96feb4,7039422,0,0x0,8
tick,0x7fffad96feb4,7041081,0,0x0,8
tick,0x7fffad96feb4,7042569,0,0x0,8
tick,0x7fffad96feb4,7044084,0,0x0,8
tick,0x7fffad96feb4,7046054,0,0x0,8
tick,0x7fffad96feb4,7048248,0,0x0,8
tick,0x7fffad96feb4,7050405,0,0x0,8
tick,0x7fffad96feb4,7052578,0,0x0,8
tick,0x7fffad96feb4,7054080,0,0x0,8
tick,0x7fffad96feb4,7055714,0,0x0,8
tick,0x7fffad96feb4,7057091,0,0x0,8
tick,0x7fffad96feb4,7059050,0,0x0,8
tick,0x7fffad96feb4,7060354,0,0x0,8
tick,0x7fffad96feb4,7062048,0,0x0,8
tick,0x7fffad96feb4,7063360,0,0x0,8
tick,0x7fffad96feb4,7065011,0,0x0,8
tick,0x7fffad96feb4,7067597,0,0x0,8
tick,0x7fffad96feb4,7069012,0,0x0,8
tick,0x7fffad96feb4,7071016,0,0x0,8
tick,0x7fffad96feb4,7073322,0,0x0,8
tick,0x7fffad96feb4,7075053,0,0x0,8
tick,0x7fffad96feb4,7077123,0,0x0,8
tick,0x7fffad96feb4,7079158,0,0x0,8
tick,0x7fffad96feb4,7081249,0,0x0,8
tick,0x7fffad96feb4,7083393,0,0x0,8
tick,0x7fffad96feb4,7084960,0,0x0,8
tick,0x7fffad96feb4,7086958,0,0x0,8
tick,0x7fffad96feb4,7088234,0,0x0,8
tick,0x7fffad96feb4,7089984,0,0x0,8
tick,0x7fffad96feb4,7091954,0,0x0,8
tick,0x7fffad96feb4,7093156,0,0x0,8
tick,0x7fffad96feb4,7094380,0,0x0,8
tick,0x7fffad96feb4,7096203,0,0x0,8
tick,0x7fffad96feb4,7097969,0,0x0,8
tick,0x7fffad96feb4,7100144,0,0x0,8
tick,0x7fffad96feb4,7101987,0,0x0,8
tick,0x7fffad96feb4,7103122,0,0x0,8
tick,0x7fffad96feb4,7105143,0,0x0,8
tick,0x7fffad96feb4,7106912,0,0x0,8
tick,0x7fffad96feb4,7108182,0,0x0,8
tick,0x7fffad96feb4,7109969,0,0x0,8
tick,0x7fffad96feb4,7111226,0,0x0,8
tick,0x7fffad96feb4,7112975,0,0x0,8
tick,0x7fffad96feb4,7114886,0,0x0,8
tick,0x7fffad96feb4,7116911,0,0x0,8
tick,0x7fffad96feb4,7118895,0,0x0,8
tick,0x7fffad96feb4,7120897,0,0x0,8
tick,0x7fffad96feb4,7122885,0,0x0,8
tick,0x7fffad96feb4,7124887,0,0x0,8
tick,0x7fffad96feb4,7126874,0,0x0,8
tick,0x7fffad96feb4,7128885,0,0x0,8
tick,0x7fffad96feb4,7130941,0,0x0,8
tick,0x7fffad96feb4,7132171,0,0x0,8
tick,0x7fffad96feb4,7133842,0,0x0,8
tick,0x7fffad96feb4,7135821,0,0x0,8
tick,0x7fffad96feb4,7138065,0,0x0,8
tick,0x7fffad96feb4,7139162,0,0x0,8
tick,0x7fffad96feb4,7141196,0,0x0,8
tick,0x7fffad96feb4,7142956,0,0x0,8
tick,0x7fffad96feb4,7144807,0,0x0,8
tick,0x7fffad96feb4,7145918,0,0x0,8
tick,0x7fffad96feb4,7148172,0,0x0,8
tick,0x7fffad96feb4,7150497,0,0x0,8
tick,0x7fffad96feb4,7151882,0,0x0,8
tick,0x7fffad96feb4,7154133,0,0x0,8
tick,0x7fffad96feb4,7155790,0,0x0,8
tick,0x7fffad96feb4,7157149,0,0x0,8
tick,0x7fffad96feb4,7159108,0,0x0,8
tick,0x7fffad96feb4,7160875,0,0x0,8
tick,0x7fffad96feb4,7162122,0,0x0,8
tick,0x7fffad96feb4,7163952,0,0x0,8
tick,0x7fffad96feb4,7165067,0,0x0,8
tick,0x7fffad96feb4,7166873,0,0x0,8
tick,0x7fffad96feb4,7168723,0,0x0,8
tick,0x7fffad96feb4,7170054,0,0x0,8
tick,0x7fffad96feb4,7171177,0,0x0,8
tick,0x7fffad96feb4,7172965,0,0x0,8
tick,0x7fffad96feb4,7174083,0,0x0,8
tick,0x7fffad96feb4,7176125,0,0x0,8
tick,0x7fffad96feb4,7178076,0,0x0,8
tick,0x7fffad96feb4,7180071,0,0x0,8
tick,0x7fffad96feb4,7181909,0,0x0,8
tick,0x7fffad96feb4,7184071,0,0x0,8
tick,0x7fffad96feb4,7186108,0,0x0,8
tick,0x7fffad96feb4,7187873,0,0x0,8
tick,0x7fffad96feb4,7188987,0,0x0,8
tick,0x7fffad96feb4,7190917,0,0x0,8
tick,0x7fffad96feb4,7192687,0,0x0,8
tick,0x7fffad96feb4,7193894,0,0x0,8
tick,0x7fffad96feb4,7196070,0,0x0,8
tick,0x7fffad96feb4,7198006,0,0x0,8
tick,0x7fffad96feb4,7201397,0,0x0,8
tick,0x7fffad96feb4,7202680,0,0x0,8
tick,0x7fffad96feb4,7204008,0,0x0,8
tick,0x7fffad96feb4,7205948,0,0x0,8
tick,0x7fffad96feb4,7207023,0,0x0,8
tick,0x7fffad96feb4,7208655,0,0x0,8
tick,0x7fffad96feb4,7209933,0,0x0,8
tick,0x7fffad96feb4,7211632,0,0x0,8
tick,0x7fffad96feb4,7213874,0,0x0,8
tick,0x7fffad96feb4,7215907,0,0x0,8
tick,0x7fffad96feb4,7217742,0,0x0,8
tick,0x7fffad96feb4,7218990,0,0x0,8
tick,0x7fffad96feb4,7220922,0,0x0,8
tick,0x7fffad96feb4,7222609,0,0x0,8
tick,0x7fffad96feb4,7223903,0,0x0,8
tick,0x7fffad96feb4,7225960,0,0x0,8
tick,0x7fffad96feb4,7227980,0,0x0,8
tick,0x7fffad96feb4,7229900,0,0x0,8
tick,0x7fffad96feb4,7231556,0,0x0,8
tick,0x7fffad96feb4,7233383,0,0x0,8
tick,0x7fffad96feb4,7234601,0,0x0,8
tick,0x7fffad96feb4,7236797,0,0x0,8
tick,0x7fffad96feb4,7238555,0,0x0,8
tick,0x7fffad96feb4,7239780,0,0x0,8
tick,0x7fffad96feb4,7241782,0,0x0,8
tick,0x7fffad96feb4,7243776,0,0x0,8
tick,0x7fffad96feb4,7245793,0,0x0,8
tick,0x7fffad96feb4,7247535,0,0x0,8
tick,0x7fffad96feb4,7249978,0,0x0,8
tick,0x7fffad96feb4,7251791,0,0x0,8
tick,0x7fffad96feb4,7253773,0,0x0,8
tick,0x7fffad96feb4,7255735,0,0x0,8
tick,0x7fffad96feb4,7257710,0,0x0,8
tick,0x7fffad96feb4,7259733,0,0x0,8
tick,0x7fffad96feb4,7261744,0,0x0,8
tick,0x7fffad96feb4,7263739,0,0x0,8
tick,0x7fffad96feb4,7265746,0,0x0,8
tick,0x7fffad96feb4,7267483,0,0x0,8
tick,0x7fffad96feb4,7268822,0,0x0,8
tick,0x7fffad96feb4,7270455,0,0x0,8
tick,0x7fffad96feb4,7271872,0,0x0,8
tick,0x7fffad96feb4,7273707,0,0x0,8
tick,0x7fffad96feb4,7274825,0,0x0,8
tick,0x7fffad96feb4,7276668,0,0x0,8
tick,0x7fffad96feb4,7278495,0,0x0,8
tick,0x7fffad96feb4,7279696,0,0x0,8
tick,0x7fffad96feb4,7280794,0,0x0,8
tick,0x7fffad96feb4,7283961,0,0x0,8
tick,0x7fffad96feb4,7285781,0,0x0,8
tick,0x7fffad96feb4,7287415,0,0x0,8
tick,0x7fffad96feb4,7288787,0,0x0,8
tick,0x7fffad96feb4,7290726,0,0x0,8
tick,0x7fffad96feb4,7292422,0,0x0,8
tick,0x7fffad96feb4,7293796,0,0x0,8
tick,0x7fffad96feb4,7295394,0,0x0,8
tick,0x7fffad96feb4,7297683,0,0x0,8
tick,0x7fffad96feb4,7298856,0,0x0,8
tick,0x7fffad96feb4,7300417,0,0x0,8
tick,0x7fffad96feb4,7302457,0,0x0,8
tick,0x7fffad96feb4,7304808,0,0x0,8
tick,0x7fffad96feb4,7306749,0,0x0,8
tick,0x7fffad96feb4,7308682,0,0x0,8
tick,0x7fffad96feb4,7310692,0,0x0,8
tick,0x7fffad96feb4,7311894,0,0x0,8
tick,0x7fffad96feb4,7313854,0,0x0,8
tick,0x7fffad96feb4,7315343,0,0x0,8
tick,0x7fffad96feb4,7317372,0,0x0,8
tick,0x7fffad96feb4,7319540,0,0x0,8
tick,0x7fffad96feb4,7320639,0,0x0,8
tick,0x7fffad96feb4,7322708,0,0x0,8
tick,0x7fffad96feb4,7324655,0,0x0,8
tick,0x7fffad96feb4,7325911,0,0x0,8
tick,0x7fffad96feb4,7328013,0,0x0,8
tick,0x7fffad96feb4,7329961,0,0x0,8
tick,0x7fffad96feb4,7332173,0,0x0,8
tick,0x7fffad96feb4,7333952,0,0x0,8
tick,0x7fffad96feb4,7335646,0,0x0,8
tick,0x7fffad96feb4,7337751,0,0x0,8
tick,0x7fffad96feb4,7338962,0,0x0,8
tick,0x7fffad96feb4,7340911,0,0x0,8
tick,0x7fffad96feb4,7342011,0,0x0,8
tick,0x7fffad96feb4,7343889,0,0x0,8
tick,0x7fffad96feb4,7345904,0,0x0,8
tick,0x7fffad96feb4,7347935,0,0x0,8
tick,0x7fffad96feb4,7349896,0,0x0,8
tick,0x7fffad96feb4,7351571,0,0x0,8
tick,0x7fffad96feb4,7353596,0,0x0,8
tick,0x7fffad96feb4,7355032,0,0x0,8
tick,0x7fffad96feb4,7356583,0,0x0,8
tick,0x7fffad96feb4,7357922,0,0x0,8
tick,0x7fffad96feb4,7359946,0,0x0,8
tick,0x7fffad96feb4,7361566,0,0x0,8
tick,0x7fffad96feb4,7363601,0,0x0,8
tick,0x7fffad96feb4,7366597,0,0x0,8
tick,0x7fffad96feb4,7368564,0,0x0,8
tick,0x7fffad96feb4,7370601,0,0x0,8
tick,0x7fffad96feb4,7372845,0,0x0,8
tick,0x7fffad96feb4,7374511,0,0x0,8
tick,0x7fffad96feb4,7375897,0,0x0,8
tick,0x7fffad96feb4,7377979,0,0x0,8
tick,0x7fffad96feb4,7379862,0,0x0,8
tick,0x7fffad96feb4,7381857,0,0x0,8
tick,0x7fffad96feb4,7383762,0,0x0,8
tick,0x7fffad96feb4,7385526,0,0x0,8
tick,0x7fffad96feb4,7387741,0,0x0,8
tick,0x7fffad96feb4,7389458,0,0x0,8
tick,0x7fffad96feb4,7390866,0,0x0,8
tick,0x7fffad96feb4,7392917,0,0x0,8
tick,0x7fffad96feb4,7394849,0,0x0,8
tick,0x7fffad96feb4,7396510,0,0x0,8
tick,0x7fffad96feb4,7397794,0,0x0,8
tick,0x7fffad96feb4,7400318,0,0x0,8
tick,0x7fffad96feb4,7401500,0,0x0,8
tick,0x7fffad96feb4,7403439,0,0x0,8
tick,0x7fffad96feb4,7405964,0,0x0,8
tick,0x7fffad96feb4,7407757,0,0x0,8
tick,0x7fffad96feb4,7409801,0,0x0,8
tick,0x7fffad96feb4,7411762,0,0x0,8
tick,0x7fffad96feb4,7413746,0,0x0,8
tick,0x7fffad96feb4,7415388,0,0x0,8
tick,0x7fffad96feb4,7417559,0,0x0,8
tick,0x7fffad96feb4,7419416,0,0x0,8
tick,0x7fffad96feb4,7421390,0,0x0,8
tick,0x7fffad96feb4,7423780,0,0x0,8
tick,0x7fffad96feb4,7425719,0,0x0,8
tick,0x7fffad96feb4,7427749,0,0x0,8
tick,0x7fffad96feb4,7429721,0,0x0,8
tick,0x7fffad96feb4,7431385,0,0x0,8
tick,0x7fffad96feb4,7433388,0,0x0,8
tick,0x7fffad96feb4,7435383,0,0x0,8
tick,0x7fffad96feb4,7437349,0,0x0,8
tick,0x7fffad96feb4,7439468,0,0x0,8
tick,0x7fffad96feb4,7440685,0,0x0,8
tick,0x7fffad96feb4,7442681,0,0x0,8
tick,0x7fffad96feb4,7444686,0,0x0,8
tick,0x7fffad96feb4,7446706,0,0x0,8
tick,0x7fffad96feb4,7448721,0,0x0,8
tick,0x7fffad96feb4,7450389,0,0x0,8
tick,0x7fffad96feb4,7452303,0,0x0,8
tick,0x7fffad96feb4,7454338,0,0x0,8
tick,0x7fffad96feb4,7455566,0,0x0,8
tick,0x7fffad96feb4,7457659,0,0x0,8
tick,0x7fffad96feb4,7459667,0,0x0,8
tick,0x7fffad96feb4,7461294,0,0x0,8
tick,0x7fffad96feb4,7462549,0,0x0,8
tick,0x7fffad96feb4,7463762,0,0x0,8
tick,0x7fffad96feb4,7464900,0,0x0,8
tick,0x7fffad96feb4,7466721,0,0x0,8
tick,0x7fffad96feb4,7468529,0,0x0,8
tick,0x7fffad96feb4,7470837,0,0x0,8
tick,0x7fffad96feb4,7472097,0,0x0,8
tick,0x7fffad96feb4,7474189,0,0x0,8
tick,0x7fffad96feb4,7475740,0,0x0,8
tick,0x7fffad96feb4,7476857,0,0x0,8
tick,0x7fffad96feb4,7478840,0,0x0,8
tick,0x7fffad96feb4,7480808,0,0x0,8
tick,0x7fffad96feb4,7483001,0,0x0,8
tick,0x7fffad96feb4,7484825,0,0x0,8
tick,0x7fffad96feb4,7486831,0,0x0,8
tick,0x7fffad96feb4,7488905,0,0x0,8
tick,0x7fffad96feb4,7490845,0,0x0,8
tick,0x7fffad96feb4,7491879,0,0x0,8
tick,0x7fffad96feb4,7493812,0,0x0,8
tick,0x7fffad96feb4,7495183,0,0x0,8
tick,0x7fffad96feb4,7496796,0,0x0,8
tick,0x7fffad96feb4,7498121,0,0x0,8
tick,0x7fffad96feb4,7500040,0,0x0,8
tick,0x7fffad96feb4,7502563,0,0x0,8
tick,0x7fffad96feb4,7503792,0,0x0,8
tick,0x7fffad96feb4,7505927,0,0x0,8
tick,0x7fffad96feb4,7508194,0,0x0,8
tick,0x7fffad96feb4,7510060,0,0x0,8
tick,0x7fffad96feb4,7511918,0,0x0,8
tick,0x7fffad96feb4,7513715,0,0x0,8
tick,0x7fffad96feb4,7514773,0,0x0,8
tick,0x7fffad96feb4,7517351,0,0x0,8
tick,0x7fffad96feb4,7518062,0,0x0,8
tick,0x7fffad96feb4,7519720,0,0x0,8
tick,0x7fffad96feb4,7521937,0,0x0,8
tick,0x7fffad96feb4,7523726,0,0x0,8
tick,0x7fffad96feb4,7525948,0,0x0,8
tick,0x7fffad96feb4,7527997,0,0x0,8
tick,0x7fffad96feb4,7529890,0,0x0,8
tick,0x7fffad96feb4,7530982,0,0x0,8
tick,0x7fffad96feb4,7533545,0,0x0,8
tick,0x7fffad96feb4,7534932,0,0x0,8
tick,0x7fffad96feb4,7536677,0,0x0,8
tick,0x7fffad96feb4,7538848,0,0x0,8
tick,0x7fffad96feb4,7541026,0,0x0,8
tick,0x7fffad96feb4,7543060,0,0x0,8
tick,0x7fffad96feb4,7544669,0,0x0,8
tick,0x7fffad96feb4,7546000,0,0x0,8
tick,0x7fffad96feb4,7547934,0,0x0,8
tick,0x7fffad96feb4,7550146,0,0x0,8
tick,0x7fffad96feb4,7551685,0,0x0,8
tick,0x7fffad96feb4,7553649,0,0x0,8
tick,0x7fffad96feb4,7555647,0,0x0,8
tick,0x7fffad96feb4,7557934,0,0x0,8
tick,0x7fffad96feb4,7559692,0,0x0,8
tick,0x7fffad96feb4,7560906,0,0x0,8
tick,0x7fffad96feb4,7562734,0,0x0,8
tick,0x7fffad96feb4,7563838,0,0x0,8
tick,0x7fffad96feb4,7564956,0,0x0,8
tick,0x7fffad96feb4,7566878,0,0x0,8
tick,0x7fffad96feb4,7568609,0,0x0,8
tick,0x7fffad96feb4,7570616,0,0x0,8
tick,0x7fffad96feb4,7572129,0,0x0,8
tick,0x7fffad96feb4,7573924,0,0x0,8
tick,0x7fffad96feb4,7575566,0,0x0,8
tick,0x7fffad96feb4,7576979,0,0x0,8
tick,0x7fffad96feb4,7578948,0,0x0,8
tick,0x7fffad96feb4,7580932,0,0x0,8
tick,0x7fffad96feb4,7583764,0,0x0,8
tick,0x7fffad96feb4,7585526,0,0x0,8
tick,0x7fffad96feb4,7587531,0,0x0,8
tick,0x7fffad96feb4,7588909,0,0x0,8
tick,0x7fffad96feb4,7590547,0,0x0,8
tick,0x7fffad96feb4,7591856,0,0x0,8
tick,0x7fffad96feb4,7593847,0,0x0,8
tick,0x7fffad96feb4,7595517,0,0x0,8
tick,0x7fffad96feb4,7597937,0,0x0,8
tick,0x7fffad96feb4,7599656,0,0x0,8
tick,0x7fffad96feb4,7601536,0,0x0,8
tick,0x7fffad96feb4,7603547,0,0x0,8
tick,0x7fffad96feb4,7605773,0,0x0,8
tick,0x7fffad96feb4,7607502,0,0x0,8
tick,0x7fffad96feb4,7608732,0,0x0,8
tick,0x7fffad96feb4,7609859,0,0x0,8
tick,0x7fffad96feb4,7611884,0,0x0,8
tick,0x7fffad96feb4,7613887,0,0x0,8
tick,0x7fffad96feb4,7615450,0,0x0,8
tick,0x7fffad96feb4,7617544,0,0x0,8
tick,0x7fffad96feb4,7619643,0,0x0,8
tick,0x7fffad96feb4,7620705,0,0x0,8
tick,0x7fffad96feb4,7621868,0,0x0,8
tick,0x7fffad96feb4,7623437,0,0x0,8
tick,0x7fffad96feb4,7625500,0,0x0,8
tick,0x7fffad96feb4,7627765,0,0x0,8
tick,0x7fffad96feb4,7629546,0,0x0,8
tick,0x7fffad96feb4,7631790,0,0x0,8
tick,0x7fffad96feb4,7633833,0,0x0,8
tick,0x7fffad96feb4,7635780,0,0x0,8
tick,0x7fffad96feb4,7637743,0,0x0,8
tick,0x7fffad96feb4,7639749,0,0x0,8
tick,0x7fffad96feb4,7641747,0,0x0,8
tick,0x7fffad96feb4,7643794,0,0x0,8
tick,0x7fffad96feb4,7645731,0,0x0,8
tick,0x7fffad96feb4,7647947,0,0x0,8
tick,0x7fffad96feb4,7649818,0,0x0,8
tick,0x7fffad96feb4,7651730,0,0x0,8
tick,0x7fffad96feb4,7653969,0,0x0,8
tick,0x7fffad96feb4,7655791,0,0x0,8
tick,0x7fffad96feb4,7656969,0,0x0,8
tick,0x7fffad96feb4,7658780,0,0x0,8
tick,0x7fffad96feb4,7660689,0,0x0,8
tick,0x7fffad96feb4,7661793,0,0x0,8
tick,0x7fffad96feb4,7662910,0,0x0,8
tick,0x7fffad96feb4,7664187,0,0x0,8
tick,0x7fffad96feb4,7666385,0,0x0,8
tick,0x7fffad96feb4,7667940,0,0x0,8
tick,0x7fffad96feb4,7670162,0,0x0,8
tick,0x7fffad96feb4,7672175,0,0x0,8
tick,0x7fffad96feb4,7673257,0,0x0,8
tick,0x7fffad96feb4,7675287,0,0x0,8
tick,0x7fffad96feb4,7676948,0,0x0,8
tick,0x7fffad96feb4,7678078,0,0x0,8
tick,0x7fffad96feb4,7679293,0,0x0,8
tick,0x7fffad96feb4,7681255,0,0x0,8
tick,0x7fffad96feb4,7683236,0,0x0,8
tick,0x7fffad96feb4,7684908,0,0x0,8
tick,0x7fffad96feb4,7686902,0,0x0,8
tick,0x7fffad96feb4,7688282,0,0x0,8
tick,0x7fffad96feb4,7690210,0,0x0,8
tick,0x7fffad96feb4,7691967,0,0x0,8
tick,0x7fffad96feb4,7694164,0,0x0,8
tick,0x7fffad96feb4,7696225,0,0x0,8
tick,0x7fffad96feb4,7697999,0,0x0,8
tick,0x7fffad96feb4,7700542,0,0x0,8
tick,0x7fffad96feb4,7701852,0,0x0,8
tick,0x7fffad96feb4,7703172,0,0x0,8
tick,0x7fffad96feb4,7704869,0,0x0,8
tick,0x7fffad96feb4,7706923,0,0x0,8
tick,0x7fffad96feb4,7708832,0,0x0,8
tick,0x7fffad96feb4,7709956,0,0x0,8
tick,0x7fffad96feb4,7711160,0,0x0,8
tick,0x7fffad96feb4,7712915,0,0x0,8
tick,0x7fffad96feb4,7714173,0,0x0,8
tick,0x7fffad96feb4,7716177,0,0x0,8
tick,0x7fffad96feb4,7717849,0,0x0,8
tick,0x7fffad96feb4,7719968,0,0x0,8
tick,0x7fffad96feb4,7721119,0,0x0,8
tick,0x7fffad96feb4,7722855,0,0x0,8
tick,0x7fffad96feb4,7724134,0,0x0,8
tick,0x7fffad96feb4,7726178,0,0x0,8
tick,0x7fffad96feb4,7727991,0,0x0,8
tick,0x7fffad96feb4,7729120,0,0x0,8
tick,0x7fffad96feb4,7730864,0,0x0,8
tick,0x7fffad96feb4,7732084,0,0x0,8
tick,0x7fffad96feb4,7734037,0,0x0,8
tick,0x7fffad96feb4,7735796,0,0x0,8
tick,0x7fffad96feb4,7737802,0,0x0,8
tick,0x7fffad96feb4,7739900,0,0x0,8
tick,0x7fffad96feb4,7741728,0,0x0,8
tick,0x7fffad96feb4,7742874,0,0x0,8
tick,0x7fffad96feb4,7744115,0,0x0,8
tick,0x7fffad96feb4,7746179,0,0x0,8
tick,0x7fffad96feb4,7747729,0,0x0,8
tick,0x7fffad96feb4,7748814,0,0x0,8
tick,0x7fffad96feb4,7751075,0,0x0,8
tick,0x7fffad96feb4,7752734,0,0x0,8
tick,0x7fffad96feb4,7753793,0,0x0,8
tick,0x7fffad96feb4,7755956,0,0x0,8
tick,0x7fffad96feb4,7757747,0,0x0,8
tick,0x7fffad96feb4,7758943,0,0x0,8
tick,0x7fffad96feb4,7760746,0,0x0,8
tick,0x7fffad96feb4,7762669,0,0x0,8
tick,0x7fffad96feb4,7763738,0,0x0,8
tick,0x7fffad96feb4,7766339,0,0x0,8
tick,0x7fffad96feb4,7767678,0,0x0,8
tick,0x7fffad96feb4,7769752,0,0x0,8
tick,0x7fffad96feb4,7771921,0,0x0,8
tick,0x7fffad96feb4,7774002,0,0x0,8
tick,0x7fffad96feb4,7775750,0,0x0,8
tick,0x7fffad96feb4,7776904,0,0x0,8
tick,0x7fffad96feb4,7778628,0,0x0,8
tick,0x7fffad96feb4,7779851,0,0x0,8
tick,0x7fffad96feb4,7781731,0,0x0,8
tick,0x7fffad96feb4,7783635,0,0x0,8
tick,0x7fffad96feb4,7784714,0,0x0,8
tick,0x7fffad96feb4,7786611,0,0x0,8
tick,0x7fffad96feb4,7787691,0,0x0,8
tick,0x7fffad96feb4,7788794,0,0x0,8
tick,0x7fffad96feb4,7790740,0,0x0,8
tick,0x7fffad96feb4,7792771,0,0x0,8
tick,0x7fffad96feb4,7794597,0,0x0,8
tick,0x7fffad96feb4,7795719,0,0x0,8
tick,0x7fffad96feb4,7797737,0,0x0,8
tick,0x7fffad96feb4,7799928,0,0x0,8
tick,0x7fffad96feb4,7801749,0,0x0,8
tick,0x7fffad96feb4,7803572,0,0x0,8
tick,0x7fffad96feb4,7804727,0,0x0,8
tick,0x7fffad96feb4,7806759,0,0x0,8
tick,0x7fffad96feb4,7808602,0,0x0,8
tick,0x7fffad96feb4,7810598,0,0x0,8
tick,0x7fffad96feb4,7812574,0,0x0,8
tick,0x7fffad96feb4,7814667,0,0x0,8
tick,0x7fffad96feb4,7818743,0,0x0,8
tick,0x7fffad96feb4,7820774,0,0x0,8
tick,0x7fffad96feb4,7822887,0,0x0,8
tick,0x7fffad96feb4,7824606,0,0x0,8
tick,0x7fffad96feb4,7826797,0,0x0,8
tick,0x7fffad96feb4,7828905,0,0x0,8
tick,0x7fffad96feb4,7830834,0,0x0,8
tick,0x7fffad96feb4,7833771,0,0x0,8
tick,0x7fffad96feb4,7835170,0,0x0,8
tick,0x7fffad96feb4,7836643,0,0x0,8
tick,0x7fffad96feb4,7838828,0,0x0,8
tick,0x7fffad96feb4,7840560,0,0x0,8
tick,0x7fffad96feb4,7842581,0,0x0,8
tick,0x7fffad96feb4,7843731,0,0x0,8
tick,0x7fffad96feb4,7845666,0,0x0,8
tick,0x7fffad96feb4,7847603,0,0x0,8
tick,0x7fffad96feb4,7851521,0,0x0,8
tick,0x7fffad96feb4,7852507,0,0x0,8
tick,0x7fffad96feb4,7855168,0,0x0,8
tick,0x7fffad96feb4,7856744,0,0x0,8
tick,0x7fffad96feb4,7858645,0,0x0,8
tick,0x7fffad96feb4,7860712,0,0x0,8
tick,0x7fffad96feb4,7862713,0,0x0,8
tick,0x7fffad96feb4,7864503,0,0x0,8
tick,0x7fffad96feb4,7866801,0,0x0,8
tick,0x7fffad96feb4,7868484,0,0x0,8
tick,0x7fffad96feb4,7870466,0,0x0,8
tick,0x7fffad96feb4,7872493,0,0x0,8
tick,0x7fffad96feb4,7874591,0,0x0,8
tick,0x7fffad96feb4,7875700,0,0x0,8
tick,0x7fffad96feb4,7877559,0,0x0,8
tick,0x7fffad96feb4,7879556,0,0x0,8
tick,0x7fffad96feb4,7881469,0,0x0,8
tick,0x7fffad96feb4,7888859,0,0x0,8
tick,0x7fffad96feb4,7889904,0,0x0,8
tick,0x7fffad96feb4,7891403,0,0x0,8
tick,0x7fffad96feb4,7893434,0,0x0,8
tick,0x7fffad96feb4,7895448,0,0x0,8
tick,0x7fffad96feb4,7897501,0,0x0,8
tick,0x7fffad96feb4,7900159,0,0x0,8
tick,0x7fffad96feb4,7904586,0,0x0,8
tick,0x7fffad96feb4,7906388,0,0x0,8
tick,0x7fffad96feb4,7908391,0,0x0,8
tick,0x7fffad96feb4,7910513,0,0x0,8
tick,0x7fffad96feb4,7912350,0,0x0,8
tick,0x7fffad96feb4,7914319,0,0x0,8
tick,0x7fffad96feb4,7916855,0,0x0,8
tick,0x7fffad96feb4,7918486,0,0x0,8
tick,0x7fffad96feb4,7920307,0,0x0,8
tick,0x7fffad96feb4,7921487,0,0x0,8
tick,0x7fffad96feb4,7923490,0,0x0,8
tick,0x7fffad96feb4,7925797,0,0x0,8
tick,0x7fffad96feb4,7927263,0,0x0,8
tick,0x7fffad96feb4,7928511,0,0x0,8
tick,0x7fffad96feb4,7930512,0,0x0,8
tick,0x7fffad96feb4,7932495,0,0x0,8
tick,0x7fffad96feb4,7934315,0,0x0,8
tick,0x7fffad96feb4,7936476,0,0x0,8
tick,0x7fffad96feb4,7938440,0,0x0,8
tick,0x7fffad96feb4,7940440,0,0x0,8
tick,0x7fffad96feb4,7942460,0,0x0,8
tick,0x7fffad96feb4,7944429,0,0x0,8
tick,0x7fffad96feb4,7946434,0,0x0,8
tick,0x7fffad96feb4,7948404,0,0x0,8
tick,0x7fffad96feb4,7950882,0,0x0,8
tick,0x7fffad96feb4,7952401,0,0x0,8
tick,0x7fffad96feb4,7954399,0,0x0,8
tick,0x7fffad96feb4,7956213,0,0x0,8
tick,0x7fffad96feb4,7957296,0,0x0,8
tick,0x7fffad96feb4,7959164,0,0x0,8
tick,0x7fffad96feb4,7960367,0,0x0,8
tick,0x7fffad96feb4,7962157,0,0x0,8
tick,0x7fffad96feb4,7963397,0,0x0,8
tick,0x7fffad96feb4,7966172,0,0x0,8
tick,0x7fffad96feb4,7968281,0,0x0,8
tick,0x7fffad96feb4,7969392,0,0x0,8
tick,0x7fffad96feb4,7971180,0,0x0,8
tick,0x7fffad96feb4,7973166,0,0x0,8
tick,0x7fffad96feb4,7974361,0,0x0,8
tick,0x7fffad96feb4,7976335,0,0x0,8
tick,0x7fffad96feb4,7978335,0,0x0,8
tick,0x7fffad96feb4,7979456,0,0x0,8
tick,0x7fffad96feb4,7981435,0,0x0,8
tick,0x7fffad96feb4,7984067,0,0x0,8
tick,0x7fffad96feb4,7985125,0,0x0,8
tick,0x7fffad96feb4,7987405,0,0x0,8
tick,0x7fffad96feb4,7989166,0,0x0,8
tick,0x7fffad96feb4,7990234,0,0x0,8
tick,0x7fffad96feb4,7992066,0,0x0,8
tick,0x7fffad96feb4,7993210,0,0x0,8
tick,0x7fffad96feb4,7995183,0,0x0,8
tick,0x7fffad96feb4,7997262,0,0x0,8
tick,0x7fffad96feb4,7999697,0,0x0,8
tick,0x7fffad96feb4,8001144,0,0x0,8
tick,0x7fffad96feb4,8003088,0,0x0,8
tick,0x7fffad96feb4,8004335,0,0x0,8
tick,0x7fffad96feb4,8006353,0,0x0,8
tick,0x7fffad96feb4,8008337,0,0x0,8
tick,0x7fffad96feb4,8010282,0,0x0,8
tick,0x7fffad96feb4,8012066,0,0x0,8
tick,0x7fffad96feb4,8014193,0,0x0,8
tick,0x7fffad96feb4,8016344,0,0x0,8
tick,0x7fffad96feb4,8018060,0,0x0,8
tick,0x7fffad96feb4,8019318,0,0x0,8
tick,0x7fffad96feb4,8021059,0,0x0,8
tick,0x7fffad96feb4,8023160,0,0x0,8
tick,0x7fffad96feb4,8024283,0,0x0,8
tick,0x7fffad96feb4,8026314,0,0x0,8
tick,0x7fffad96feb4,8028251,0,0x0,8
tick,0x7fffad96feb4,8029319,0,0x0,8
tick,0x7fffad96feb4,8030487,0,0x0,8
tick,0x7fffad96feb4,8031706,0,0x0,8
tick,0x7fffad96feb4,8033567,0,0x0,8
tick,0x7fffad96feb4,8035848,0,0x0,8
tick,0x7fffad96feb4,8037542,0,0x0,8
tick,0x7fffad96feb4,8039674,0,0x0,8
tick,0x7fffad96feb4,8041857,0,0x0,8
tick,0x7fffad96feb4,8043789,0,0x0,8
tick,0x7fffad96feb4,8045482,0,0x0,8
tick,0x7fffad96feb4,8047687,0,0x0,8
tick,0x7fffad96feb4,8049477,0,0x0,8
tick,0x7fffad96feb4,8051717,0,0x0,8
tick,0x7fffad96feb4,8053704,0,0x0,8
tick,0x7fffad96feb4,8055910,0,0x0,8
tick,0x7fffad96feb4,8057828,0,0x0,8
tick,0x7fffad96feb4,8059391,0,0x0,8
tick,0x7fffad96feb4,8060658,0,0x0,8
tick,0x7fffad96feb4,8062650,0,0x0,8
tick,0x7fffad96feb4,8064630,0,0x0,8
tick,0x7fffad96feb4,8067231,0,0x0,8
tick,0x7fffad96feb4,8068380,0,0x0,8
tick,0x7fffad96feb4,8069796,0,0x0,8
tick,0x7fffad96feb4,8071675,0,0x0,8
tick,0x7fffad96feb4,8073713,0,0x0,8
tick,0x7fffad96feb4,8075378,0,0x0,8
tick,0x7fffad96feb4,8077664,0,0x0,8
tick,0x7fffad96feb4,8079627,0,0x0,8
tick,0x7fffad96feb4,8081693,0,0x0,8
tick,0x7fffad96feb4,8083650,0,0x0,8
tick,0x7fffad96feb4,8085631,0,0x0,8
tick,0x7fffad96feb4,8087684,0,0x0,8
tick,0x7fffad96feb4,8089615,0,0x0,8
tick,0x7fffad96feb4,8091380,0,0x0,8
tick,0x7fffad96feb4,8093727,0,0x0,8
tick,0x7fffad96feb4,8095620,0,0x0,8
tick,0x7fffad96feb4,8097660,0,0x0,8
tick,0x7fffad96feb4,8099436,0,0x0,8
tick,0x7fffad96feb4,8101748,0,0x0,8
tick,0x7fffad96feb4,8103372,0,0x0,8
tick,0x7fffad96feb4,8104652,0,0x0,8
tick,0x7fffad96feb4,8106401,0,0x0,8
tick,0x7fffad96feb4,8107502,0,0x0,8
tick,0x7fffad96feb4,8108600,0,0x0,8
tick,0x7fffad96feb4,8110568,0,0x0,8
tick,0x7fffad96feb4,8112626,0,0x0,8
tick,0x7fffad96feb4,8114547,0,0x0,8
tick,0x7fffad96feb4,8116280,0,0x0,8
tick,0x7fffad96feb4,8118258,0,0x0,8
tick,0x7fffad96feb4,8119586,0,0x0,8
tick,0x7fffad96feb4,8121270,0,0x0,8
tick,0x7fffad96feb4,8122634,0,0x0,8
tick,0x7fffad96feb4,8124537,0,0x0,8
tick,0x7fffad96feb4,8126283,0,0x0,8
tick,0x7fffad96feb4,8128487,0,0x0,8
tick,0x7fffad96feb4,8130527,0,0x0,8
tick,0x7fffad96feb4,8133109,0,0x0,8
tick,0x7fffad96feb4,8134214,0,0x0,8
tick,0x7fffad96feb4,8135563,0,0x0,8
tick,0x7fffad96feb4,8137271,0,0x0,8
tick,0x7fffad96feb4,8138472,0,0x0,8
tick,0x7fffad96feb4,8140498,0,0x0,8
tick,0x7fffad96feb4,8142246,0,0x0,8
tick,0x7fffad96feb4,8143550,0,0x0,8
tick,0x7fffad96feb4,8145413,0,0x0,8
tick,0x7fffad96feb4,8147412,0,0x0,8
tick,0x7fffad96feb4,8149943,0,0x0,8
tick,0x7fffad96feb4,8151245,0,0x0,8
tick,0x7fffad96feb4,8153346,0,0x0,8
tick,0x7fffad96feb4,8155334,0,0x0,8
tick,0x7fffad96feb4,8157326,0,0x0,8
tick,0x7fffad96feb4,8159399,0,0x0,8
tick,0x7fffad96feb4,8161397,0,0x0,8
tick,0x7fffad96feb4,8163536,0,0x0,8
tick,0x7fffad96feb4,8166679,0,0x0,8
tick,0x7fffad96feb4,8168171,0,0x0,8
tick,0x7fffad96feb4,8169352,0,0x0,8
tick,0x7fffad96feb4,8171720,0,0x0,8
tick,0x7fffad96feb4,8173159,0,0x0,8
tick,0x7fffad96feb4,8174425,0,0x0,8
tick,0x7fffad96feb4,8176375,0,0x0,8
tick,0x7fffad96feb4,8178365,0,0x0,8
tick,0x7fffad96feb4,8180438,0,0x0,8
tick,0x7fffad96feb4,8182736,0,0x0,8
tick,0x7fffad96feb4,8184161,0,0x0,8
tick,0x7fffad96feb4,8186345,0,0x0,8
tick,0x7fffad96feb4,8188312,0,0x0,8
tick,0x7fffad96feb4,8190268,0,0x0,8
tick,0x7fffad96feb4,8192322,0,0x0,8
tick,0x7fffad96feb4,8194399,0,0x0,8
tick,0x7fffad96feb4,8196223,0,0x0,8
tick,0x7fffad96feb4,8198109,0,0x0,8
tick,0x7fffad96feb4,8200087,0,0x0,8
tick,0x7fffad96feb4,8202161,0,0x0,8
tick,0x7fffad96feb4,8204327,0,0x0,8
tick,0x7fffad96feb4,8206340,0,0x0,8
tick,0x7fffad96feb4,8208257,0,0x0,8
tick,0x7fffad96feb4,8210397,0,0x0,8
tick,0x7fffad96feb4,8212322,0,0x0,8
tick,0x7fffad96feb4,8214270,0,0x0,8
tick,0x7fffad96feb4,8216037,0,0x0,8
tick,0x7fffad96feb4,8218085,0,0x0,8
tick,0x7fffad96feb4,8220066,0,0x0,8
tick,0x7fffad96feb4,8221306,0,0x0,8
tick,0x7fffad96feb4,8223169,0,0x0,8
tick,0x7fffad96feb4,8224305,0,0x0,8
tick,0x7fffad96feb4,8226148,0,0x0,8
tick,0x7fffad96feb4,8227216,0,0x0,8
tick,0x7fffad96feb4,8229183,0,0x0,8
tick,0x7fffad96feb4,8231238,0,0x0,8
tick,0x7fffad96feb4,8233086,0,0x0,8
tick,0x7fffad96feb4,8235177,0,0x0,8
tick,0x7fffad96feb4,8236998,0,0x0,8
tick,0x7fffad96feb4,8238949,0,0x0,8
tick,0x7fffad96feb4,8240228,0,0x0,8
tick,0x7fffad96feb4,8242206,0,0x0,8
tick,0x7fffad96feb4,8244130,0,0x0,8
tick,0x7fffad96feb4,8246181,0,0x0,8
tick,0x7fffad96feb4,8248244,0,0x0,8
tick,0x7fffad96feb4,8249991,0,0x0,8
tick,0x7fffad96feb4,8252031,0,0x0,8
tick,0x7fffad96feb4,8254153,0,0x0,8
tick,0x7fffad96feb4,8256000,0,0x0,8
tick,0x7fffad96feb4,8257154,0,0x0,8
tick,0x7fffad96feb4,8258948,0,0x0,8
tick,0x7fffad96feb4,8260224,0,0x0,8
tick,0x7fffad96feb4,8261953,0,0x0,8
tick,0x7fffad96feb4,8264102,0,0x0,8
tick,0x7fffad96feb4,8266057,0,0x0,8
tick,0x7fffad96feb4,8267973,0,0x0,8
tick,0x7fffad96feb4,8269131,0,0x0,8
tick,0x7fffad96feb4,8270950,0,0x0,8
tick,0x7fffad96feb4,8272138,0,0x0,8
tick,0x7fffad96feb4,8273937,0,0x0,8
tick,0x7fffad96feb4,8275078,0,0x0,8
tick,0x7fffad96feb4,8276887,0,0x0,8
tick,0x7fffad96feb4,8278881,0,0x0,8
tick,0x7fffad96feb4,8281099,0,0x0,8
tick,0x7fffad96feb4,8282883,0,0x0,8
tick,0x7fffad96feb4,8284869,0,0x0,8
tick,0x7fffad96feb4,8286843,0,0x0,8
tick,0x7fffad96feb4,8288213,0,0x0,8
tick,0x7fffad96feb4,8290228,0,0x0,8
tick,0x7fffad96feb4,8291879,0,0x0,8
tick,0x7fffad96feb4,8294029,0,0x0,8
tick,0x7fffad96feb4,8296168,0,0x0,8
tick,0x7fffad96feb4,8297912,0,0x0,8
tick,0x7fffad96feb4,8299815,0,0x0,8
tick,0x7fffad96feb4,8302019,0,0x0,8
tick,0x7fffad96feb4,8303797,0,0x0,8
tick,0x7fffad96feb4,8305069,0,0x0,8
tick,0x7fffad96feb4,8306817,0,0x0,8
tick,0x7fffad96feb4,8308035,0,0x0,8
tick,0x7fffad96feb4,8309889,0,0x0,8
tick,0x7fffad96feb4,8311051,0,0x0,8
tick,0x7fffad96feb4,8312834,0,0x0,8
tick,0x7fffad96feb4,8314040,0,0x0,8
tick,0x7fffad96feb4,8316893,0,0x0,8
tick,0x7fffad96feb4,8318795,0,0x0,8
tick,0x7fffad96feb4,8321065,0,0x0,8
tick,0x7fffad96feb4,8322925,0,0x0,8
tick,0x7fffad96feb4,8324809,0,0x0,8
tick,0x7fffad96feb4,8326036,0,0x0,8
tick,0x7fffad96feb4,8327762,0,0x0,8
tick,0x7fffad96feb4,8328931,0,0x0,8
tick,0x7fffad96feb4,8330886,0,0x0,8
tick,0x7fffad96feb4,8333029,0,0x0,8
tick,0x7fffad96feb4,8334941,0,0x0,8
tick,0x7fffad96feb4,8336934,0,0x0,8
tick,0x7fffad96feb4,8338860,0,0x0,8
tick,0x7fffad96feb4,8340932,0,0x0,8
tick,0x7fffad96feb4,8342818,0,0x0,8
tick,0x7fffad96feb4,8344772,0,0x0,8
tick,0x7fffad96feb4,8346771,0,0x0,8
tick,0x7fffad96feb4,8349162,0,0x0,8
tick,0x7fffad96feb4,8350890,0,0x0,8
tick,0x7fffad96feb4,8352731,0,0x0,8
tick,0x7fffad96feb4,8354667,0,0x0,8
tick,0x7fffad96feb4,8356684,0,0x0,8
tick,0x7fffad96feb4,8358657,0,0x0,8
tick,0x7fffad96feb4,8360683,0,0x0,8
tick,0x7fffad96feb4,8362697,0,0x0,8
tick,0x7fffad96feb4,8364732,0,0x0,8
tick,0x7fffad96feb4,8367298,0,0x0,8
tick,0x7fffad96feb4,8368629,0,0x0,8
tick,0x7fffad96feb4,8370617,0,0x0,8
tick,0x7fffad96feb4,8372651,0,0x0,8
tick,0x7fffad96feb4,8374622,0,0x0,8
tick,0x7fffad96feb4,8376690,0,0x0,8
tick,0x7fffad96feb4,8378589,0,0x0,8
tick,0x7fffad96feb4,8380611,0,0x0,8
tick,0x7fffad96feb4,8382900,0,0x0,8
tick,0x7fffad96feb4,8384592,0,0x0,8
tick,0x7fffad96feb4,8386628,0,0x0,8
tick,0x7fffad96feb4,8388615,0,0x0,8
tick,0x7fffad96feb4,8390568,0,0x0,8
tick,0x7fffad96feb4,8392611,0,0x0,8
tick,0x7fffad96feb4,8394571,0,0x0,8
tick,0x7fffad96feb4,8396655,0,0x0,8
tick,0x7fffad96feb4,8399032,0,0x0,8
tick,0x7fffad96feb4,8400554,0,0x0,8
tick,0x7fffad96feb4,8402580,0,0x0,8
tick,0x7fffad96feb4,8404519,0,0x0,8
tick,0x7fffad96feb4,8406509,0,0x0,8
tick,0x7fffad96feb4,8408498,0,0x0,8
tick,0x7fffad96feb4,8410500,0,0x0,8
tick,0x7fffad96feb4,8412490,0,0x0,8
tick,0x7fffad96feb4,8414430,0,0x0,8
tick,0x7fffad96feb4,8416471,0,0x0,8
tick,0x7fffad96feb4,8418486,0,0x0,8
tick,0x7fffad96feb4,8419633,0,0x0,8
tick,0x7fffad96feb4,8421445,0,0x0,8
tick,0x7fffad96feb4,8423486,0,0x0,8
tick,0x7fffad96feb4,8425460,0,0x0,8
tick,0x7fffad96feb4,8427437,0,0x0,8
tick,0x7fffad96feb4,8429439,0,0x0,8
tick,0x7fffad96feb4,8430769,0,0x0,8
tick,0x7fffad96feb4,8432508,0,0x0,8
tick,0x7fffad96feb4,8434741,0,0x0,8
tick,0x7fffad96feb4,8436437,0,0x0,8
tick,0x7fffad96feb4,8438678,0,0x0,8
tick,0x7fffad96feb4,8440400,0,0x0,8
tick,0x7fffad96feb4,8442442,0,0x0,8
tick,0x7fffad96feb4,8444552,0,0x0,8
tick,0x7fffad96feb4,8446396,0,0x0,8
tick,0x7fffad96feb4,8449113,0,0x0,8
tick,0x7fffad96feb4,8450385,0,0x0,8
tick,0x7fffad96feb4,8452697,0,0x0,8
tick,0x7fffad96feb4,8454522,0,0x0,8
tick,0x7fffad96feb4,8456387,0,0x0,8
tick,0x7fffad96feb4,8457687,0,0x0,8
tick,0x7fffad96feb4,8459586,0,0x0,8
tick,0x7fffad96feb4,8461626,0,0x0,8
tick,0x7fffad96feb4,8463369,0,0x0,8
tick,0x7fffad96feb4,8464665,0,0x0,8
tick,0x7fffad96feb4,8466326,0,0x0,8
tick,0x7fffad96feb4,8468352,0,0x0,8
tick,0x7fffad96feb4,8469753,0,0x0,8
tick,0x7fffad96feb4,8471537,0,0x0,8
tick,0x7fffad96feb4,8473672,0,0x0,8
tick,0x7fffad96feb4,8475341,0,0x0,8
tick,0x7fffad96feb4,8477324,0,0x0,8
tick,0x7fffad96feb4,8478706,0,0x0,8
tick,0x7fffad96feb4,8480431,0,0x0,8
tick,0x7fffad96feb4,8482302,0,0x0,8
tick,0x7fffad96feb4,8483281,0,0x0,8
tick,0x7fffad96feb4,8484404,0,0x0,8
tick,0x7fffad96feb4,8486274,0,0x0,8
tick,0x7fffad96feb4,8487483,0,0x0,8
tick,0x7fffad96feb4,8488599,0,0x0,8
tick,0x7fffad96feb4,8490301,0,0x0,8
tick,0x7fffad96feb4,8491589,0,0x0,8
tick,0x7fffad96feb4,8493272,0,0x0,8
tick,0x7fffad96feb4,8495296,0,0x0,8
tick,0x7fffad96feb4,8497275,0,0x0,8
tick,0x7fffad96feb4,8499273,0,0x0,8
tick,0x7fffad96feb4,8501264,0,0x0,8
tick,0x7fffad96feb4,8503228,0,0x0,8
tick,0x7fffad96feb4,8505257,0,0x0,8
tick,0x7fffad96feb4,8507242,0,0x0,8
tick,0x7fffad96feb4,8509192,0,0x0,8
tick,0x7fffad96feb4,8510855,0,0x0,8
tick,0x7fffad96feb4,8512256,0,0x0,8
tick,0x7fffad96feb4,8514222,0,0x0,8
tick,0x7fffad96feb4,8516244,0,0x0,8
tick,0x7fffad96feb4,8518170,0,0x0,8
tick,0x7fffad96feb4,8520168,0,0x0,8
tick,0x7fffad96feb4,8522168,0,0x0,8
tick,0x7fffad96feb4,8524184,0,0x0,8
tick,0x7fffad96feb4,8526189,0,0x0,8
tick,0x7fffad96feb4,8528174,0,0x0,8
tick,0x7fffad96feb4,8530164,0,0x0,8
tick,0x7fffad96feb4,8532156,0,0x0,8
tick,0x7fffad96feb4,8534169,0,0x0,8
tick,0x7fffad96feb4,8536516,0,0x0,8
tick,0x7fffad96feb4,8538167,0,0x0,8
tick,0x7fffad96feb4,8540151,0,0x0,8
tick,0x7fffad96feb4,8542151,0,0x0,8
tick,0x7fffad96feb4,8544145,0,0x0,8
tick,0x7fffad96feb4,8546130,0,0x0,8
tick,0x7fffad96feb4,8548116,0,0x0,8
tick,0x7fffad96feb4,8550117,0,0x0,8
tick,0x7fffad96feb4,8552083,0,0x0,8
tick,0x7fffad96feb4,8554115,0,0x0,8
tick,0x7fffad96feb4,8556416,0,0x0,8
tick,0x7fffad96feb4,8558073,0,0x0,8
tick,0x7fffad96feb4,8560107,0,0x0,8
tick,0x7fffad96feb4,8562090,0,0x0,8
tick,0x7fffad96feb4,8564079,0,0x0,8
tick,0x7fffad96feb4,8566738,0,0x0,8
tick,0x7fffad96feb4,8568049,0,0x0,8
tick,0x7fffad96feb4,8570090,0,0x0,8
tick,0x7fffad96feb4,8572067,0,0x0,8
tick,0x7fffad96feb4,8574022,0,0x0,8
tick,0x7fffad96feb4,8576054,0,0x0,8
tick,0x7fffad96feb4,8578058,0,0x0,8
tick,0x7fffad96feb4,8580028,0,0x0,8
tick,0x7fffad96feb4,8582278,0,0x0,8
tick,0x7fffad96feb4,8584005,0,0x0,8
tick,0x7fffad96feb4,8586012,0,0x0,8
tick,0x7fffad96feb4,8587985,0,0x0,8
tick,0x7fffad96feb4,8589971,0,0x0,8
tick,0x7fffad96feb4,8591977,0,0x0,8
tick,0x7fffad96feb4,8593972,0,0x0,8
tick,0x7fffad96feb4,8595988,0,0x0,8
tick,0x7fffad96feb4,8597954,0,0x0,8
tick,0x7fffad96feb4,8599976,0,0x0,8
tick,0x7fffad96feb4,8602263,0,0x0,8
tick,0x7fffad96feb4,8604253,0,0x0,8
tick,0x7fffad96feb4,8606265,0,0x0,8
tick,0x7fffad96feb4,8608265,0,0x0,8
tick,0x7fffad96feb4,8609927,0,0x0,8
tick,0x7fffad96feb4,8611273,0,0x0,8
tick,0x7fffad96feb4,8612951,0,0x0,8
tick,0x7fffad96feb4,8614256,0,0x0,8
tick,0x7fffad96feb4,8616012,0,0x0,8
tick,0x7fffad96feb4,8618215,0,0x0,8
tick,0x7fffad96feb4,8620243,0,0x0,8
tick,0x7fffad96feb4,8621928,0,0x0,8
tick,0x7fffad96feb4,8623236,0,0x0,8
tick,0x7fffad96feb4,8624920,0,0x0,8
tick,0x7fffad96feb4,8626214,0,0x0,8
tick,0x7fffad96feb4,8627892,0,0x0,8
tick,0x7fffad96feb4,8629204,0,0x0,8
tick,0x7fffad96feb4,8630909,0,0x0,8
tick,0x7fffad96feb4,8632889,0,0x0,8
tick,0x7fffad96feb4,8634921,0,0x0,8
tick,0x7fffad96feb4,8638433,0,0x0,8
tick,0x7fffad96feb4,8638880,0,0x0,8
tick,0x7fffad96feb4,8640858,0,0x0,8
tick,0x7fffad96feb4,8643249,0,0x0,8
tick,0x7fffad96feb4,8645228,0,0x0,8
tick,0x7fffad96feb4,8647235,0,0x0,8
tick,0x7fffad96feb4,8648952,0,0x0,8
tick,0x7fffad96feb4,8651246,0,0x0,8
tick,0x7fffad96feb4,8652844,0,0x0,8
tick,0x7fffad96feb4,8654922,0,0x0,8
tick,0x7fffad96feb4,8656128,0,0x0,8
tick,0x7fffad96feb4,8657986,0,0x0,8
tick,0x7fffad96feb4,8659141,0,0x0,8
tick,0x7fffad96feb4,8660846,0,0x0,8
tick,0x7fffad96feb4,8662123,0,0x0,8
tick,0x7fffad96feb4,8663943,0,0x0,8
tick,0x7fffad96feb4,8665479,0,0x0,8
tick,0x7fffad96feb4,8666829,0,0x0,8
tick,0x7fffad96feb4,8669272,0,0x0,8
tick,0x7fffad96feb4,8671226,0,0x0,8
tick,0x7fffad96feb4,8672987,0,0x0,8
tick,0x7fffad96feb4,8674101,0,0x0,8
tick,0x7fffad96feb4,8675863,0,0x0,8
tick,0x7fffad96feb4,8677020,0,0x0,8
tick,0x7fffad96feb4,8678106,0,0x0,8
tick,0x7fffad96feb4,8680124,0,0x0,8
tick,0x7fffad96feb4,8682510,0,0x0,8
tick,0x7fffad96feb4,8684070,0,0x0,8
tick,0x7fffad96feb4,8686122,0,0x0,8
tick,0x7fffad96feb4,8687975,0,0x0,8
tick,0x7fffad96feb4,8689154,0,0x0,8
tick,0x7fffad96feb4,8690952,0,0x0,8
tick,0x7fffad96feb4,8692067,0,0x0,8
tick,0x7fffad96feb4,8693946,0,0x0,8
tick,0x7fffad96feb4,8695016,0,0x0,8
tick,0x7fffad96feb4,8696853,0,0x0,8
tick,0x7fffad96feb4,8698358,0,0x0,8
tick,0x7fffad96feb4,8699758,0,0x0,8
tick,0x7fffad96feb4,8700991,0,0x0,8
tick,0x7fffad96feb4,8702808,0,0x0,8
tick,0x7fffad96feb4,8705050,0,0x0,8
tick,0x7fffad96feb4,8706990,0,0x0,8
tick,0x7fffad96feb4,8708860,0,0x0,8
tick,0x7fffad96feb4,8710022,0,0x0,8
tick,0x7fffad96feb4,8711704,0,0x0,8
tick,0x7fffad96feb4,8714049,0,0x0,8
tick,0x7fffad96feb4,8715710,0,0x0,8
tick,0x7fffad96feb4,8717768,0,0x0,8
tick,0x7fffad96feb4,8719898,0,0x0,8
tick,0x7fffad96feb4,8721944,0,0x0,8
tick,0x7fffad96feb4,8723697,0,0x0,8
tick,0x7fffad96feb4,8724957,0,0x0,8
tick,0x7fffad96feb4,8726869,0,0x0,8
tick,0x7fffad96feb4,8728903,0,0x0,8
tick,0x7fffad96feb4,8730940,0,0x0,8
tick,0x7fffad96feb4,8734094,0,0x0,8
tick,0x7fffad96feb4,8734675,0,0x0,8
tick,0x7fffad96feb4,8736790,0,0x0,8
tick,0x7fffad96feb4,8738739,0,0x0,8
tick,0x7fffad96feb4,8740656,0,0x0,8
tick,0x7fffad96feb4,8742630,0,0x0,8
tick,0x7fffad96feb4,8744669,0,0x0,8
tick,0x7fffad96feb4,8746627,0,0x0,8
tick,0x7fffad96feb4,8748848,0,0x0,8
tick,0x7fffad96feb4,8750781,0,0x0,8
tick,0x7fffad96feb4,8752918,0,0x0,8
tick,0x7fffad96feb4,8754899,0,0x0,8
tick,0x7fffad96feb4,8756694,0,0x0,8
tick,0x7fffad96feb4,8758781,0,0x0,8
tick,0x7fffad96feb4,8760895,0,0x0,8
tick,0x7fffad96feb4,8762656,0,0x0,8
tick,0x7fffad96feb4,8767612,0,0x0,8
tick,0x7fffad96feb4,8767766,0,0x0,8
tick,0x7fffad96feb4,8770035,0,0x0,8
tick,0x7fffad96feb4,8774512,0,0x0,8
tick,0x7fffad96feb4,8776607,0,0x0,8
tick,0x7fffad96feb4,8778527,0,0x0,8
tick,0x7fffad96feb4,8781141,0,0x0,8
tick,0x7fffad96feb4,8792545,0,0x0,8
tick,0x7fffad96feb4,8797719,0,0x0,8
tick,0x7fffad96feb4,8799807,0,0x0,8
tick,0x7fffad96feb4,8801897,0,0x0,8
tick,0x7fffad96feb4,8804131,0,0x0,8
tick,0x7fffad96feb4,8819009,0,0x0,8
tick,0x7fffad96feb4,8821597,0,0x0,8
tick,0x7fffad96feb4,8823075,0,0x0,8
tick,0x7fffad96feb4,8824456,0,0x0,8
tick,0x7fffad96feb4,8827096,0,0x0,8
tick,0x7fffad96feb4,8828697,0,0x0,8
tick,0x7fffad96feb4,8830914,0,0x0,8
tick,0x7fffad96feb4,8837978,0,0x0,8
tick,0x7fffad96feb4,8839392,0,0x0,8
tick,0x7fffad96feb4,8841317,0,0x0,8
tick,0x7fffad96feb4,8843324,0,0x0,8
tick,0x7fffad96feb4,8845321,0,0x0,8
tick,0x7fffad96feb4,8847347,0,0x0,8
tick,0x7fffad96feb4,8851957,0,0x0,8
tick,0x7fffad96feb4,8853388,0,0x0,8
tick,0x7fffad96feb4,8855371,0,0x0,8
tick,0x7fffad96feb4,8857300,0,0x0,8
tick,0x7fffad96feb4,8859289,0,0x0,8
tick,0x7fffad96feb4,8861289,0,0x0,8
tick,0x7fffad96feb4,8863302,0,0x0,8
tick,0x7fffad96feb4,8865378,0,0x0,8
tick,0x7fffad96feb4,8867337,0,0x0,8
tick,0x7fffad96feb4,8869263,0,0x0,8
tick,0x7fffad96feb4,8871299,0,0x0,8
tick,0x7fffad96feb4,8872586,0,0x0,8
tick,0x7fffad96feb4,8874571,0,0x0,8
tick,0x7fffad96feb4,8876860,0,0x0,8
tick,0x7fffad96feb4,8878822,0,0x0,8
tick,0x7fffad96feb4,8880895,0,0x0,8
tick,0x7fffad96feb4,8882578,0,0x0,8
tick,0x7fffad96feb4,8884365,0,0x0,8
tick,0x7fffad96feb4,8886077,0,0x0,8
tick,0x7fffad96feb4,8887564,0,0x0,8
tick,0x7fffad96feb4,8888878,0,0x0,8
tick,0x7fffad96feb4,8890848,0,0x0,8
tick,0x7fffad96feb4,8892828,0,0x0,8
tick,0x7fffad96feb4,8894855,0,0x0,8
tick,0x7fffad96feb4,8896541,0,0x0,8
tick,0x7fffad96feb4,8897870,0,0x0,8
tick,0x7fffad96feb4,8899590,0,0x0,8
tick,0x7fffad96feb4,8901535,0,0x0,8
tick,0x7fffad96feb4,8903851,0,0x0,8
tick,0x7fffad96feb4,8905517,0,0x0,8
tick,0x7fffad96feb4,8906846,0,0x0,8
tick,0x7fffad96feb4,8908792,0,0x0,8
tick,0x7fffad96feb4,8910788,0,0x0,8
tick,0x7fffad96feb4,8912800,0,0x0,8
tick,0x7fffad96feb4,8915794,0,0x0,8
tick,0x7fffad96feb4,8916593,0,0x0,8
tick,0x7fffad96feb4,8918484,0,0x0,8
tick,0x7fffad96feb4,8920485,0,0x0,8
tick,0x7fffad96feb4,8921902,0,0x0,8
tick,0x7fffad96feb4,8923742,0,0x0,8
tick,0x7fffad96feb4,8925733,0,0x0,8
tick,0x7fffad96feb4,8927508,0,0x0,8
tick,0x7fffad96feb4,8928746,0,0x0,8
tick,0x7fffad96feb4,8930789,0,0x0,8
tick,0x7fffad96feb4,8932699,0,0x0,8
tick,0x7fffad96feb4,8934411,0,0x0,8
tick,0x7fffad96feb4,8936760,0,0x0,8
tick,0x7fffad96feb4,8938736,0,0x0,8
tick,0x7fffad96feb4,8940728,0,0x0,8
tick,0x7fffad96feb4,8942752,0,0x0,8
tick,0x7fffad96feb4,8944718,0,0x0,8
tick,0x7fffad96feb4,8946652,0,0x0,8
tick,0x7fffad96feb4,8948830,0,0x0,8
tick,0x7fffad96feb4,8950377,0,0x0,8
tick,0x7fffad96feb4,8952387,0,0x0,8
tick,0x7fffad96feb4,8953818,0,0x0,8
tick,0x7fffad96feb4,8955698,0,0x0,8
tick,0x7fffad96feb4,8957386,0,0x0,8
tick,0x7fffad96feb4,8959357,0,0x0,8
tick,0x7fffad96feb4,8960776,0,0x0,8
tick,0x7fffad96feb4,8962736,0,0x0,8
tick,0x7fffad96feb4,8965342,0,0x0,8
tick,0x7fffad96feb4,8966326,0,0x0,8
tick,0x7fffad96feb4,8968325,0,0x0,8
tick,0x7fffad96feb4,8970742,0,0x0,8
tick,0x7fffad96feb4,8972704,0,0x0,8
tick,0x7fffad96feb4,8974671,0,0x0,8
tick,0x7fffad96feb4,8976314,0,0x0,8
tick,0x7fffad96feb4,8977658,0,0x0,8
tick,0x7fffad96feb4,8979627,0,0x0,8
tick,0x7fffad96feb4,8982170,0,0x0,8
tick,0x7fffad96feb4,8983367,0,0x0,8
tick,0x7fffad96feb4,8985322,0,0x0,8
tick,0x7fffad96feb4,8987310,0,0x0,8
tick,0x7fffad96feb4,8988682,0,0x0,8
tick,0x7fffad96feb4,8990619,0,0x0,8
tick,0x7fffad96feb4,8992695,0,0x0,8
tick,0x7fffad96feb4,8994753,0,0x0,8
tick,0x7fffad96feb4,8996689,0,0x0,8
tick,0x7fffad96feb4,8998340,0,0x0,8
tick,0x7fffad96feb4,9000581,0,0x0,8
tick,0x7fffad96feb4,9001927,0,0x0,8
tick,0x7fffad96feb4,9003952,0,0x0,8
tick,0x7fffad96feb4,9006001,0,0x0,8
tick,0x7fffad96feb4,9007932,0,0x0,8
tick,0x7fffad96feb4,9009909,0,0x0,8
tick,0x7fffad96feb4,9011859,0,0x0,8
tick,0x7fffad96feb4,9013976,0,0x0,8
tick,0x7fffad96feb4,9015618,0,0x0,8
tick,0x7fffad96feb4,9017566,0,0x0,8
tick,0x7fffad96feb4,9018976,0,0x0,8
tick,0x7fffad96feb4,9020752,0,0x0,8
tick,0x7fffad96feb4,9022863,0,0x0,8
tick,0x7fffad96feb4,9024908,0,0x0,8
tick,0x7fffad96feb4,9026628,0,0x0,8
tick,0x7fffad96feb4,9028564,0,0x0,8
tick,0x7fffad96feb4,9029735,0,0x0,8
tick,0x7fffad96feb4,9032402,0,0x0,8
tick,0x7fffad96feb4,9033580,0,0x0,8
tick,0x7fffad96feb4,9035842,0,0x0,8
tick,0x7fffad96feb4,9037589,0,0x0,8
tick,0x7fffad96feb4,9039557,0,0x0,8
tick,0x7fffad96feb4,9041619,0,0x0,8
tick,0x7fffad96feb4,9042742,0,0x0,8
tick,0x7fffad96feb4,9044832,0,0x0,8
tick,0x7fffad96feb4,9046803,0,0x0,8
tick,0x7fffad96feb4,9048537,0,0x0,8
tick,0x7fffad96feb4,9050638,0,0x0,8
tick,0x7fffad96feb4,9051679,0,0x0,8
tick,0x7fffad96feb4,9053847,0,0x0,8
tick,0x7fffad96feb4,9055827,0,0x0,8
tick,0x7fffad96feb4,9057757,0,0x0,8
tick,0x7fffad96feb4,9059805,0,0x0,8
tick,0x7fffad96feb4,9061877,0,0x0,8
tick,0x7fffad96feb4,9063758,0,0x0,8
tick,0x7fffad96feb4,9066399,0,0x0,8
tick,0x7fffad96feb4,9067598,0,0x0,8
tick,0x7fffad96feb4,9073236,0,0x0,8
tick,0x7fffad96feb4,9074565,0,0x0,8
tick,0x7fffad96feb4,9077136,0,0x0,8
tick,0x7fffad96feb4,9078899,0,0x0,8
tick,0x7fffad96feb4,9083745,0,0x0,8
tick,0x7fffad96feb4,9085161,0,0x0,8
tick,0x7fffad96feb4,9086429,0,0x0,8
tick,0x7fffad96feb4,9088434,0,0x0,8
tick,0x7fffad96feb4,9089747,0,0x0,8
tick,0x7fffad96feb4,9091675,0,0x0,8
tick,0x7fffad96feb4,9093653,0,0x0,8
tick,0x7fffad96feb4,9095622,0,0x0,8
tick,0x7fffad96feb4,9097571,0,0x0,8
tick,0x7fffad96feb4,9099903,0,0x0,8
tick,0x7fffad96feb4,9101366,0,0x0,8
tick,0x7fffad96feb4,9103388,0,0x0,8
tick,0x7fffad96feb4,9105343,0,0x0,8
tick,0x7fffad96feb4,9107395,0,0x0,8
tick,0x7fffad96feb4,9109448,0,0x0,8
tick,0x7fffad96feb4,9111412,0,0x0,8
tick,0x7fffad96feb4,9113312,0,0x0,8
tick,0x7fffad96feb4,9115429,0,0x0,8
tick,0x7fffad96feb4,9117425,0,0x0,8
tick,0x7fffad96feb4,9119341,0,0x0,8
tick,0x7fffad96feb4,9121354,0,0x0,8
tick,0x7fffad96feb4,9123300,0,0x0,8
tick,0x7fffad96feb4,9125323,0,0x0,8
tick,0x7fffad96feb4,9127298,0,0x0,8
tick,0x7fffad96feb4,9129306,0,0x0,8
tick,0x7fffad96feb4,9132128,0,0x0,8
tick,0x7fffad96feb4,9133277,0,0x0,8
tick,0x7fffad96feb4,9135251,0,0x0,8
tick,0x7fffad96feb4,9137275,0,0x0,8
tick,0x7fffad96feb4,9139223,0,0x0,8
tick,0x7fffad96feb4,9141261,0,0x0,8
tick,0x7fffad96feb4,9143266,0,0x0,8
tick,0x7fffad96feb4,9144603,0,0x0,8
tick,0x7fffad96feb4,9146515,0,0x0,8
tick,0x7fffad96feb4,9148354,0,0x0,8
tick,0x7fffad96feb4,9150429,0,0x0,8
tick,0x7fffad96feb4,9152412,0,0x0,8
tick,0x7fffad96feb4,9154191,0,0x0,8
tick,0x7fffad96feb4,9155427,0,0x0,8
tick,0x7fffad96feb4,9157241,0,0x0,8
tick,0x7fffad96feb4,9159435,0,0x0,8
tick,0x7fffad96feb4,9161411,0,0x0,8
tick,0x7fffad96feb4,9163417,0,0x0,8
tick,0x7fffad96feb4,9165185,0,0x0,8
tick,0x7fffad96feb4,9167414,0,0x0,8
tick,0x7fffad96feb4,9169404,0,0x0,8
tick,0x7fffad96feb4,9171165,0,0x0,8
tick,0x7fffad96feb4,9172399,0,0x0,8
tick,0x7fffad96feb4,9174387,0,0x0,8
tick,0x7fffad96feb4,9176386,0,0x0,8
tick,0x7fffad96feb4,9178344,0,0x0,8
tick,0x7fffad96feb4,9180336,0,0x0,8
tick,0x7fffad96feb4,9182133,0,0x0,8
tick,0x7fffad96feb4,9183364,0,0x0,8
tick,0x7fffad96feb4,9185406,0,0x0,8
tick,0x7fffad96feb4,9187353,0,0x0,8
tick,0x7fffad96feb4,9189339,0,0x0,8
tick,0x7fffad96feb4,9191337,0,0x0,8
tick,0x7fffad96feb4,9193131,0,0x0,8
tick,0x7fffad96feb4,9194339,0,0x0,8
tick,0x7fffad96feb4,9196323,0,0x0,8
tick,0x7fffad96feb4,9198144,0,0x0,8
tick,0x7fffad96feb4,9200098,0,0x0,8
tick,0x7fffad96feb4,9202281,0,0x0,8
tick,0x7fffad96feb4,9204153,0,0x0,8
tick,0x7fffad96feb4,9206100,0,0x0,8
tick,0x7fffad96feb4,9208257,0,0x0,8
tick,0x7fffad96feb4,9210292,0,0x0,8
tick,0x7fffad96feb4,9212063,0,0x0,8
tick,0x7fffad96feb4,9213290,0,0x0,8
tick,0x7fffad96feb4,9215896,0,0x0,8
tick,0x7fffad96feb4,9217426,0,0x0,8
tick,0x7fffad96feb4,9219080,0,0x0,8
tick,0x7fffad96feb4,9220381,0,0x0,8
tick,0x7fffad96feb4,9222074,0,0x0,8
tick,0x7fffad96feb4,9224591,0,0x0,8
tick,0x7fffad96feb4,9226373,0,0x0,8
tick,0x7fffad96feb4,9228257,0,0x0,8
tick,0x7fffad96feb4,9230263,0,0x0,8
tick,0x7fffad96feb4,9232430,0,0x0,8
tick,0x7fffad96feb4,9234260,0,0x0,8
tick,0x7fffad96feb4,9236387,0,0x0,8
tick,0x7fffad96feb4,9238845,0,0x0,8
tick,0x7fffad96feb4,9241166,0,0x0,8
tick,0x7fffaba961d0,9242851,0,0x0,8
tick,0x7fffad96feb4,9244799,0,0x0,8
tick,0x7fffad96feb4,9246955,0,0x0,8
tick,0x7fffad96feb4,9248766,0,0x0,8
tick,0x7fffad96feb4,9251103,0,0x0,8
tick,0x7fffad96feb4,9253083,0,0x0,8
tick,0x7fffad96feb4,9254795,0,0x0,8
tick,0x7fffad96feb4,9256048,0,0x0,8
tick,0x7fffad96feb4,9257868,0,0x0,8
tick,0x7fffad96feb4,9259147,0,0x0,8
tick,0x7fffad96feb4,9260769,0,0x0,8
tick,0x7fffad96feb4,9262007,0,0x0,8
tick,0x7fffad96feb4,9263785,0,0x0,8
tick,0x7fffad96feb4,9265726,0,0x0,8
tick,0x7fffad96feb4,9267763,0,0x0,8
tick,0x7fffad96feb4,9269726,0,0x0,8
tick,0x7fffad96feb4,9272113,0,0x0,8
tick,0x7fffad96feb4,9274065,0,0x0,8
tick,0x7fffad96feb4,9275874,0,0x0,8
tick,0x7fffad96feb4,9278024,0,0x0,8
tick,0x7fffad96feb4,9279976,0,0x0,8
tick,0x7fffad96feb4,9281903,0,0x0,8
tick,0x7fffad96feb4,9283942,0,0x0,8
tick,0x7fffad96feb4,9286030,0,0x0,8
tick,0x7fffad96feb4,9287675,0,0x0,8
tick,0x7fffad96feb4,9290660,0,0x0,8
tick,0x7fffad96feb4,9293027,0,0x0,8
tick,0x7fffad96feb4,9294951,0,0x0,8
tick,0x7fffad96feb4,9296805,0,0x0,8
tick,0x7fffad96feb4,9299259,0,0x0,8
tick,0x7fffad96feb4,9300882,0,0x0,8
tick,0x7fffad96feb4,9302797,0,0x0,8
tick,0x7fffad96feb4,9304018,0,0x0,8
tick,0x7fffad96feb4,9305722,0,0x0,8
tick,0x7fffad96feb4,9306925,0,0x0,8
tick,0x7fffad96feb4,9308643,0,0x0,8
tick,0x7fffad96feb4,9309959,0,0x0,8
tick,0x7fffad96feb4,9311797,0,0x0,8
tick,0x7fffad96feb4,9314090,0,0x0,8
tick,0x7fffad96feb4,9315584,0,0x0,8
tick,0x7fffad96feb4,9317595,0,0x0,8
tick,0x7fffad96feb4,9319598,0,0x0,8
tick,0x7fffad96feb4,9321578,0,0x0,8
tick,0x7fffad96feb4,9322953,0,0x0,8
tick,0x7fffad96feb4,9324890,0,0x0,8
tick,0x7fffad96feb4,9326566,0,0x0,8
tick,0x7fffad96feb4,9327822,0,0x0,8
tick,0x7fffad96feb4,9329871,0,0x0,8
tick,0x7fffad96feb4,9331562,0,0x0,8
tick,0x7fffad96feb4,9333787,0,0x0,8
tick,0x7fffad96feb4,9335915,0,0x0,8
tick,0x7fffad96feb4,9337631,0,0x0,8
tick,0x7fffad96feb4,9338871,0,0x0,8
tick,0x7fffad96feb4,9340805,0,0x0,8
tick,0x7fffad96feb4,9342739,0,0x0,8
tick,0x7fffad96feb4,9344619,0,0x0,8
tick,0x7fffad96feb4,9345897,0,0x0,8
tick,0x7fffad96feb4,9347508,0,0x0,8
tick,0x7fffad96feb4,9349540,0,0x0,8
tick,0x7fffad96feb4,9350760,0,0x0,8
tick,0x7fffad96feb4,9352831,0,0x0,8
tick,0x7fffad96feb4,9354519,0,0x0,8
tick,0x7fffad96feb4,9355811,0,0x0,8
tick,0x7fffad96feb4,9357515,0,0x0,8
tick,0x7fffad96feb4,9358652,0,0x0,8
tick,0x7fffad96feb4,9360819,0,0x0,8
tick,0x7fffad96feb4,9362718,0,0x0,8
tick,0x7fffad96feb4,9364768,0,0x0,8
tick,0x7fffad96feb4,9366480,0,0x0,8
tick,0x7fffad96feb4,9368479,0,0x0,8
tick,0x7fffad96feb4,9370453,0,0x0,8
tick,0x7fffad96feb4,9371716,0,0x0,8
tick,0x7fffad96feb4,9373783,0,0x0,8
tick,0x7fffad96feb4,9375770,0,0x0,8
tick,0x7fffad96feb4,9377502,0,0x0,8
tick,0x7fffad96feb4,9378809,0,0x0,8
tick,0x7fffad96feb4,9380446,0,0x0,8
tick,0x7fffad96feb4,9382416,0,0x0,8
tick,0x7fffad96feb4,9384427,0,0x0,8
tick,0x7fffad96feb4,9385712,0,0x0,8
tick,0x7fffad96feb4,9387679,0,0x0,8
tick,0x7fffad96feb4,9389722,0,0x0,8
tick,0x7fffad96feb4,9391427,0,0x0,8
tick,0x7fffad96feb4,9392758,0,0x0,8
tick,0x7fffad96feb4,9394651,0,0x0,8
tick,0x7fffad96feb4,9396457,0,0x0,8
tick,0x7fffad96feb4,9398446,0,0x0,8
tick,0x7fffad96feb4,9400690,0,0x0,8
tick,0x7fffad96feb4,9402982,0,0x0,8
tick,0x7fffad96feb4,9404426,0,0x0,8
tick,0x7fffad96feb4,9406332,0,0x0,8
tick,0x7fffad96feb4,9407735,0,0x0,8
tick,0x7fffad96feb4,9409835,0,0x0,8
tick,0x7fffad96feb4,9411390,0,0x0,8
tick,0x7fffad96feb4,9413692,0,0x0,8
tick,0x7fffad96feb4,9415912,0,0x0,8
tick,0x7fffad96feb4,9417587,0,0x0,8
tick,0x7fffad96feb4,9419579,0,0x0,8
tick,0x7fffad96feb4,9421326,0,0x0,8
tick,0x7fffad96feb4,9422682,0,0x0,8
tick,0x7fffad96feb4,9424644,0,0x0,8
tick,0x7fffad96feb4,9426905,0,0x0,8
tick,0x7fffad96feb4,9428639,0,0x0,8
tick,0x7fffad96feb4,9430544,0,0x0,8
tick,0x7fffad96feb4,9432304,0,0x0,8
tick,0x7fffad96feb4,9434625,0,0x0,8
tick,0x7fffad96feb4,9436282,0,0x0,8
tick,0x7fffad96feb4,9437577,0,0x0,8
tick,0x7fffad96feb4,9439553,0,0x0,8
tick,0x7fffad96feb4,9441488,0,0x0,8
tick,0x7fffad96feb4,9443555,0,0x0,8
tick,0x7fffad96feb4,9445327,0,0x0,8
tick,0x7fffad96feb4,9446439,0,0x0,8
tick,0x7fffad96feb4,9448477,0,0x0,8
tick,0x7fffad96feb4,9450244,0,0x0,8
tick,0x7fffad96feb4,9452524,0,0x0,8
tick,0x7fffad96feb4,9454362,0,0x0,8
tick,0x7fffad96feb4,9455573,0,0x0,8
tick,0x7fffad96feb4,9457272,0,0x0,8
tick,0x7fffad96feb4,9459452,0,0x0,8
tick,0x7fffad96feb4,9461609,0,0x0,8
tick,0x7fffad96feb4,9463511,0,0x0,8
tick,0x7fffad96feb4,9465279,0,0x0,8
tick,0x7fffad96feb4,9467612,0,0x0,8
tick,0x7fffad96feb4,9469488,0,0x0,8
tick,0x7fffad96feb4,9471170,0,0x0,8
tick,0x7fffad96feb4,9472538,0,0x0,8
tick,0x7fffad96feb4,9474451,0,0x0,8
tick,0x7fffad96feb4,9476529,0,0x0,8
tick,0x7fffad96feb4,9478594,0,0x0,8
tick,0x7fffad96feb4,9480208,0,0x0,8
tick,0x7fffad96feb4,9482154,0,0x0,8
tick,0x7fffad96feb4,9483310,0,0x0,8
tick,0x7fffad96feb4,9484430,0,0x0,8
tick,0x7fffad96feb4,9486194,0,0x0,8
tick,0x7fffad96feb4,9488403,0,0x0,8
tick,0x7fffad96feb4,9490443,0,0x0,8
tick,0x7fffad96feb4,9492140,0,0x0,8
tick,0x7fffad96feb4,9493506,0,0x0,8
tick,0x7fffad96feb4,9495403,0,0x0,8
tick,0x7fffad96feb4,9497167,0,0x0,8
tick,0x7fffad96feb4,9499120,0,0x0,8
tick,0x7fffad96feb4,9500615,0,0x0,8
tick,0x7fffad96feb4,9502239,0,0x0,8
tick,0x7fffad96feb4,9503471,0,0x0,8
tick,0x7fffad96feb4,9505225,0,0x0,8
tick,0x7fffad96feb4,9506369,0,0x0,8
tick,0x7fffad96feb4,9508177,0,0x0,8
tick,0x7fffad96feb4,9509467,0,0x0,8
tick,0x7fffad96feb4,9511131,0,0x0,8
tick,0x7fffad96feb4,9512423,0,0x0,8
tick,0x7fffad96feb4,9514413,0,0x0,8
tick,0x7fffad96feb4,9516398,0,0x0,8
tick,0x7fffad96feb4,9518166,0,0x0,8
tick,0x7fffad96feb4,9519345,0,0x0,8
tick,0x7fffad96feb4,9521053,0,0x0,8
tick,0x7fffad96feb4,9523070,0,0x0,8
tick,0x7fffad96feb4,9525285,0,0x0,8
tick,0x7fffad96feb4,9527056,0,0x0,8
tick,0x7fffad96feb4,9529396,0,0x0,8
tick,0x7fffad96feb4,9531347,0,0x0,8
tick,0x7fffad96feb4,9533062,0,0x0,8
tick,0x7fffad96feb4,9535061,0,0x0,8
tick,0x7fffad96feb4,9537054,0,0x0,8
tick,0x7fffad96feb4,9539024,0,0x0,8
tick,0x7fffad96feb4,9540977,0,0x0,8
tick,0x7fffad96feb4,9543025,0,0x0,8
tick,0x7fffad96feb4,9545186,0,0x0,8
tick,0x7fffad96feb4,9547025,0,0x0,8
tick,0x7fffad96feb4,9548998,0,0x0,8
tick,0x7fffad96feb4,9551489,0,0x0,8
tick,0x7fffad96feb4,9552971,0,0x0,8
tick,0x7fffad96feb4,9554976,0,0x0,8
tick,0x7fffad96feb4,9556985,0,0x0,8
tick,0x7fffad96feb4,9558974,0,0x0,8
tick,0x7fffad96feb4,9560956,0,0x0,8
tick,0x7fffad96feb4,9562969,0,0x0,8
tick,0x7fffad96feb4,9565168,0,0x0,8
tick,0x7fffad96feb4,9566981,0,0x0,8
tick,0x7fffad96feb4,9568960,0,0x0,8
tick,0x7fffad96feb4,9570932,0,0x0,8
code-creation,LazyCompile,10,9572466,0x32a34b748b0,130,exit node:internal/process/per_thread:182:16,0x31522b0a4d0,~
code-source-info,0x32a34b748b0,36,4990,5474,C0O5004C5O5012C17O5024C20O5012C26O5051C31O5068C36O5082C43O5099C47O5114C52O5127C58O5146C64O5163C68O5178C73O5186C86O5207C94O5186C100O5427C105O5435C115O5454C123O5435C129O5473,,
tick,0x7fffad96d144,9572967,1,0x7ff6d82aa460,6,0x7ff6d8d6aa80,0x32a34b7492b,0x167f8a4588c
